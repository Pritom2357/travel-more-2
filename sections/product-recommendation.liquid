<div class="container">
  <div
    class="product-recommendations"
    data-url="{{ routes.product_recommendations_url }}?section_id={{ section.id }}&product_id={{ product.id }}&limit=4&intent=related"
  >
    {%- if recommendations.performed? and recommendations.products_count > 0 -%}
      {% if recommendations.intent == 'related' %}
        <h2 class="recommendations-title">{{ section.settings.section_title | default: 'Recommended Products: ' }}</h2>
      {% elsif recommendations.intent == 'complementary' %}
        <h2 class="recommendations-title">Pair it with</h2>
      {% endif %}

      <div class="row">
        {%- for product in recommendations.products -%}
          {% render 'product-card', product: product %}
        {%- endfor -%}
      </div>
    {%- else -%}
      <!-- Optional: Show a loading spinner or a placeholder -->
      <div class="loading-spinner"></div>
    {%- endif -%}
  </div>
</div>

{% javascript %}
  const handleIntersection = (entries, observer) => {
    if (!entries[0].isIntersecting) return;

    observer.unobserve(productRecommendationsSection);

    const url = productRecommendationsSection.dataset.url;

    fetch(url)
      .then(response => response.text())
      .then(text => {
        const html = document.createElement('div');
        html.innerHTML = text;
        const recommendations = html.querySelector('.product-recommendations');

        if (recommendations && recommendations.innerHTML.trim().length) {
          productRecommendationsSection.innerHTML = recommendations.innerHTML;
        }
      })
      .catch(e => {
        console.error(e);
      });
  };

  const productRecommendationsSection = document.querySelector('.product-recommendations');
  const observer = new IntersectionObserver(handleIntersection, {rootMargin: '0px 0px 200px 0px'});

  observer.observe(productRecommendationsSection);
{% endjavascript %}

<style>
    /* === Product Recommendations Section === */

  .product-recommendations {
    padding: 40px 0;
    background-color: #f8f9fa; /* Light grey background for distinction */
  }

  .recommendations-title {
    font-size: 1.75rem;
    font-weight: 700;
    margin-bottom: 30px;
    text-align: center;
    color: #343a40;
  }

  /* === Product Card Styling === */

  .product-card {
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    border: none;
  }

  .product-card:hover {
    transform: translateY(-10px);
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);
  }

  .image-container {
    position: relative;
    overflow: hidden;
  }

  .featured-img,
  .second-img {
    transition: opacity 0.5s ease;
  }

  .second-img {
    position: absolute;
    top: 0;
    left: 0;
    opacity: 0;
  }

  .image-container:hover .second-img {
    opacity: 1;
  }

  .card-title a {
    color: #343a40;
    transition: color 0.3s ease;
  }

  .card-title a:hover {
    color: #0d6efd; /* Bootstrap Primary Color */
  }

  .vendor-name {
    display: block;
    font-size: 0.85rem;
    color: #6c757d;
    margin-top: 5px;
  }

  .view-details-btn {
    background-color: #0d6efd;
    color: #fff;
    transition: background-color 0.3s ease;
  }

  .view-details-btn:hover {
    background-color: #0b5ed7;
  }

  .view-details-btn:focus {
    box-shadow: 0 0 0 0.2rem rgba(13, 110, 253, 0.5);
  }

  /* === Responsive Adjustments === */

  @media (max-width: 992px) {
    .recommendations-title {
      font-size: 1.5rem;
    }
  }

  @media (max-width: 768px) {
    .recommendations-title {
      font-size: 1.25rem;
    }

    .product-recommendations {
      padding: 30px 0;
    }
  }

  /* === Additional Enhancements === */

  /* Smooth image transitions on hover */
  .image-container img {
    width: 100%;
    height: auto;
    display: block;
  }

  /* Adjust card footer spacing */
  .card-footer {
    padding-top: 0;
  }

  /* Ensure all product cards have equal height */
  .card.h-100 {
    display: flex;
    flex-direction: column;
  }

  /* Ensure the 'View Details' button sticks to the bottom */
  .card-body {
    flex: 1 1 auto;
  }

  /* Customize scrollbar for the recommendations if needed */
  .product-recommendations::-webkit-scrollbar {
    width: 8px;
  }

  .product-recommendations::-webkit-scrollbar-track {
    background: #f1f1f1;
  }

  .product-recommendations::-webkit-scrollbar-thumb {
    background-color: #c1c1c1;
    border-radius: 10px;
    border: 2px solid #f1f1f1;
  }

  /* Optional: Add a loading spinner while recommendations load */
  .loading-spinner {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 200px; /* Adjust as needed */
  }

  .loading-spinner::after {
    content: "";
    width: 40px;
    height: 40px;
    border: 5px solid #f3f3f3;
    border-top: 5px solid #0d6efd;
    border-radius: 50%;
    animation: spin 1s linear infinite;
  }

  /* Spinner Animation */
  @keyframes spin {
    to { transform: rotate(360deg); }
  }
</style>

{% schema %}
{
  "name": "Product recommendations",
  "settings": [
    {
      "type": "text",
      "id": "section_title",
      "label": "Section Title",
      "default": "You may also like"
    },
    {
      "type": "range",
      "id": "limit",
      "label": "Product Limit",
      "min": 1,
      "max": 8,
      "step": 1,
      "default": 4
    }
  ]
}
{% endschema %}
