<div class="search-header-container">
  <div class="search-header-wrapper">
    <div class="search-results-title">
      {% if search.terms != blank %}
        <h1>Your search results for: <span class="search-term">"{{ search.terms }}"</span></h1>
        <div class="results-summary">
          <span class="result-count">{{ search.results_count }} results found</span>
        </div>
      {% else %}
        <h1>All Products</h1>
      {% endif %}
    </div>
    <div class="filter-options">
      <div class="filter-container">
        <div class="filter-item collection-filter">
          <label for="category-filter">Category</label>
          <div class="select-wrapper">
            <select id="category-filter">
              <option value="all">All Categories</option>
              {% for collection in collections %}
                {% if collection != '' %}
                  <option value="{{ collection.handle }}" {% if request.params.collection == collection.title %}selected{% endif %}}>
                    {{ collection.title }}
                  </option>
                {% endif %}
              {% endfor %}
            </select>
            <span class="arrow-icon">
              <i class="bi bi-chevron-down"></i>
            </span>
          </div>
        </div>
        
        <div class="filter-item price-filter">
          <label for="price-range">Price Range</label>
          <div class="price-slider-container">
            <div class="price-range">
              <span id="price-min">{{ shop.currency }} {{ section.settings.min_price | default: 0 }}</span>
              <span id="current-price-display">{{ shop.currency }} {{ section.settings.max_price | default: 100000 }}</span>
            </div>
            <input type="range" id="price-range" min="{{ section.settings.min_price | default: 0 }}" max="{{ section.settings.max_price | default: 100000 }}" step="{{ section.settings.price_step | default: 1000 }}" value="{{ section.settings.max_price | default: 100000 }}">
          </div>
        </div>
        
        <div class="filter-item sorting-options">
          <label for="sort-by">Sort By</label>
          <div class="select-wrapper">
            <select id="sort-by">
              <option value="relevance" {% if search.sort_by == 'relevance' %}selected{% endif %}>Relevance</option>
              <option value="price-ascending" {% if search.sort_by == 'price-ascending' %}selected{% endif %}>Price: Low to High</option>
              <option value="price-descending" {% if search.sort_by == 'price-descending' %}selected{% endif %}>Price: High to Low</option>
              <option value="created-descending" {% if search.sort_by == 'created-descending' %}selected{% endif %}>Newest First</option>
              <option value="best-selling" {% if search.sort_by == 'best-selling' %}selected{% endif %}>Best Selling</option>
            </select>
            <span class="arrow-icon">
              <i class="bi bi-chevron-down"></i>
            </span>
          </div>
        </div>
        
        <div class="filter-item apply-filters">
          <button id="apply-filters-btn" class="btn-apply-filters">
            <i class="bi bi-funnel-fill"></i> Apply Filters
          </button>
        </div>
      </div>
    </div>
  </div>
  <div class="search-results-container">
    <div class="container">
      <div id="active-filters" class="active-filters" {% unless request.params.collection or request.params.price_max or request.params.sort_by %}style="display:none"{% endunless %}>
        <h5>Active Filters:</h5>
        <div class="filter-tags">
          {% if request.params.collection %}
            <span class="filter-tag" data-filter-type="collection">
              Category: 
              {% for collection in collections %}
                {% if collection.handle == request.params.collection %}
                  {{ collection.title }}
                {% endif %}
              {% endfor %}
              <i class="bi bi-x-circle remove-filter" data-filter-type="collection"></i>
            </span>
          {% endif %}
          
          {% if request.params.price_max %}
            <span class="filter-tag" data-filter-type="price_max">
              Price: Under {{ shop.currency }} {{ request.params.price_max | times: 1 | money_without_currency }}
              <i class="bi bi-x-circle remove-filter" data-filter-type="price_max"></i>
            </span>
          {% endif %}
          
          {% if request.params.sort_by and request.params.sort_by != 'relevance' %}
            <span class="filter-tag" data-filter-type="sort_by">
              Sorted by: 
              {% case request.params.sort_by %}
                {% when 'price-ascending' %}Low to High Price
                {% when 'price-descending' %}High to Low Price
                {% when 'created-descending' %}Newest First
                {% when 'best-selling' %}Best Selling
              {% endcase %}
              <i class="bi bi-x-circle remove-filter" data-filter-type="sort_by"></i>
            </span>
          {% endif %}
          
          <button id="clear-all-filters" class="clear-all">Clear All</button>
        </div>
      </div>
      
      {% if search.results_count > 0 %}
        <div class="row search-results-grid">
          {% for item in search.results %}
            <div class="col-12 col-md-6 col-lg-4 mb-4 search-result-item" 
                 data-price="{{ item.price | times: 0.01 }}" 
                 data-type="{{ item.object_type }}"
                 {% if item.object_type == 'product' %}
                   data-collections="{% for c in item.collections %}{{ c.handle }} {% endfor %}"
                   data-max-days="{{ item.metafields.custom.maximum_days_allowed | default: 30 }}"
                   data-max-persons="{{ item.metafields.custom.maximum_persons_allowed | default: 10 }}"
                   data-destination="{{ item.metafields.custom.destination | escape }}"
                 {% endif %}>
              <div class="search-result-card h-100">
                {% case item.object_type %}
                  {% when 'product' %}
                    <a href="{{ item.url }}" class="product-link">
                      <div class="result-image">
                        {% if item.featured_image %}
                          <img src="{{ item.featured_image | img_url: '400x400', crop: 'center' }}" alt="{{ item.title }}">
                        {% else %}
                          <div class="placeholder-image">
                            <i class="bi bi-image"></i>
                          </div>
                        {% endif %}
                        <div class="hover-overlay">
                          <div class="view-btn">View Details</div>
                        </div>
                      </div>
                    </a>
                    
                    <div class="result-info">
                      <h3 class="result-title">
                        <a href="{{ item.url }}">{{ item.title }}</a>
                      </h3>
                      
                      <div class="result-price product-price" data-price="{{ item.price | times: 0.01 }}">
                        {% if item.compare_at_price > item.price %}
                          <span class="sale-price">{{ item.price | money_with_currency }}</span>
                          <span class="compare-price">{{ item.compare_at_price | money_with_currency }}</span>
                        {% else %}
                          <span>{{ item.price | money_with_currency }}</span>
                        {% endif %}
                      </div>
                      
                      <div class="product-vendor">
                        <span>{{ item.vendor }}</span>
                      </div>
                    </div>
                    
                  {% when 'article' %}
                    <a href="{{ item.url }}" class="article-link">
                      <div class="result-image">
                        {% if item.image %}
                          <img src="{{ item.image | img_url: '400x300', crop: 'center' }}" alt="{{ item.title }}">
                        {% else %}
                          <div class="placeholder-image">
                            <i class="bi bi-newspaper"></i>
                          </div>
                        {% endif %}
                        <div class="hover-overlay">
                          <div class="view-btn">Read Article: {{ item.title | truncate: 30 }}</div>
                        </div>
                      </div>
                    </a>
                    
                    <div class="result-info">
                      <div class="article-meta">
                        <span class="article-date">{{ item.published_at | date: '%B %d, %Y' }}</span>
                        {% if item.tags.size > 0 %}
                          <span class="article-tag">{{ item.tags.first }}</span>
                        {% endif %}
                      </div>
                      
                      <h3 class="result-title">
                        <a href="{{ item.url }}">{{ item.title }}</a>
                      </h3>
                      
                      <div class="result-excerpt">
                        <p>{{ item.content | strip_html | truncatewords: 20 }}</p>
                      </div>
                    </div>
                    
                 {% endcase %}
              </div>
            </div>
          {% endfor %}
        </div>
        
        {% if paginate.pages > 1 %}
          <div class="pagination-container">
            <ul class="pagination">
              {% if paginate.previous %}
                <li><a href="{{ paginate.previous.url }}" class="prev-page"><i class="bi bi-chevron-left"></i> Previous</a></li>
              {% endif %}
              
              {% for part in paginate.parts %}
                {% if part.is_link %}
                  <li><a href="{{ part.url }}">{{ part.title }}</a></li>
                {% else %}
                  <li><span class="current">{{ part.title }}</span></li>
                {% endif %}
              {% endfor %}
              
              {% if paginate.next %}
                <li><a href="{{ paginate.next.url }}" class="next-page">Next <i class="bi bi-chevron-right"></i></a></li>
              {% endif %}
            </ul>
          </div>
        {% endif %}
        
        {% if search.results_count > 12 %}
          <div class="text-center mt-4 mb-5">
            <button id="load-more-results" class="btn-load-more" aria-label="Load more search results">
              <span>Load More Results</span>
              <i class="bi bi-arrow-down-circle"></i>
            </button>
          </div>
        {% endif %}
        
      {% else %}
        {% if search.results_count == 0 %}
          <div class="no-results">
            <div class="no-results-icon">
              <i class="bi bi-search"></i>
            </div>
            <h2>No results found for "{{ search.terms }}"</h2>
            <p>We couldn't find any tours matching your criteria.</p>
            
            <div class="search-suggestions">
              <h3>Suggestions:</h3>
              <ul>
                <li>Check your spelling</li>
                <li>Try more general keywords</li>
                <li>Try different dates or group size</li>
              </ul>
            </div>
            
            <div class="search-actions mt-4">
              <a href="/collections/all" class="btn-secondary" aria-label="Browse all available tours and travel experiences">Browse All Tours</a>
              <a href="/pages/tour-request" class="btn-primary" aria-label="Request a custom tour tailored to your preferences">Request Custom Tour</a>
            </div>
          </div>
        {% endif %}
      {% endif %}
    </div>
  </div>
</div>

<style>
  .search-header-container {
    background-color: #f8f9fa;
    {% comment %} background-image: linear-gradient(135deg, rgba(0,0,0,0.03) 25%, transparent 25%, transparent 50%, rgba(0,0,0,0.03) 50%, rgba(0,0,0,0.03) 75%, transparent 75%, transparent); {% endcomment %}
    background-size: 20px 20px;
    padding: 60px 0 40px;
    margin-bottom: 40px;
    border-bottom: 1px solid rgba(0,0,0,0.08);
    box-shadow: 0 1px 15px rgba(0,0,0,0.05);
  }

  .search-header-wrapper {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
    text-align: center;
  }

  .search-results-title h1 {
    font-size: 2.5rem;
    font-weight: 700;
    color: #333;
    margin-bottom: 10px;
    line-height: 1.3;
  }

  .search-term {
    color: #449EED;
    position: relative;
    font-style: italic;
  }

  .search-term::after {
    content: '';
    position: absolute;
    bottom: -4px;
    left: 0;
    width: 100%;
    height: 2px;
    background-color: #449EED;
    opacity: 0.5;
  }

  .results-summary {
    font-size: 1.1rem;
    color: #4a4a4a;
    margin-top: 5px;
  }

  .result-count {
    font-weight: 500;
  }

  @media (max-width: 768px) {
    .search-header-container {
      padding: 40px 0 30px;
    }
    
    .search-results-title h1 {
      font-size: 1.8rem;
    }
    
    .results-summary {
      font-size: 1rem;
    }
  }

  @media (max-width: 480px) {
    .search-results-title h1 {
      font-size: 1.5rem;
    }
  }

  .filter-options {
    margin-top: 30px;
    margin-bottom: 30px;
  }

  .filter-container {
    display: flex;
    flex-wrap: wrap;
    align-items: flex-end;
    gap: 20px;
    justify-content: center;
  }

  .filter-item {
    flex: 1;
    min-width: 180px;
    max-width: 300px;
  }

  .filter-item label {
    display: block;
    font-weight: 500;
    margin-bottom: 8px;
    color: #555;
    font-size: 0.9rem;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  .select-wrapper {
    position: relative;
    width: 100%;
  }

  .select-wrapper select {
    appearance: none;
    width: 100%;
    padding: 10px 15px;
    font-size: 1rem;
    background-color: #fff;
    border: 1px solid #ddd;
    border-radius: 6px;
    cursor: pointer;
    color: #333;
    transition: all 0.3s ease;
  }

  .select-wrapper select:hover {
    border-color: #aaa;
  }

  .select-wrapper select:focus {
    border-color: #449EED;
    box-shadow: 0 0 0 2px rgba(68, 158, 237, 0.2);
    outline: none;
  }

  .arrow-icon {
    position: absolute;
    right: 15px;
    top: 50%;
    transform: translateY(-50%);
    pointer-events: none;
    color: #666;
  }

  .price-slider-container {
    position: relative;
    padding: 5px 0;
  }

  .price-range {
    display: flex;
    justify-content: space-between;
    margin-bottom: 10px;
    font-size: 0.9rem;
    color: #666;
  }

  #current-price-display {
    font-weight: 600;
    color: #449EED;
  }

  input[type="range"] {
    -webkit-appearance: none;
    width: 100%;
    height: 6px;
    border-radius: 5px;
    background: linear-gradient(to right, #449EED 0%, #449EED 100%);
    outline: none;
  }

  input[type="range"]::-webkit-slider-thumb {
    -webkit-appearance: none;
    width: 18px;
    height: 18px;
    border-radius: 50%;
    background: #fff;
    border: 2px solid #449EED;
    cursor: pointer;
    box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);
    transition: all 0.3s ease;
  }

  input[type="range"]::-webkit-slider-thumb:hover {
    background: #449EED;
    transform: scale(1.1);
  }

  input[type="range"]::-moz-range-thumb {
    width: 18px;
    height: 18px;
    border-radius: 50%;
    background: #fff;
    border: 2px solid #449EED;
    cursor: pointer;
    box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);
    transition: all 0.3s ease;
  }

  input[type="range"]::-moz-range-thumb:hover {
    background: #449EED;
    transform: scale(1.1);
  }

  /* Apply Button Styling */
  .apply-filters button {
    width: 100%;
    padding: 10px 15px;
    background-color: #449EED;
    color: white;
    border: none;
    border-radius: 6px;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
  }

  .apply-filters button:hover {
    background-color: #3080c5;
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  }

  .apply-filters button:active {
    transform: translateY(0);
  }

  .apply-filters button i {
    font-size: 0.9rem;
  }

  @media (max-width: 768px) {
    .filter-container {
      flex-direction: column;
      align-items: stretch;
      gap: 15px;
    }
    
    .filter-item {
      max-width: none;
    }
  }

  .search-results-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 15px 60px;
  }

  .active-filters {
    background-color: #f8f9fa;
    padding: 15px;
    border-radius: 8px;
    margin-bottom: 25px;
  }

  .active-filters h5 {
    font-size: 1rem;
    margin-bottom: 10px;
    font-weight: 600;
    color: #333;
  }

  .filter-tags {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    gap: 10px;
  }

  .filter-tag {
    background-color: #e9f2fc;
    border: 1px solid #d1e4f8;
    color: #449EED;
    padding: 6px 12px;
    border-radius: 20px;
    font-size: 0.9rem;
    display: inline-flex;
    align-items: center;
    transition: all 0.2s ease;
  }

  .filter-tag .remove-filter {
    margin-left: 8px;
    cursor: pointer;
    color: #449EED;
    transition: all 0.2s ease;
  }

  .filter-tag .remove-filter:hover {
    color: #cc0000;
    transform: scale(1.1);
  }

  .filter-tag:hover {
    background-color: #d1e4f8;
  }

  .clear-all {
    background: none;
    border: 1px solid #ccc;
    color: #666;
    padding: 6px 12px;
    border-radius: 20px;
    font-size: 0.9rem;
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .clear-all:hover {
    background-color: #f0f0f0;
    border-color: #999;
    color: #333;
  }

  .search-result-card {
    background-color: #fff;
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    transition: all 0.3s ease;
    height: 100%;
    display: flex;
    flex-direction: column;
  }

  .search-result-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1);
  }

  .result-image {
    position: relative;
    height: 240px;
    overflow: hidden;
  }

  .result-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.6s ease;
  }

  .search-result-card:hover .result-image img {
    transform: scale(1.05);
  }

  .placeholder-image {
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: #f8f9fa;
    color: #aaa;
  }

  .placeholder-image i {
    font-size: 3rem;
  }

  .placeholder-image.page-image {
    background-color: #f0f5ff;
    color: #449EED;
  }

  .hover-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.2);
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    transition: all 0.3s ease;
  }

  .search-result-card:hover .hover-overlay {
    opacity: 1;
  }

  .view-btn {
    background-color: #fff;
    color: #333;
    padding: 8px 16px;
    border-radius: 4px;
    font-weight: 500;
    font-size: 0.9rem;
    transition: all 0.2s ease;
  }

  .view-btn:hover {
    background-color: #449EED;
    color: #fff;
    transform: scale(1.05);
  }

  .result-info {
    padding: 20px;
    display: flex;
    flex-direction: column;
    flex-grow: 1;
  }

  .result-title {
    font-size: 1.1rem;
    font-weight: 600;
    margin-bottom: 10px;
    line-height: 1.3;
  }

  .result-title a {
    color: #333;
    text-decoration: none;
    transition: color 0.2s ease;
  }

  .result-title a:hover {
    color: #449EED;
  }

  .result-price {
    font-size: 1.1rem;
    font-weight: 700;
    color: #333;
    margin-bottom: 10px;
  }

  .sale-price {
    color: #e4432d;
    margin-right: 8px;
  }

  .compare-price {
    text-decoration: line-through;
    font-size: 0.9rem;
    color: #999;
    font-weight: 400;
  }

  .product-vendor {
    font-size: 0.85rem;
    color: #777;
    margin-top: auto;
  }

  .article-meta {
    display: flex;
    align-items: center;
    margin-bottom: 10px;
    flex-wrap: wrap;
    gap: 10px;
  }

  .article-date {
    font-size: 0.85rem;
    color: #888;
  }

  .article-tag {
    background-color: #f0f5ff;
    color: #449EED;
    padding: 3px 8px;
    border-radius: 12px;
    font-size: 0.8rem;
  }

  .result-excerpt {
    font-size: 0.9rem;
    color: #666;
    margin-top: 10px;
  }

  .result-excerpt p {
    margin: 0;
  }

  .pagination-container {
    margin-top: 40px;
    display: flex;
    justify-content: center;
  }

  .pagination {
    display: flex;
    align-items: center;
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .pagination li {
    margin: 0 5px;
  }

  .pagination li a, .pagination li span {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    min-width: 36px;
    height: 36px;
    padding: 0 10px;
    border-radius: 18px;
    font-size: 0.9rem;
    text-decoration: none;
    transition: all 0.2s ease;
  }

  .pagination li a {
    background-color: #f8f9fa;
    color: #333;
    border: 1px solid #ddd;
  }

  .pagination li a:hover {
    background-color: #e9ecef;
    border-color: #ccc;
  }

  .pagination li span.current {
    background-color: #449EED;
    color: #fff;
    border: 1px solid #449EED;
  }

  .prev-page, .next-page {
    padding: 0 15px !important;
  }

  .btn-load-more {
    background-color: #fff;
    border: 2px solid #449EED;
    color: #449EED;
    padding: 10px 24px;
    border-radius: 30px;
    font-weight: 600;
    font-size: 1rem;
    cursor: pointer;
    display: inline-flex;
    align-items: center;
    gap: 8px;
    transition: all 0.3s ease;
  }

  .btn-load-more:hover {
    background-color: #449EED;
    color: #fff;
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(68, 158, 237, 0.3);
  }

  .btn-load-more:active {
    transform: translateY(0);
  }

  .no-results {
    text-align: center;
    padding: 60px 20px;
  }

  .no-results-icon {
    font-size: 3rem;
    color: #ccc;
    margin-bottom: 20px;
  }

  .no-results h2 {
    font-size: 1.8rem;
    color: #333;
    margin-bottom: 15px;
  }

  .no-results p {
    font-size: 1.1rem;
    color: #666;
    max-width: 600px;
    margin: 0 auto 30px;
  }

  .search-suggestions {
    background-color: #f8f9fa;
    border-radius: 8px;
    padding: 20px;
    max-width: 500px;
    margin: 0 auto 30px;
  }

  .search-suggestions h3 {
    font-size: 1.1rem;
    margin-bottom: 10px;
  }

  .search-suggestions ul {
    list-style: none;
    padding: 0;
    margin: 0;
    text-align: left;
  }

  .search-suggestions li {
    padding: 5px 0;
    position: relative;
    padding-left: 20px;
  }

  .search-suggestions li::before {
    content: "•";
    position: absolute;
    left: 0;
    color: #449EED;
  }

  .search-actions {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 15px;
  }

  .btn-secondary, .btn-primary {
    padding: 10px 20px;
    border-radius: 6px;
    font-weight: 500;
    text-decoration: none;
    transition: all 0.2s ease;
  }

  .btn-secondary {
    background-color: #f8f9fa;
    color: #333;
    border: 1px solid #ddd;
  }

  .btn-secondary:hover {
    background-color: #e9ecef;
    border-color: #ccc;
  }

  .btn-primary {
    background-color: #449EED;
    color: #fff;
    border: 1px solid #449EED;
  }

  .btn-primary:hover {
    background-color: #3080c5;
    border-color: #3080c5;
  }

  /* Responsive styles for search results */
  @media (max-width: 991px) {
    .search-results-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @media (max-width: 767px) {
    .search-results-grid {
      grid-template-columns: 1fr;
    }
    
    .result-image {
      height: 200px;
    }
    
    .filter-tags {
      gap: 8px;
    }
    
    .filter-tag {
      font-size: 0.85rem;
    }
    
    .search-actions {
      flex-direction: column;
      gap: 10px;
    }
    
    .btn-secondary, .btn-primary {
      width: 100%;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const priceRange = document.getElementById('price-range');
    const currentPriceDisplay = document.getElementById('current-price-display');
    const applyFiltersBtn = document.getElementById('apply-filters-btn');
    const categoryFilter = document.getElementById('category-filter');
    const sortBy = document.getElementById('sort-by');
    
    const currencySymbol = {{ shop.currency | json }};
    
    function initializePriceSlider() {
      if (!priceRange || !currentPriceDisplay) return;
      
      const urlParams = new URLSearchParams(window.location.search);
      const priceParam = urlParams.get('price_max');
      
      if (priceParam) {
        priceRange.value = priceParam;
        currentPriceDisplay.textContent = currencySymbol+ " " + parseInt(priceParam).toLocaleString();
      } else {
        currentPriceDisplay.textContent = currencySymbol + " " + parseInt(priceRange.value).toLocaleString();
      }
      
      updateSliderBackground();
    }
    
    if (priceRange && currentPriceDisplay) {
      priceRange.addEventListener('input', function() {
        currentPriceDisplay.textContent = currencySymbol + " " + parseInt(this.value).toLocaleString();
        updateSliderBackground();
      });
    }
    
    function updateSliderBackground() {
      if (!priceRange) return;
      
      const min = parseInt(priceRange.min) || 0;
      const max = parseInt(priceRange.max) || 100000;
      const value = parseInt(priceRange.value) || max;
      
      const percentage = ((value - min) / (max - min)) * 100;
      
      priceRange.style.background = `linear-gradient(to right, #449EED 0%, #449EED ${percentage}%, #ddd ${percentage}%, #ddd 100%)`;
    }
    
    if (applyFiltersBtn) {
      applyFiltersBtn.addEventListener('click', function() {
        applyFilters();
      });
    }
    
    function applyFilters() {
      const urlParams = new URLSearchParams(window.location.search);
      const searchQuery = urlParams.get('q') || '';

      let newUrl = '/search'; 

      newUrl += `?q=${encodeURIComponent(searchQuery)}`;
      
      newUrl += '&type=product,article';

      if (categoryFilter && categoryFilter.value !== 'all') {
        newUrl += `&collection=${encodeURIComponent(categoryFilter.value)}`;
      }

      if (priceRange) {
        const max = parseInt(priceRange.max);
        const value = parseInt(priceRange.value);

        if (value < max) {
          newUrl += `&price_max=${encodeURIComponent(value)}`;
        }
      }

      if (sortBy && sortBy.value !== 'relevance') {
        newUrl += `&sort_by=${encodeURIComponent(sortBy.value)}`;
      }

      console.log("Navigating to:", newUrl);
      window.location.href = newUrl; 
    }
    
    initializePriceSlider();
    
    console.log('Price range element:', priceRange);
    console.log('Current price display:', currentPriceDisplay);
    console.log('Apply filters button:', applyFiltersBtn);
  });

  document.addEventListener('DOMContentLoaded', function() {
    document.querySelectorAll('.remove-filter').forEach(button => {
      button.addEventListener('click', function() {
        const filterType = this.getAttribute('data-filter-type');
        const params = new URLSearchParams(window.location.search);
        
        console.log("Removing filter:", filterType); 
        
        params.delete(filterType);
        
        if (!params.has('type')) {
          params.set('type', 'product,article');
        }
        
        window.location.href = `/search?${params.toString()}`;
      });
    });
    
    const clearAllBtn = document.getElementById('clear-all-filters');
    if (clearAllBtn) {
      clearAllBtn.addEventListener('click', function() {
        const params = new URLSearchParams(window.location.search);
        const searchQuery = params.get('q') || '';
        
        window.location.href = `/search?q=${encodeURIComponent(searchQuery)}&type=product,article`;
      });
    }
    
    const loadMoreBtn = document.getElementById('load-more-results');
    if (loadMoreBtn) {
      let currentPage = 1;
      
      loadMoreBtn.addEventListener('click', function() {
        currentPage++;
        this.innerHTML = '<span>Loading...</span><div class="loader"></div>';
        this.disabled = true;
        
        const params = new URLSearchParams(window.location.search);
        params.set('page', currentPage);
        
        fetch(`/search?${params.toString()}`)
          .then(response => response.text())
          .then(html => {
            const parser = new DOMParser();
            const doc = parser.parseFromString(html, 'text/html');
            const newItems = doc.querySelectorAll('.search-result-item');
            
            if (newItems.length > 0) {
              const resultsContainer = document.querySelector('.search-results-grid');
              
              newItems.forEach(item => {
                resultsContainer.appendChild(item.cloneNode(true));
              });
              
              const morePages = doc.querySelector('.pagination .next-page') !== null;
              
              if (!morePages) {
                loadMoreBtn.style.display = 'none';
              } else {
                loadMoreBtn.innerHTML = '<span>Load More Results</span><i class="bi bi-arrow-down-circle"></i>';
                loadMoreBtn.disabled = false;
              }
              
              applyClientSidePriceFilter();
            } else {
              loadMoreBtn.style.display = 'none';
            }
          })
          .catch(error => {
            console.error('Error loading more results:', error);
            loadMoreBtn.innerHTML = '<span>Try Again</span><i class="bi bi-arrow-counterclockwise"></i>';
            loadMoreBtn.disabled = false;
          });
      });
    }
  });

  function applyClientSidePriceFilter() {
    const params = new URLSearchParams(window.location.search);
    const maxPrice = params.get('price_max');
    
    if (!maxPrice) return;
    
    const maxPriceValue = parseInt(maxPrice);
    let visibleCount = 0;
    
    document.querySelectorAll('.search-result-item[data-type="product"]').forEach(item => {
      const priceEl = item.querySelector('.result-price');
      if (!priceEl || !priceEl.dataset.price) return;
      
      const price = parseFloat(priceEl.dataset.price);
      if (isNaN(price)) return;
      
      if (price > maxPriceValue) {
        item.style.display = 'none';
      } else {
        item.style.display = '';
        visibleCount++;
      }
    });
    
    const resultCount = document.querySelector('.result-count');
    if (resultCount && visibleCount > 0) {
      resultCount.textContent = `${visibleCount} results found`;
    }
    
    if (visibleCount === 0) {
      const resultsGrid = document.querySelector('.search-results-grid');
      const noPriceResults = document.querySelector('.no-price-results');
      
      if (resultsGrid && !noPriceResults) {
        const messageEl = document.createElement('div');
        messageEl.className = 'no-price-results col-12 text-center py-5';
        messageEl.innerHTML = `
          <div class="alert alert-warning">
            <i class="bi bi-exclamation-circle mb-3" style="font-size: 2rem;"></i>
            <h4>No products match your price filter</h4>
            <p>We couldn't find any products under $${maxPriceValue.toLocaleString()}.</p>
            <button class="btn-reset-price mt-3">Reset Price Filter</button>
          </div>
        `;
        
        resultsGrid.prepend(messageEl);
        
        document.querySelector('.btn-reset-price').addEventListener('click', function() {
          params.delete('price_max');
          window.location.href = `/search?${params.toString()}`;
        });
      }
    }
  }

  function applyClientSideCollectionFilter() {
    const params = new URLSearchParams(window.location.search);
    const collectionParam = params.get('collection');
    
    if (!collectionParam || collectionParam === 'all') return;
    
    console.log("Filtering by collection:", collectionParam);
    
    let visibleCount = 0;
    let productsInCollection = 0;
    
    document.querySelectorAll('.search-result-item[data-type="product"]').forEach(item => {
      if (item.style.display === 'none') return;
      
      const collectionsAttr = item.getAttribute('data-collections');
      if (!collectionsAttr) {
        item.style.display = 'none';
        return;
      }
      
      const collections = collectionsAttr.trim().split(' ');
      console.log("Product collections:", collections, "Looking for:", collectionParam);
      
      if (collections.includes(collectionParam)) {
        item.style.display = '';
        visibleCount++;
        productsInCollection++;
      } else {
        item.style.display = 'none';
      }
    });
    
    const resultCount = document.querySelector('.result-count');
    if (resultCount) {
      resultCount.textContent = `${visibleCount} results found`;
    }
    
    if (visibleCount === 0 && productsInCollection === 0) {
      const resultsGrid = document.querySelector('.search-results-grid');
      const noCollectionResults = document.querySelector('.no-collection-results');
      
      if (resultsGrid && !noCollectionResults) {
        const messageEl = document.createElement('div');
        messageEl.className = 'no-collection-results col-12 text-center py-5';
        
        let collectionTitle = collectionParam;
        document.querySelectorAll('#category-filter option').forEach(option => {
          if (option.value === collectionParam) {
            collectionTitle = option.textContent.trim();
          }
        });
        
        messageEl.innerHTML = `
          <div class="alert alert-warning">
            <i class="bi bi-exclamation-circle mb-3" style="font-size: 2rem;"></i>
            <h4>No products found in "${collectionTitle}"</h4>
            <p>We couldn't find any products matching your search in this collection.</p>
            <button class="btn-reset-collection mt-3">Reset Collection Filter</button>
          </div>
        `;
        
        resultsGrid.prepend(messageEl);
        
        document.querySelector('.btn-reset-collection').addEventListener('click', function() {
          params.delete('collection');
          window.location.href = `/search?${params.toString()}`;
        });
      }
    }
  }

  function applyTourFilters() {
    const params = new URLSearchParams(window.location.search);
    const duration = params.get('duration');
    const travelers = params.get('travelers');
    
    if (!duration && !travelers) return;
    
    let visibleCount = 0;
    
    document.querySelectorAll('.search-result-item[data-type="product"]').forEach(item => {
      if (item.style.display === 'none') return;
      
      let shouldShow = true;
      
      if (duration) {
        const maxDays = parseInt(item.getAttribute('data-max-days') || '0');
        if (maxDays < parseInt(duration)) {
          shouldShow = false;
        }
      }
      
      if (travelers && shouldShow) {
        const maxPersons = parseInt(item.getAttribute('data-max-persons') || '0');
        if (maxPersons < parseInt(travelers)) {
          shouldShow = false;
        }
      }
      
      if (shouldShow) {
        item.style.display = '';
        visibleCount++;
      } else {
        item.style.display = 'none';
      }
    });
    
    const resultCount = document.querySelector('.result-count');
    if (resultCount) {
      resultCount.textContent = `${visibleCount} results found`;
    }
  }

  document.addEventListener('DOMContentLoaded', function() {
    setTimeout(function() {
      applyClientSidePriceFilter();
      applyClientSideCollectionFilter();
      applyTourFilters();
    }, 100);
  });
</script>