
<link
  rel="stylesheet"
  href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
/>
<link
  rel="stylesheet"
  href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css"
/>

<script src="https://code.jquery.com/jquery-3.6.0.min.js" async></script>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<div class="search_section_{{ section.id }}">
  <div class="search-header py-5 bg-light">
    <div class="container">
      <div class="jumbotron jumbotron-fluid text-center">
        <h2 class="heading mb-4">Search Results for "{{ search.terms }}"</h2>
        <div class="search-page-form">
          <form class="d-flex justify-content-center" action="{{ routes.search_url }}" method="get" autocomplete="off">
            <div class="input-group w-50">
              <input
                class="form-control"
                type="search"
                name="q"
                id="search-input"
                placeholder="Search for products, articles, pages..."
                aria-label="Search"
                value="{{ search.terms | escape }}"
                required
              >
              <button class="btn btn-primary" type="submit" aria-label="Search">
                <i class="bi bi-search"></i>
              </button>
            </div>
            <!-- Auto-suggestions Dropdown -->
            <div id="suggestions" class="list-group position-absolute w-50"></div>
          </form>
        </div>
      </div>
    </div>
  </div>

  <div class="filters-sort py-3 bg-white shadow-sm">
    <div class="container d-flex justify-content-between align-items-center flex-wrap">
      <div class="filters d-flex align-items-center mb-2">
        
        <div class="me-3">
          <label for="category-filter" class="form-label mb-0">Category:</label>
          <select id="category-filter" class="form-select">
            <option value="all">All</option>
            {% for collection in collections %}
              <option value="{{ collection.handle }}">{{ collection.title }}</option>
            {% endfor %}
          </select>
        </div>
        <div class="me-3">
          <label for="price-filter" class="form-label mb-0">Price:</label>
          <select id="price-filter" class="form-select">
            <option value="all">All</option>
            <option value="low">Under $50</option>
            <option value="mid">$50 - $150</option>
            <option value="high">Over $150</option>
          </select>
        </div>
      </div>

      <div class="sorting d-flex align-items-center mb-2">
        <label for="sort-by" class="form-label me-2 mb-0">Sort By:</label>
        <select id="sort-by" class="form-select">
          <option value="relevance">Relevance</option>
          <option value="price-asc">Price: Low to High</option>
          <option value="price-desc">Price: High to Low</option>
          <option value="newest">Newest Arrivals</option>
        </select>
      </div>
    </div>
  </div>

  <div class="container my-5">
    <div class="search-results">
      {% if search.results.size > 0 %}
        <div class="row g-4">
          {% for item in search.results %}
            {% case item.object_type %}
              {% when 'product' %}
                {% render 'product-card', product: item %}
              {% when 'article' %}
                {% render 'article-card', article: item %}
              {% comment %} {% when 'page' %}
                {% render 'page-card', page: item %} {% endcomment %}
            {% endcase %}
          {% endfor %}
        </div>

        {% if search.results.size > settings.search_limit %}
          <div class="d-flex justify-content-center mt-4">
            <button id="load-more" class="btn btn-secondary">Load More</button>
          </div>
        {% endif %}
      {% else %}
        <div class="alert alert-warning text-center" role="alert">
          No results found for "{{ search.terms }}". Please try different keywords.
        </div>
      {% endif %}
    </div>
  </div>
</div>

<style>
  .search-header .heading {
    font-size: 2.5rem;
    color: #333;
  }

  .search-page-form {
    position: relative;
  }

  #suggestions {
    z-index: 1000;
    max-height: 300px;
    overflow-y: auto;
    border-radius: 0 0 5px 5px;
    top: 100%;
    left: 25%;
    width: 100%;
    display: none; /* Initially hidden */
  }
  #suggestions.show {
    display: block;
  }

  .filters-sort .form-select {
    width: 200px;
  }

  .product-card {
    transition: transform 0.3s, box-shadow 0.3s;
  }
  .product-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 16px rgba(0,0,0,0.2);
  }

  #load-more {
    transition: background-color 0.3s, transform 0.3s;
  }
  #load-more:hover {
    background-color: #0056b3;
    transform: scale(1.05);
  }
</style>

<!-- Custom JavaScript -->
<script>
  document.addEventListener('DOMContentLoaded', function () {
    // Auto-suggestions
    const searchInput = document.getElementById('search-input');
    const suggestionsBox = document.getElementById('suggestions');

    searchInput.addEventListener('input', function () {
      const query = this.value.trim();
      if (query.length < 2) {
        suggestionsBox.innerHTML = '';
        suggestionsBox.style.display = 'none';
        return;
      }

      // Fetch auto-suggestions via Shopify's AJAX API or a custom endpoint
      fetch(`/search/suggest.json?q=${encodeURIComponent(query)}&resources[type]=product,article,page&resources[limit]=5`)
        .then(response => response.json())
        .then(data => {
          suggestionsBox.innerHTML = '';
          if (data.resources.results.products.length > 0 || data.resources.results.articles.length > 0 || data.resources.results.pages.length > 0) {
            data.resources.results.products.forEach(product => {
              suggestionsBox.innerHTML += `
                <a href="${product.url}" class="list-group-item list-group-item-action">
                  <i class="bi bi-bag-fill me-2"></i>${product.title}
                </a>
              `;
            });
            data.resources.results.articles.forEach(article => {
              suggestionsBox.innerHTML += `
                <a href="${article.url}" class="list-group-item list-group-item-action">
                  <i class="bi bi-journal-text me-2"></i>${article.title}
                </a>
              `;
            });
            data.resources.results.pages.forEach(page => {
              suggestionsBox.innerHTML += `
                <a href="${page.url}" class="list-group-item list-group-item-action">
                  <i class="bi bi-file-earmark-text me-2"></i>${page.title}
                </a>
              `;
            });
            suggestionsBox.style.display = 'block';
          } else {
            suggestionsBox.innerHTML = '<div class="list-group-item">No suggestions found.</div>';
            suggestionsBox.style.display = 'block';
          }
        })
        .catch(error => {
          console.error('Error fetching suggestions:', error);
          suggestionsBox.innerHTML = '<div class="list-group-item">Error fetching suggestions.</div>';
          suggestionsBox.style.display = 'block';
        });
    });

    // Hide suggestions when clicking outside
    document.addEventListener('click', function (e) {
      if (!e.target.closest('.search-page-form')) {
        suggestionsBox.innerHTML = '';
        suggestionsBox.style.display = 'none';
      }
    });

    // Advanced Filtering
    const categoryFilter = document.getElementById('category-filter');
    const priceFilter = document.getElementById('price-filter');
    const sortBy = document.getElementById('sort-by');
    const searchForm = document.querySelector('.search-page-form form');

    function updateSearch() {
      const query = searchInput.value.trim();
      const category = categoryFilter.value;
      const price = priceFilter.value;
      const sort = sortBy.value;

      let url = `/search?q=${encodeURIComponent(query)}`;

      if (category !== 'all') {
        url += `+collection:${encodeURIComponent(category)}`;
      }

      if (price !== 'all') {
        if (price === 'low') {
          url += `+price:<50`;
        } else if (price === 'mid') {
          url += `+price:>=50 price:<150`;
        } else if (price === 'high') {
          url += `+price:>=150`;
        }
      }

      if (sort !== 'relevance') {
        url += `&sort_by=${sort}`;
      }

      window.location.href = url;
    }

    categoryFilter.addEventListener('change', updateSearch);
    priceFilter.addEventListener('change', updateSearch);
    sortBy.addEventListener('change', updateSearch);

    // Load More Functionality
    const loadMoreBtn = document.getElementById('load-more');
    if (loadMoreBtn) {
      let currentPage = 1;
      const searchResults = document.querySelector('.search-results .row');

      loadMoreBtn.addEventListener('click', function () {
        currentPage += 1;
        const query = searchInput.value.trim();
        const category = categoryFilter.value;
        const price = priceFilter.value;
        const sort = sortBy.value;

        let url = `/search?q=${encodeURIComponent(query)}&page=${currentPage}`;

        if (category !== 'all') {
          url += `+collection:${encodeURIComponent(category)}`;
        }

        if (price !== 'all') {
          if (price === 'low') {
            url += `+price:<50`;
          } else if (price === 'mid') {
            url += `+price:>=50 price:<150`;
          } else if (price === 'high') {
            url += `+price:>=150`;
          }
        }

        if (sort !== 'relevance') {
          url += `&sort_by=${sort}`;
        }

        fetch(url)
          .then(response => response.text())
          .then(html => {
            const parser = new DOMParser();
            const doc = parser.parseFromString(html, 'text/html');
            const newResults = doc.querySelectorAll('.search-results .row .product-card');
            newResults.forEach(card => {
              searchResults.appendChild(card);
            });

            // If no more results, hide the load more button
            const newLoadMoreBtn = doc.getElementById('load-more');
            if (!newLoadMoreBtn) {
              loadMoreBtn.style.display = 'none';
            }
          })
          .catch(error => {
            console.error('Error loading more results:', error);
          });
      });
    }
  });
</script>

<!-- Example Product Card Snippet (product-card.liquid) -->
{% comment %}
  Ensure you have a 'product-card.liquid' snippet with the following structure.
  You can customize it further based on your design preferences.
{% endcomment %}
{% comment %}
<!-- snippets/product-card.liquid -->
<div class="col-md-4">
  <div class="card product-card h-100">
    <a href="{{ product.url }}">
      {% if product.featured_image %}
        <img src="{{ product.featured_image | img_url: '480x480' }}" class="card-img-top" alt="{{ product.title }}">
      {% else %}
        <img src="{{ 'placeholder-image.png' | asset_url }}" class="card-img-top" alt="Placeholder">
      {% endif %}
    </a>
    <div class="card-body d-flex flex-column">
      <h5 class="card-title">
        <a href="{{ product.url }}" class="text-decoration-none text-dark">{{ product.title }}</a>
      </h5>
      <p class="card-text mt-auto">
        <span class="fw-bold">{{ product.price | money }}</span>
      </p>
    </div>
  </div>
</div>
{% endcomment %}

<!-- Similarly, create 'article-card.liquid' and 'page-card.liquid' snippets with appropriate designs -->

<!-- Pagination Styles (Optional for better aesthetics) -->
<style>
  /* Load More Button Animation */
  #load-more {
    position: relative;
    overflow: hidden;
  }
  #load-more::after {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: rgba(255,255,255,0.2);
    transform: skewX(-45deg);
    transition: all 0.5s;
  }
  #load-more:hover::after {
    left: 100%;
  }
</style>
