{%- assign product_limit = section.settings.product_per_page -%}
{%- assign show_second_img = section.settings.show_second_img -%}
{%- assign show_vendor = section.settings.show_vendor -%}
{%- assign enable_filtering = section.settings.enable_filtering -%}

{% liquid
  case section.settings.number_of_col
    when 2
      assign column_desk = 'col-lg-6 col-md-6 col-sm-12'
    when 3
      assign column_desk = 'col-lg-4 col-md-4 col-sm-12'
    when 4
      assign column_desk = 'col-lg-3 col-md-3 col-sm-12'
    when 6
      assign column_desk = 'col-lg-2 col-md-2 col-sm-12'
    else
      assign column_desk = 'col-lg-4 col-md-4 col-sm-12'
  endcase
%}

<div class="{%- if enable_filtering -%}container-fluid {%- else %} container{%- endif -%}">
  <div class="row">
    {% if enable_filtering %}
      <div class="col-12 col-lg-3 col-xl-2 px-0 px-lg-2 mb-3 mb-lg-0 filter-column">
        {% render 'collection-filter', collection: collection %}
      </div>
    {% endif %}
    <div class="col-12 {% if enable_filtering %}col-lg-9 col-xl-10{% endif %} py-3">
      <div class="collection-header">
        <div class="d-flex justify-content-between flex-wrap">
          <div class="product-counter">
            <h3 class="heading">{{ collection.title | escape }}</h3>
            {% if collection.description != blank %}
              <div class="collection-description">{{ collection.description }}</div>
            {% endif %}
          </div>
          
          <div class="filter-sort-controls d-flex flex-wrap align-items-center">
            <!-- Filter toggle button placed next to Sort -->
            {% if enable_filtering %}
              <button class="filter-toggle-btn d-lg-none" type="button" aria-expanded="false" aria-label="Toggle filters">
                <i class="bi bi-funnel"></i>
                <span>Filters</span>
              </button>
            {% endif %}
            
            <!-- Sort dropdown -->
            <div class="sort-by--container">
              <div class="d-flex">
                <label>Product Sort</label>
                <select id="sort-by" class="sort-by form-control form-control-sm">
                  {% for option in collection.sort_options %}
                    <option value="{{ option.value }}" {% if option.value == collection.sort_by %} selected {% endif %}>
                      {{ option.name }}
                    </option>
                  {% endfor %}
                </select>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="filter-heading">
        <p>Total products: ({{ collection.all_products_count }})</p>
      </div>
      <div class="collection-products my-3">
        {% paginate collection.products by product_limit -%}
          <div class="row">
            {% for product in collection.products %}
              {%- render 'product-card',
                product: product,
                column: column_desk,
                show_second_img: show_second_img,
                show_vendor: show_vendor
              -%}
            {% endfor %}
          </div>

          <div class="pagination justify-content-center mt-5">
            {% render 'pagination', paginate: paginate %}
          </div>
        {% endpaginate %}
      </div>
    </div>
  </div>
</div>

<script>
  Shopify.queryParams = {};
  if(location.search.length){
    for(let keyValue, i=0, queries = location.search.substr(1).split('&'); i < queries.length; i++){
      keyValue = queries[i].split('=');
      if(keyValue.length > 1){
        Shopify.queryParams[decodeURIComponent(keyValue[0])] = decodeURIComponent(keyValue[1]);
      }
    }
  }

  document.querySelector('.sort-by').addEventListener('change', function(e) {
    let value = e.currentTarget.value;
    Shopify.queryParams.sort_by = value;
    location.search = new URLSearchParams(Shopify.queryParams).toString();
  });
</script>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const filterToggle = document.querySelector('.filter-toggle-btn');
    const filtersDrawer = document.getElementById('filtersDrawer');
    
    if (filterToggle && filtersDrawer) {
      filterToggle.addEventListener('click', function() {
        filtersDrawer.classList.toggle('show');
        const isExpanded = filterToggle.getAttribute('aria-expanded') === 'true';
        filterToggle.setAttribute('aria-expanded', !isExpanded);
      });
    }
  });
</script>

<style>

  .collection-chooser select {
    width: 100%;
    padding: 0.375rem 0.75rem;
    border: 1px solid #ced4da;
    border-radius: 0.25rem;
  }

  .collection-chooser label {
    font-weight: bold;
  }

  /* Radio Buttons */
  .collection-chooser .form-check {
    margin-bottom: 0.5rem;
  }

  .collection-chooser .form-check-input:checked ~ .form-check-label {
    font-weight: bold;
    color: #0d6efd; /* Bootstrap primary color */
  }

  /* Color Swatches (if using color filter) */
  .color-swatch {
    display: inline-block;
    width: 24px;
    height: 24px;
    border-radius: 50%;
    border: 2px solid #ddd;
    cursor: pointer;
    transition: transform 0.2s, border 0.2s;
  }

  .color-swatch:hover {
    transform: scale(1.1);
    border: 2px solid #000;
  }

  .form-check-input:checked + .color-swatch {
    box-shadow: 0 0 0 2px #0d6efd;
  }

  /* Accordion Styles */
  .accordion-button:not(.collapsed) {
    color: #0d6efd;
    background-color: #e7f1ff;
  }

  .accordion-button::after {
    transition: transform 0.2s;
  }

  .accordion-button.collapsed::after {
    transform: rotate(-90deg);
  }

  /* Apply Button Styling */
  .filter-group-display__submit {
    margin-top: 10px;
  }

  .filter-group-display__submit .btn {
    width: 100%;
  }

  /* Mobile responsive fixes */
  @media (max-width: 991px) {
    .filter-column {
      order: 1; /* Makes filter appear on top on mobile */
    }
    
    /* Adjust collection header spacing on mobile */
    .collection-header {
      margin-top: 15px;
    }
    
    /* Improve collection header on mobile */
    .collection-header .d-flex {
      flex-direction: column;
    }
    
    .sort-by--container {
      margin-top: 15px;
      margin-bottom: 10px;
    }
    
    /* Make filter take full width on mobile but contained */
    .collection-filters-container {
      padding: 0 10px;
    }
  }

  /* Add to your style section */
  .filter-sort-controls {
    gap: 15px;
  }

  .filter-toggle-btn {
    padding: 8px 12px;
    background-color: #f1f1f1;
    border: none;
    border-radius: 6px;
    display: flex;
    align-items: center;
    gap: 8px;
    font-weight: 500;
    transition: all 0.2s ease;
    height: 38px; /* Match the height of the sort dropdown */
  }

  .filter-toggle-btn:hover {
    background-color: #e5e5e5;
  }

  .filter-toggle-btn i {
    font-size: 16px;
  }

  @media (max-width: 576px) {
    .filter-sort-controls {
      width: 100%;
      margin-top: 15px;
      justify-content: space-between;
    }
    
    .filter-toggle-btn {
      flex: 1;
      justify-content: center;
      margin-right: 8px;
    }
    
    .sort-by--container {
      flex: 1;
    }
  }
</style>

{% schema %}
{
  "name": "Collection template",
  "settings": [
    {
      "type":"header",
      "content": "product settings"
    },
    {
      "type": "range",
      "id": "product_per_page",
      "label": "Product per page",
      "min": 4,
      "max": 24,
      "step": 2,
      "default": 12
    },
    {
      "type": "range",
      "id": "number_of_col",
      "label": "Number of column on Desktop",
      "min": 2,
      "max": 6,
      "step": 1,
      "default": 3
    },
    {
      "type": "header",
      "content": "Product Card"
    },
    {
      "type": "checkbox",
      "id": "show_second_img",
      "label": "Show second image on hover",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "label": "Show vendor",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "enable_filtering",
      "label": "Enable Filtering",
      "default": true
    }
  ]
}
{% endschema %}
