{% assign bg_img_url = section.settings.bg_img | img_url: '1600x' %}

<!-- Convert Header Background Color -->
{% assign input_hex_color = section.settings.bg_header %}
{% include 'hex-to-rgb' %}
{% assign header_red = red %}
{% assign header_green = green %}
{% assign header_blue = blue %}

<!-- Show header only if we are NOT on the home page -->
{% if template.name != 'index' %}
  <nav class="navbar navbar-expand-lg nav-settings">
    <div class="container-fluid">
      {% capture logo_html %}
        <a class="navbar-brand" href="#">
          <img
            src="{{ section.settings.logo | img_url: '100x' }}"
            alt="{{ shop.name }}"
            width= "{{ section.settings.logo_size }}"
            height= "auto"
          >
        </a>
      {% endcapture %}

      {% capture toggle_button %}
        <button
          class="navbar-toggler"
          type="button"
          data-bs-toggle="collapse"
          data-bs-target="#navbarSupportedContent"
          aria-controls="navbarSupportedContent"
          aria-expanded="false"
          aria-label="Toggle navigation"
        >
          <i class="bi bi-list btn-outline-success"></i>
        </button>
      {% endcapture %}

      <div class="d-lg-none ms-auto mobile-logo-container">{{ logo_html }}</div>

      {% capture icons_html %}
        <div class="d-flex icons-container">
          <a href="{{ routes.account_url }}" class="btn btn-outline-success ms-2" aria-label="Account">
            <i class="bi bi-person"></i>
          </a>
          <a href="{{ routes.cart_url }}" class="btn btn-outline-success ms-2" aria-label="Cart">
            <i class="bi bi-cart"></i>
          </a>
        </div>
      {% endcapture %}

      {% capture search_html %}
        <div class="d-flex nav-utilities d-none d-lg-flex {% if section.settings.enable_search_bar == false %}nav-utilities-empty{% endif %}">
          {% if section.settings.enable_search_bar %}
            <form class="d-flex search-form">
              <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search">
              <button class="btn btn-outline-success" type="submit">
                <i class="bi bi-search"></i>
              </button>
            </form>
          {% endif %}
          <div class="d-none d-lg-block">{{ icons_html }}</div>
        </div>
      {% endcapture %}

      {% capture menu_html %}
        <div class="collapse navbar-collapse nav-text" id="navbarSupportedContent">
          <!-- Determine alignment class for nav items -->
          {% assign alignment_class = 'justify-content-start' %}
          {% if section.settings.header_alignment == 'center' %}
            {% assign alignment_class = 'justify-content-center' %}
          {% elsif section.settings.header_alignment == 'right' %}
            {% assign alignment_class = 'justify-content-end' %}
          {% endif %}
  
          <ul class="navbar-nav mb-2 mb-lg-0 {{ alignment_class }} flex-grow-1">
            {% for menu in section.settings.menu.links %}
              <li class="nav-item {% if menu.links.size > 1 %} dropdown {% endif %}">
                <a
                  class="nav-link active {% if menu.links.size > 1 %} dropdown-toggle {% endif %}"
                  aria-current="page"
                  href="{{ menu.url }}"
                  {% if menu.links.size > 1 %}
                    id="navbarDropdown_{{ forloop.index }}"
                    role="button"
                    data-bs-toggle="dropdown"
                    aria-expanded="false"
                  {% endif %}
                >
                  {{- menu.title -}}
                </a>
  
                {% if menu.links.size > 1 %}
                  <ul class="dropdown-menu" aria-labelledby="navbarDropdown_{{ forloop.index }}">
                    {% for sub_menu in menu.links %}
                      <li>
                        <a class="dropdown-item" href="{{ sub_menu.url }}">{{ sub_menu.title }}</a>
                      </li>
                    {% endfor %}
                  </ul>
                {% endif %}
              </li>
            {% endfor %}
          </ul>
          
          <!-- Mobile-only search and icons -->
          <div class="d-block d-lg-none mt-3 mobile-utilities">
            {% if section.settings.enable_search_bar %}
              <form class="d-flex mb-3">
                <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search">
                <button class="btn btn-outline-success" type="submit">
                  <i class="bi bi-search"></i>
                </button>
              </form>
            {% endif %}
            <div class="d-flex">{{ icons_html }}</div>
          </div>
        </div>
      {% endcapture %}

      <div class="d-lg-none order-1">{{ toggle_button }}</div>

      {% case section.settings.header_layout %}
        {% when 'logo_menu_search' %}
          <div class="d-none d-lg-block order-lg-1">{{ logo_html }}</div>
          <div class="order-3 order-lg-2 flex-grow-1">{{ menu_html }}</div>
          <div class="order-2 order-lg-3">{{ search_html }}</div>
        {% when 'menu_logo_search' %}
          <div class="order-2 order-lg-2">{{ logo_html }}</div>
          <div class="order-3 order-lg-1 flex-grow-1">{{ menu_html }}</div>
          <div class="order-1 order-lg-3">{{ search_html }}</div>
        {% when 'menu_search_logo' %}
          <div class="order-1 order-lg-3">{{ logo_html }}</div>
          <div class="order-3 order-lg-1 flex-grow-1">{{ menu_html }}</div>
          <div class="order-2 order-lg-2">{{ search_html }}</div>
        {% when 'logo_search_menu' %}
          <div class="order-1 order-lg-1">{{ logo_html }}</div>
          <div class="order-3 order-lg-3 flex-grow-1">{{ menu_html }}</div>
          <div class="order-2 order-lg-2">{{ search_html }}</div>
        {% when 'search_logo_menu' %}
          <div class="order-2 order-lg-2">{{ logo_html }}</div>
          <div class="order-3 order-lg-3 flex-grow-1">{{ menu_html }}</div>
          <div class="order-1 order-lg-1">{{ search_html }}</div>
        {% when 'search_menu_logo' %}
          <div class="order-3 order-lg-3">{{ logo_html }}</div>
          <div class="order-2 order-lg-2 flex-grow-1">{{ menu_html }}</div>
          <div class="order-1 order-lg-1">{{ search_html }}</div>
        {% else %}
          <div class="order-1 order-lg-1">{{ logo_html }}</div>
          <div class="order-3 order-lg-2 flex-grow-1">{{ menu_html }}</div>
          <div class="order-2 order-lg-3">{{ search_html }}</div>
      {% endcase %}

    </div>
  </nav>
{% endif %}

<style>
  /*
    Nav (Header) Container
  */
  .nav-settings {
    position: {% if section.settings.is_sticky_header %}fixed{% else %}relative{% endif %};
    top: 0;
    left: 0;
    z-index: 1000;
    width: 100%;
    background-color: rgba({{ header_red }}, {{ header_green }}, {{ header_blue }}, {{ section.settings.header_bg_opacity }}) !important;
    color: {{ section.settings.header_text_color }} !important;
    font-size: {{ section.settings.menu_text_size }}px;
    transition: background-color 0.3s ease;
  }

  {% if section.settings.is_sticky_header %}
    .nav-settings.scrolled{
      background-color: rgba({{ header_red }}, {{ header_green }}, {{ header_blue }}, 1) !important;
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }
  {% endif %}

  /*
    Nav Links
  */
  .nav-settings .nav-link {
    color: {{ section.settings.header_text_color }} !important;
    transition: color 0.3s, background-color 0.3s;
  }

  .nav-settings .nav-link:hover {
    color: {{ section.settings.header_text_hover_color }} !important;
    {% if section.settings.header_link_hover_bg != blank %}
      background-color: {{ section.settings.header_link_hover_bg }} !important;
    {% endif %}
  }

  /* Conditional base hover styles for nav links */
  .nav-settings .nav-link:hover {
    color: {{ section.settings.header_text_hover_color }} !important;
    {% if section.settings.header_link_hover_bg != blank and section.settings.menu_hover_effect == 'color' %}
      background-color: {{ section.settings.header_link_hover_bg }} !important;
    {% endif %}
  }

  /*
    Dropdown items
  */
  .nav-settings .dropdown-item {
    color: {{ section.settings.header_text_color }};
    transition: color 0.3s, background-color 0.3s;
  }
  .nav-settings .dropdown-item:hover {
    color: {{ section.settings.header_text_hover_color }} !important;
    {% if section.settings.header_link_hover_bg != blank %}
      background-color: {{ section.settings.header_link_hover_bg }} !important;
    {% endif %}
  }

  /*
    Search / Icons
  */
  .nav-settings .btn-outline-success {
    background-color: transparent;
    border-color: transparent;
    color: {{ section.settings.search_btn_text_color }} !important;
    transition: background-color 0.3s ease, border-color 0.3s ease, color 0.3s ease, transform 0.3s ease;
    position: relative;
  }

  .nav-settings .btn-outline-success i {
    color: {{ section.settings.search_btn_text_color }} !important;
    transition: color 0.3s ease, transform 0.3s ease;
  }
  .nav-settings .btn-outline-success:hover i {
    color: {{ section.settings.search_btn_text_hover_color }} !important;
  }

  .nav-settings .line {
    display: block;
    width: 95%;
    height: 1px;
    margin: 0 auto;
    z-index: 20;
    background-color: #fff;
    border-radius: 2px;
  }

  /* Utilities container (search + icons) */
  .nav-utilities {
    display: flex;
    align-items: center;
  }
  
  /* Mobile utilities improvements */
  @media (max-width: 991px) {
    .mobile-utilities {
      border-top: 1px solid rgba(255,255,255,0.1);
      padding-top: 1rem;
    }
    
    .nav-utilities {
      visibility: none;
    }

    .navbar-toggler {
      margin-right: 0;
      margin-left: 0;
    }

    .navbar-brand{
      margin-right: 0;
      margin-left: auto;
    }

    .container-fluid{
      justify-content: space-between;
    }
  }
  
  /* Icons container */
  .icons-container {
    display: flex;
    align-items: center;
  }

  /* Menu hover effects */
  {% case section.settings.menu_hover_effect %}
    {% when 'underline' %}
      .nav-settings .nav-link {
        position: relative;
      }
      .nav-settings .nav-link::after {
        content: '';
        position: absolute;
        bottom: 0;
        left: 50%;
        width: 0;
        height: {{ section.settings.underline_thickness | default: 2 }}px;
        background: {{ section.settings.header_text_hover_color }};
        transition: width 0.3s ease, left 0.3s ease;
      }
      .nav-settings .nav-link:hover::after {
        width: 80%;
        left: 10%;
      }
    
    {% when 'overline' %}
      .nav-settings .nav-link {
        position: relative;
      }
      .nav-settings .nav-link::before {
        content: '';
        position: absolute;
        top: 0;
        left: 50%;
        width: 0;
        height: 2px;
        background: {{ section.settings.header_text_hover_color }};
        transition: width 0.3s ease, left 0.3s ease;
      }
      .nav-settings .nav-link:hover::before {
        width: 80%;
        left: 10%;
      }
    
    {% when 'grow' %}
      .nav-settings .nav-link {
        transition: transform 0.3s ease, color 0.3s;
      }
      .nav-settings .nav-link:hover {
        transform: scale({{ section.settings.grow_scale | default: 1.1 }});
      }
    
    {% when 'glow' %}
      .nav-settings .nav-link:hover {
        text-shadow: 0 0 {{ section.settings.glow_intensity | default: 8 }}px {{ section.settings.header_text_hover_color }}, 0 0 12px rgba(255,255,255,0.5);
      }
    
    {% when 'border-bottom' %}
      .nav-settings .nav-link {
        border-bottom: 2px solid transparent;
        transition: border-color 0.3s, color 0.3s;
        padding-bottom: 2px;
      }
      .nav-settings .nav-link:hover {
        border-bottom-color: {{ section.settings.header_text_hover_color }};
      }
    
    {% else %}
      /* Default color change only, already implemented */
  {% endcase %}

  /* Base icon styles */
  .nav-settings .btn-outline-success {
    background-color: transparent !important;
    border-color: transparent !important;
    transition: all 0.3s ease;
    position: relative;
  }

  .nav-settings .btn-outline-success i {
    color: {{ section.settings.search_btn_text_color }} !important;
    transition: all 0.3s ease;
    display: inline-block;
  }

  /* Clear all existing icon effect case statements and use only this one */
  {% case section.settings.icon_hover_effect %}
    
    {% when 'pulse' %}
      @keyframes pulse-icon {
        0% { transform: scale(1); }
        50% { transform: scale({{ section.settings.pulse_intensity | default: 1.2 }}); }
        100% { transform: scale(1); }
      }
      
      .nav-settings .btn-outline-success:hover i {
        animation: pulse-icon {{ section.settings.pulse_speed | default: 0.8 }}s infinite;
      }
    
    {% when 'rotate' %}
      .nav-settings .btn-outline-success:hover i {
        transform: rotate({{ section.settings.rotate_angle | default: 15 }}deg) !important;
      }
    
    {% when 'scale' %}
      .nav-settings .btn-outline-success:hover i {
        transform: scale({{ section.settings.scale_size | default: 1.3 }}) !important;
      }
      
      .nav-settings .btn-outline-success:hover {
        background-color: {{ section.settings.search_btn_hover_color }} !important;
        border-color: {{ section.settings.search_btn_hover_color }} !important;
      }
    
    {% when 'color' %}
      /* Only change the icon color on hover */
      .nav-settings .btn-outline-success:hover i {
        color: {{ section.settings.search_btn_text_hover_color }} !important;
      }
  {% endcase %}

  .nav-utilities-empty {
    margin: 0 !important;
    padding: 0 !important;
    height: auto !important;
  }

  .mobile-logo-container {
    position: absolute;
    right: 15px;
    top: 50%;
    transform: translateY(-50%);
  }

  /* Hide any duplicate logo that might appear from desktop layouts */
  @media (max-width: 991px) {
    .order-1, .order-2, .order-3 {
      .navbar-brand {
        display: none;
      }
    }
  }

  /* Fixed mobile menu positioning */
  @media (max-width: 991px) {
    .navbar {
      position: {% if section.settings.is_sticky_header %}fixed{% else %}absolute{% endif %};
    }
    
    /* Fixed position for logo and toggle button */
    .mobile-logo-container {
      position: absolute;
      right: 15px;
      top: 15px;
      transform: none;
      z-index: 1530;
    }
    
    .navbar-toggler {
      position: relative;
      z-index: 1030;
    }
    
    /* Position the dropdown menu below the header */
    .navbar-collapse {
      position: absolute;
      top: 100%;
      left: 0;
      right: 0;
      width: 100%;
      background-color: rgba({{ header_red }}, {{ header_green }}, {{ header_blue }}, 0.95);
      padding: 15px;
      z-index: 1020;
      box-shadow: 0 5px 10px rgba(0,0,0,0.2);
      max-height: 80vh;
      overflow-y: auto;
    }
    
    /* Ensure consistent header height */
    .container-fluid {
      min-height: 60px;
      padding-top: 10px;
      padding-bottom: 10px;
    }
    
    /* Remove previous mobile layout issues */
    .navbar-brand {
      margin-right: 0;
      margin-left: auto;
    }
  }
</style>

{% if section.settings.is_sticky_header %}
  <script>
    document.addEventListener('DOMContentLoaded', function(){
      const header = document.querySelector('.nav-settings');
      const headerHeight = header.offsetHeight;

      const currentPath = window.location.pathname;
      const currentHandle = window.location.pathname.split('/').pop().split('?')[0];
      
      let shouldAddPadding = true;
      
      {% if section.settings.exempt_padding_pages_list != blank %}
        const exemptPages = [
          {% for link in section.settings.exempt_padding_pages_list.links %}
            "{{ link.url | split: '/' | last }}",
          {% endfor %}
        ];
        
        if (exemptPages.includes(currentHandle)) {
          shouldAddPadding = false;
        }
      {% endif %}
      
      if (shouldAddPadding && {% if section.settings.adjust_body_padding %}true{% else %}false{% endif %}) {
        document.body.style.paddingTop = headerHeight + 'px';
      }
      
      document.addEventListener('scroll', function(){
        if(window.scrollY > 50){
          header.classList.add('scrolled');
        } else {
          header.classList.remove('scrolled');
        }
      });
    });
  </script>
{% endif %}

{% schema %}
{
  "name": "Header",
  "settings": [
    {
      "type": "header",
      "content": "Display Settings"
    },
    {
      "type": "select",
      "id": "header_alignment",
      "label": "Navigation Alignment",
      "options": [
        { "value": "left", "label": "Left" },
        { "value": "center", "label": "Center" },
        { "value": "right", "label": "Right" }
      ],
      "default": "left"
    },
    {
      "type": "select",
      "id": "header_layout",
      "label": "Component Order",
      "options": [
        { "value": "logo_menu_search", "label": "Logo → Menu → Search" },
        { "value": "menu_logo_search", "label": "Menu → Logo → Search" },
        { "value": "menu_search_logo", "label": "Menu → Search → Logo" },
        { "value": "logo_search_menu", "label": "Logo → Search → Menu" },
        { "value": "search_logo_menu", "label": "Search → Logo → Menu" },
        { "value": "search_menu_logo", "label": "Search → Menu → Logo" }
      ],
      "default": "logo_menu_search",
      "info": "Arrange the order of header components"
    },
    {
      "type": "header",
      "content": "Logo"
    },
    {
      "type": "image_picker",
      "id": "logo",
      "label": "Logo image"
    },
    {
      "type": "range",
      "id": "logo_size",
      "label": "Logo size (px)",
      "default": 100,
      "min": 50,
      "max": 250,
      "step": 10
    },
    
    {
      "type": "header",
      "content": "Navigation"
    },
    {
      "type": "link_list",
      "id": "menu",
      "label": "Menu"
    },
    {
      "type": "range",
      "id": "menu_text_size",
      "label": "Text size (px)",
      "default": 20,
      "min": 10,
      "max": 40,
      "step": 1
    },
    {
      "type": "header",
      "content": "Menu Hover Effects"
    },
    {
      "type": "select",
      "id": "menu_hover_effect",
      "label": "Menu item hover effect",
      "options": [
        { "value": "color", "label": "Color change only" },
        { "value": "underline", "label": "Underline" },
        { "value": "overline", "label": "Overline" },
        { "value": "grow", "label": "Grow" },
        { "value": "glow", "label": "Glow" },
        { "value": "border-bottom", "label": "Border bottom" }
      ],
      "default": "color",
      "info": "Select hover effect for menu items"
    },
    {
      "type": "header",
      "content": "Menu Effect Settings",
      "info": "Settings for specific menu hover effects"
    },
    {
      "type": "range",
      "id": "underline_thickness",
      "label": "Underline thickness (px)",
      "default": 2,
      "min": 1,
      "max": 5,
      "step": 1,
      "info": "Only applies when Underline effect is selected"
    },
    {
      "type": "range",
      "id": "glow_intensity",
      "label": "Glow intensity",
      "default": 8,
      "min": 4,
      "max": 20,
      "step": 2,
      "info": "Only applies when Glow effect is selected"
    },
    {
      "type": "range",
      "id": "grow_scale",
      "label": "Grow scale",
      "default": 1.1,
      "min": 1.1,
      "max": 1.5,
      "step": 0.1,
      "info": "Only applies when Grow effect is selected"
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "bg_header",
      "label": "Background color",
      "default": "#449EED"
    },
    {
      "type": "range",
      "id": "header_bg_opacity",
      "label": "Background opacity",
      "default": 0.4,
      "min": 0,
      "max": 1,
      "step": 0.1
    },
    {
      "type": "color",
      "id": "header_text_color",
      "label": "Text color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "header_text_hover_color",
      "label": "Text hover color",
      "default": "#ccc"
    },
    {
      "type": "color",
      "id": "header_link_hover_bg",
      "label": "Link hover background",
      "default": "transparent",
      "info": "Leave blank for no background color on hover"
    },
    
    {
      "type": "header",
      "content": "Search Bar"
    },
    {
      "type": "checkbox",
      "id": "enable_search_bar",
      "label": "Enable search",
      "default": true
    },
    {
      "type": "color",
      "id": "search_btn_text_color",
      "label": "Button icon color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "search_btn_hover_color",
      "label": "Button hover background",
      "default": "#357ABD"
    },
    {
      "type": "color",
      "id": "search_btn_text_hover_color",
      "label": "Button hover icon color",
      "default": "#ffffff"
    },
    {
      "type": "header",
      "content": "Icon Hover Effects"
    },
    {
      "type": "select",
      "id": "icon_hover_effect",
      "label": "Icon hover effect",
      "options": [
        { "value": "color", "label": "Color change only" },
        { "value": "pulse", "label": "Pulse" },
        { "value": "rotate", "label": "Rotate" },
        { "value": "scale", "label": "Scale up" }
      ],
      "default": "color",
      "info": "Select hover effect for icons"
    },
    {
      "type": "header",
      "content": "Icon Effect Settings",
      "info": "Settings for specific icon effects"
    },
    {
      "type": "range",
      "id": "pulse_intensity",
      "label": "Pulse intensity",
      "default": 1.2,
      "min": 1.1,
      "max": 2.0,
      "step": 0.1,
      "info": "Only applies when Pulse effect is selected"
    },
    {
      "type": "range",
      "id": "pulse_speed",
      "label": "Pulse speed (seconds)",
      "default": 0.8,
      "min": 0.3,
      "max": 2.0,
      "step": 0.1,
      "info": "Only applies when Pulse effect is selected"
    },
    {
      "type": "range",
      "id": "rotate_angle",
      "label": "Rotation angle (degrees)",
      "default": 15,
      "min": -180,
      "max": 180,
      "step": 5,
      "info": "Only applies when Rotate effect is selected"
    },
    {
      "type": "range",
      "id": "scale_size",
      "label": "Scale size",
      "default": 1.3,
      "min": 1.1,
      "max": 2.0,
      "step": 0.1,
      "info": "Only applies when Scale Up effect is selected"
    },
    {
      "type": "header",
      "content": "Sticky Header"
    },
    {
      "type": "checkbox",
      "id": "is_sticky_header",
      "label": "Enable sticky header",
      "default": false,
      "info": "Header will stay fixed at the top when scrolling"
    },
    {
      "type": "checkbox",
      "id": "adjust_body_padding",
      "label": "Add padding to body",
      "default": true,
      "info": "Pushes content down to prevent header overlap"
    },
    {
      "type": "link_list",
      "id": "exempt_padding_pages_list",
      "label": "Pages with no padding",
      "info": "Select pages that should not have added padding"
    }
  ],
  "presets": [
    {
      "name": "Header",
      "category": "header"
    }
  ]
}
{% endschema %}
