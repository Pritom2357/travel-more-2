{% assign bg_img_url = section.settings.bg_img | img_url: '1600x' %}

{% assign input_hex_color = section.settings.bg_header %}
{% include 'hex-to-rgb' %}
{% assign header_red = red %}
{% assign header_green = green %}
{% assign header_blue = blue %}

{% if template.name != 'index' %}
  <nav class="navbar navbar-expand-lg nav-settings">
    <div class="container-fluid">
      {% capture logo_html %}
        <div class="logo-name-container">
          <a class="navbar-brand" href="{{ routes.root_url }}">
            <img
              src="{{ section.settings.logo | img_url: '100x' }}"
              alt="{{ shop.name }}"
              width= "{{ section.settings.logo_size }}"
              height= "auto"
            >
          </a>
          {% if section.settings.store_name %}
            <a href="{{ routes.root_url }}" class="store-name-link">
              <div class="store-name">
                {{ section.settings.store_name }}
              </div>
            </a>
          {% endif %}
        </div>
      {% endcapture %}

      {% capture toggle_button %}
        <button
          class="navbar-toggler"
          type="button"
          data-bs-toggle="collapse"
          data-bs-target="#navbarSupportedContent"
          aria-controls="navbarSupportedContent"
          aria-expanded="false"
          aria-label="Toggle navigation"
        >
          <i class="bi bi-list btn-outline-success"></i>
        </button>
      {% endcapture %}

      <div class="d-lg-none ms-auto mobile-logo-container">{{ logo_html }}</div>

      {% capture locale_selector_html %}
        <div class="locale-selectors d-flex align-items-center">
          {%- if shop.published_locales.size > 1 -%}
            <div class="language-selector dropdown">
              <button class="btn btn-sm dropdown-toggle language-selector-btn" type="button" id="languageDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                <i class="bi bi-globe-americas me-1"></i>
                {{ localization.language.endonym_name }}
              </button>
              <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="languageDropdown">
                {%- for locale in shop.published_locales -%}
                  <li>
                    <a class="dropdown-item{% if locale.iso_code == localization.language.iso_code %} active{% endif %}" 
                       href="#"
                       data-locale-code="{{ locale.iso_code }}"
                       data-shopify-locale-switcher>
                      {{ locale.endonym_name }}
                    </a>
                  </li>
                {%- endfor -%}
              </ul>
            </div>
          {%- endif -%}
      
          {%- if shop.available_countries.size > 1 -%}
            <div class="country-selector dropdown ms-2">
              <button class="btn btn-sm dropdown-toggle country-selector-btn" type="button" id="countryDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                <i class="bi bi-geo-alt me-1"></i>
                {{ localization.country.name }}
              </button>
              <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="countryDropdown">
                {%- for country in shop.available_countries -%}
                  <li>
                    <a class="dropdown-item{% if country.iso_code == localization.country.iso_code %} active{% endif %}" 
                       href="#"
                       data-country-code="{{ country.iso_code }}" 
                       data-shopify-country-switcher>
                      {{ country.name }}
                    </a>
                  </li>
                {%- endfor -%}
              </ul>
            </div>
          {%- endif -%}
        </div>
      {% endcapture %}

      {% capture icons_html %}
        <div class="d-flex icons-container align-items-center">
          {% if section.settings.enable_locale_selector %}
            {{ locale_selector_html }}
          {% endif %}
          
          <div class="ms-2 ms-lg-3">
            <a href="{{ routes.account_url }}" class="btn btn-outline-success ms-2" aria-label="Account">
              <i class="bi bi-person-fill"></i>
            </a>
            <a href="{{ routes.cart_url }}" class="btn btn-outline-success ms-2 cart-link-container" aria-label="Cart">
              <i class="bi bi-cart-fill"></i>
              <span class="cart-count-badge">{{ cart.item_count }}</span>
            </a>
          </div>
        </div>
      {% endcapture %}

      {% capture search_html %}
        <div class="d-flex nav-utilities d-none d-lg-flex {% if section.settings.enable_search_bar == false %}nav-utilities-empty{% endif %}">
          {% if section.settings.enable_search_bar %}
            <form class="d-flex search-form">
              <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search">
              <button class="btn btn-outline-success" type="submit">
                <i class="bi bi-search"></i>
              </button>
            </form>
          {% endif %}
          <div class="d-none d-lg-block">{{ icons_html }}</div>
        </div>
      {% endcapture %}

      {% capture menu_html %}
        <div class="collapse navbar-collapse nav-text" id="navbarSupportedContent">
          {% assign alignment_class = 'justify-content-start' %}
          {% if section.settings.header_alignment == 'center' %}
            {% assign alignment_class = 'justify-content-center' %}
          {% elsif section.settings.header_alignment == 'right' %}
            {% assign alignment_class = 'justify-content-end' %}
          {% endif %}
  
          <ul class="navbar-nav mb-2 mb-lg-0 {{ alignment_class }} flex-grow-1">
            {% for menu in section.settings.menu.links %}
              <li class="nav-item {% if menu.links.size > 0 %} dropdown {% endif %}">
                <a
                  class="nav-link {% if menu.links.size > 0 %} dropdown-toggle {% endif %}"
                  href="{{ menu.url }}"
                  {% if menu.links.size > 0 %}
                    id="navbarDropdown_{{ forloop.index }}"
                    role="button"
                    data-bs-toggle="dropdown"
                    aria-expanded="false"
                  {% endif %}
                >
                  {{ menu.title }}
                </a>
  
                {% if menu.links.size > 0 %}
                  <ul class="dropdown-menu" aria-labelledby="navbarDropdown_{{ forloop.index }}">
                    {% for sub_menu in menu.links %}
                      <li class="{% if sub_menu.links.size > 0 %} dropdown-submenu {% endif %}">
                        <a
                          class="dropdown-item {% if sub_menu.links.size > 0 %} dropdown-toggle {% endif %}"
                          href="{{ sub_menu.url }}"
                        >
                          {{ sub_menu.title }}
                        </a>
  
                        {% if sub_menu.links.size > 0 %}
                          <ul class="dropdown-menu">
                            {% for sub_sub_menu in sub_menu.links %}
                              <li>
                                <a class="dropdown-item" href="{{ sub_sub_menu.url }}">{{ sub_sub_menu.title }}</a>
                              </li>
                            {% endfor %}
                          </ul>
                        {% endif %}
                      </li>
                    {% endfor %}
                  </ul>
                {% endif %}
              </li>
            {% endfor %}
          </ul>
        </div>
      {% endcapture %}

      <div class="d-lg-none order-1">{{ toggle_button }}</div>  

      {% case section.settings.header_layout %}
        {% when 'logo_menu_search' %}
          <div class="d-none d-lg-block order-lg-1">{{ logo_html }}</div>
          <div class="order-3 order-lg-2 flex-grow-1">{{ menu_html }}</div>
          <div class="order-2 order-lg-3">{{ search_html }}</div>
        {% when 'menu_logo_search' %}
          <div class="order-2 order-lg-2">{{ logo_html }}</div>
          <div class="order-3 order-lg-1 flex-grow-1">{{ menu_html }}</div>
          <div class="order-1 order-lg-3">{{ search_html }}</div>
        {% when 'menu_search_logo' %}
          <div class="order-1 order-lg-3">{{ logo_html }}</div>
          <div class="order-3 order-lg-1 flex-grow-1">{{ menu_html }}</div>
          <div class="order-2 order-lg-2">{{ search_html }}</div>
        {% when 'logo_search_menu' %}
          <div class="order-1 order-lg-1">{{ logo_html }}</div>
          <div class="order-3 order-lg-3 flex-grow-1">{{ menu_html }}</div>
          <div class="order-2 order-lg-2">{{ search_html }}</div>
        {% when 'search_logo_menu' %}
          <div class="order-2 order-lg-2">{{ logo_html }}</div>
          <div class="order-3 order-lg-3 flex-grow-1">{{ menu_html }}</div>
          <div class="order-1 order-lg-1">{{ search_html }}</div>
        {% when 'search_menu_logo' %}
          <div class="order-3 order-lg-3">{{ logo_html }}</div>
          <div class="order-2 order-lg-2 flex-grow-1">{{ menu_html }}</div>
          <div class="order-1 order-lg-1">{{ search_html }}</div>
        {% else %}
          <div class="order-1 order-lg-1">{{ logo_html }}</div>
          <div class="order-3 order-lg-2 flex-grow-1">{{ menu_html }}</div>
          <div class="order-2 order-lg-3">{{ search_html }}</div>
      {% endcase %}

    </div>
  </nav>
{% endif %}

<!-- Search Modal -->
<div class="search-modal" id="searchModal">
  <div class="search-modal-content">
    <div class="search-modal-header">
      <h2>Search our destinations</h2>
      <button type="button" class="search-close-btn" id="closeSearchModal">
        <i class="bi bi-x-lg"></i>
      </button>
    </div>
    <div class="search-modal-body">
      <form action="/search" method="get" class="search-modal-form">
        <div class="search-input-group">
          <i class="bi bi-search search-icon"></i>
          <input 
            type="text" 
            name="q" 
            id="searchModalInput" 
            class="search-modal-input" 
            placeholder="Where would you like to go?" 
            autocomplete="off"
          >
        </div>
        <button type="submit" class="search-modal-btn">Search</button>
      </form>
      
      <div class="popular-searches">
        <h3>Popular destinations</h3>
        <div class="popular-searches-grid">
          <a href="/search?q=Paris">Paris</a>
          <a href="/search?q=Tokyo">Tokyo</a>
          <a href="/search?q=New York">New York</a>
          <a href="/search?q=Bali">Bali</a>
          <a href="/search?q=London">London</a>
          <a href="/search?q=Rome">Rome</a>
        </div>
      </div>
      
      <div class="search-results" id="searchResults">
      </div>
    </div>
  </div>
</div>

<!-- Hidden localization forms -->
<div class="localization-forms" style="display: none;">
  {%- if shop.published_locales.size > 1 -%}
    <form method="post" action="/localization" id="HeaderLanguageForm" accept-charset="UTF-8" class="localization-form" enctype="multipart/form-data">
      <input type="hidden" name="form_type" value="localization" />
      <input type="hidden" name="return_to" value="{{ request.path }}{{ search.terms | escape }}" />
      <input type="hidden" name="locale_code" value="{{ localization.language.iso_code }}">
    </form>
  {%- endif -%}
  
  {%- if shop.available_countries.size > 1 -%}
    <form method="post" action="/localization" id="HeaderCountryForm" accept-charset="UTF-8" class="localization-form" enctype="multipart/form-data">
      <input type="hidden" name="form_type" value="localization" />
      <input type="hidden" name="return_to" value="{{ request.path }}{{ search.terms | escape }}" />
      <input type="hidden" name="country_code" value="{{ localization.country.iso_code }}">
    </form>
  {%- endif -%}
</div>

<style>

  .nav-settings {
    position: {% if section.settings.is_sticky_header %}fixed{% else %}relative{% endif %};
    top: 0;
    left: 0;
    z-index: 1000;
    width: 100%;
    background-color: rgba({{ header_red }}, {{ header_green }}, {{ header_blue }}, {{ section.settings.header_bg_opacity }}) !important;
    color: {{ section.settings.header_text_color }} !important;
    font-size: {{ section.settings.menu_text_size }}px;
    font-weight: {{ section.settings.menu_font_weight }};
    transition: background-color 0.3s ease;
    box-shadow: none;
  }

  {% if section.settings.is_sticky_header %}
    .nav-settings.scrolled{
      background-color: rgba({{ header_red }}, {{ header_green }}, {{ header_blue }}, 1) !important;
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }
  {% endif %}


  .nav-settings .nav-link {
    color: {{ section.settings.header_text_color }} !important;
    transition: color 0.3s, background-color 0.3s;
  }

  .nav-settings .nav-link:hover {
    color: {{ section.settings.header_text_hover_color }} !important;
    {% if section.settings.header_link_hover_bg != blank %}
      background-color: {{ section.settings.header_link_hover_bg }} !important;
    {% endif %}
  }

  .nav-settings .nav-link:hover {
    color: {{ section.settings.header_text_hover_color }} !important;
    {% if section.settings.header_link_hover_bg != blank and section.settings.menu_hover_effect == 'color' %}
      background-color: {{ section.settings.header_link_hover_bg }} !important;
    {% endif %}
  }

 
  .nav-settings .dropdown-item {
    color: {{ section.settings.header_text_color }};
    transition: color 0.3s, background-color 0.3s;
  }
  .nav-settings .dropdown-item:hover {
    color: {{ section.settings.header_text_hover_color }} !important;
    {% if section.settings.header_link_hover_bg != blank %}
      background-color: {{ section.settings.header_link_hover_bg }} !important;
    {% endif %}
  }

  .nav-settings .btn-outline-success {
    background-color: transparent;
    border-color: transparent;
    color: {{ section.settings.search_btn_text_color }} !important;
    font-size: {{ section.settings.icon_font_size }}px;
    transition: background-color 0.3s ease, border-color 0.3s ease, color 0.3s ease, transform 0.3s ease;
    position: relative;
  }

  .nav-settings .btn-outline-success i {
    color: {{ section.settings.search_btn_text_color }} !important;
    transition: color 0.3s ease, transform 0.3s ease;
  }
  .nav-settings .btn-outline-success:hover i {
    color: {{ section.settings.search_btn_text_hover_color }} !important;
  }

  .nav-settings .line {
    display: block;
    width: 95%;
    height: 1px;
    margin: 0 auto;
    z-index: 20;
    background-color: #fff;
    border-radius: 2px;
  }

  .nav-utilities {
    display: flex;
    align-items: center;
  }
  
  @media (max-width: 991px) {
    .mobile-utilities {
      border-top: 1px solid rgba(255,255,255,0.1);
      padding-top: 1rem;
    }
    
    .nav-utilities {
      visibility: none;
    }

    .navbar-toggler {
      margin-right: 0;
      margin-left: 0;
    }

    .navbar-brand{
      margin-right: 0;
      margin-left: auto;
    }

    .container-fluid{
      justify-content: space-between;
    }
  }
  
  .icons-container {
    display: flex;
    align-items: center;
  }

  {% case section.settings.menu_hover_effect %}
    {% when 'underline' %}
      .nav-settings .nav-link {
        position: relative;
      }
      .nav-settings .nav-link::after {
        content: '';
        position: absolute;
        bottom: 0;
        left: 50%;
        width: 0;
        height: {{ section.settings.underline_thickness | default: 2 }}px;
        background: {{ section.settings.header_text_hover_color }};
        transition: width 0.3s ease, left 0.3s ease;
      }
      .nav-settings .nav-link:hover::after {
        width: 80%;
        left: 10%;
      }
    
    {% when 'overline' %}
      .nav-settings .nav-link {
        position: relative;
      }
      .nav-settings .nav-link::before {
        content: '';
        position: absolute;
        top: 0;
        left: 50%;
        width: 0;
        height: 2px;
        background: {{ section.settings.header_text_hover_color }};
        transition: width 0.3s ease, left 0.3s ease;
      }
      .nav-settings .nav-link:hover::before {
        width: 80%;
        left: 10%;
      }
    
    {% when 'grow' %}
      .nav-settings .nav-link {
        transition: transform 0.3s ease, color 0.3s;
      }
      .nav-settings .nav-link:hover {
        transform: scale({{ section.settings.grow_scale | default: 1.1 }});
      }
    
    {% when 'glow' %}
      .nav-settings .nav-link:hover {
        text-shadow: 0 0 {{ section.settings.glow_intensity | default: 8 }}px {{ section.settings.header_text_hover_color }}, 0 0 12px rgba(255,255,255,0.5);
      }
    
    {% when 'border-bottom' %}
      .nav-settings .nav-link {
        border-bottom: 2px solid transparent;
        transition: border-color 0.3s, color 0.3s;
        padding-bottom: 2px;
      }
      .nav-settings .nav-link:hover {
        border-bottom-color: {{ section.settings.header_text_hover_color }};
      }
    
    {% else %}
  {% endcase %}

  .nav-settings .btn-outline-success {
    background-color: transparent !important;
    border-color: transparent !important;
    transition: all 0.3s ease;
    position: relative;
  }

  .nav-settings .btn-outline-success i {
    color: {{ section.settings.search_btn_text_color }} !important;
    transition: all 0.3s ease;
    display: inline-block;
  }

  {% case section.settings.icon_hover_effect %}
    
    {% when 'pulse' %}
      @keyframes pulse-icon {
        0% { transform: scale(1); }
        50% { transform: scale({{ section.settings.pulse_intensity | default: 1.2 }}); }
        100% { transform: scale(1); }
      }
      
      .nav-settings .btn-outline-success:hover i {
        animation: pulse-icon {{ section.settings.pulse_speed | default: 0.8 }}s infinite;
      }
    
    {% when 'rotate' %}
      .nav-settings .btn-outline-success:hover i {
        transform: rotate({{ section.settings.rotate_angle | default: 15 }}deg) !important;
      }
    
    {% when 'scale' %}
      .nav-settings .btn-outline-success:hover i {
        transform: scale({{ section.settings.scale_size | default: 1.3 }}) !important;
      }
      
      .nav-settings .btn-outline-success:hover {
        background-color: {{ section.settings.search_btn_hover_color }} !important;
        border-color: {{ section.settings.search_btn_hover_color }} !important;
      }
    
    {% when 'color' %}
      .nav-settings .btn-outline-success:hover i {
        color: {{ section.settings.search_btn_text_hover_color }} !important;
      }
  {% endcase %}

  .nav-utilities-empty {
    margin: 0 !important;
    padding: 0 !important;
    height: auto !important;
  }

  .mobile-logo-container {
    position: absolute;
    right: 15px;
    top: 50%;
    transform: translateY(-50%);
  }

  @media (max-width: 767px) {
    .store-name {
      font-size: calc({{ section.settings.store_name_text_size }}px * 0.85);
    }
    
    .logo-name-container {
      gap: 8px;
    }
  }

  @media (max-width: 991px) {
    .order-1, .order-2, .order-3 {
      .navbar-brand {
        display: none;
      }
    }
  }

  @media (max-width: 991px) {
    .navbar {
      position: {% if section.settings.is_sticky_header %}fixed{% else %}absolute{% endif %};
    }
    
    .mobile-logo-container {
      position: absolute;
      right: 15px;
      top: 15px;
      transform: none;
      z-index: 1530;
    }
    
    .navbar-toggler {
      position: relative;
      z-index: 1030;
    }
    
    .navbar-collapse {
      position: absolute;
      top: 100%;
      left: 0;
      right: 0;
      width: 100%;
      background-color: rgba({{ header_red }}, {{ header_green }}, {{ header_blue }}, 0.95);
      padding: 15px;
      z-index: 1020;
      box-shadow: 0 5px 10px rgba(0,0,0,0.2);
      max-height: 80vh;
      overflow-y: auto;
    }
    
    .container-fluid {
      min-height: 60px;
      padding-top: 10px;
      padding-bottom: 10px;
    }
    
    .navbar-brand {
      margin-right: 0;
      margin-left: auto;
    }
  }

  @media (max-width: 991px) {
    
    {% if section.settings.menu_hover_effect == 'grow' %}
      .nav-settings .nav-link:hover {
        transform: scale(1.05) !important; 
      }
    {% endif %}
    
    {% if section.settings.menu_hover_effect == 'underline' or section.settings.menu_hover_effect == 'overline' %}
      .nav-settings .nav-link::after,
      .nav-settings .nav-link::before {
        width: 0;
        left: 0 !important;
      }
      
      .nav-settings .nav-link:hover::after,
      .nav-settings .nav-link:hover::before {
        width: 100% !important; 
        left: 0 !important;
      }
    {% endif %}
    
    .nav-settings .nav-link {
      padding: 10px 15px !important;
      margin: 2px 0 !important;
      overflow: hidden; 
    }
    
    .nav-settings .dropdown-menu {
      background-color: rgba({{ header_red }}, {{ header_green }}, {{ header_blue }}, 0.85) !important;
      border: none;
      border-radius: 0;
      margin-top: 0;
      padding-left: 15px;
    }
    
    .nav-settings .dropdown-item {
      color: {{ section.settings.header_text_color }} !important;
      padding: 8px 15px;
    }
    
    .nav-settings .dropdown-item:hover {
      color: {{ section.settings.header_text_hover_color }} !important;
    }
    
    .navbar-nav {
      overflow-x: hidden;
    }
  }

  /* Main dropdown menu */
  .navbar-nav .dropdown-menu {
    position: absolute;
    top: 100%;
    left: 0;
    display: none;
    background-color: {{ section.settings.dropdown_bg_color | default: 'rgba(255, 255, 255, 0.95)' }};
    border: 1px solid #ddd;
    border-radius: 4px;
    padding: 10px 0;
    z-index: 1000;
    min-width: 200px;
  }

  /* Show dropdown on hover */
  .navbar-nav .dropdown:hover > .dropdown-menu {
    display: block;
  }

  /* Submenu styles */
  .navbar-nav .dropdown-submenu {
    position: relative;
  }

  .navbar-nav .dropdown-submenu .dropdown-menu {
    top: 0;
    left: 100%;
    margin-left: 0.1rem;
    background-color: {{ section.settings.dropdown_bg_color | default: 'rgba(255, 255, 255, 0.95)' }};
    border-radius: 4px;
  }

  /* Add arrow for submenus */
  .navbar-nav .dropdown-submenu > .dropdown-toggle::after {
    content: "▶";
    float: right;
    margin-left: 5px;
    font-size: 0.8rem;
    color: #666;
  }

  /* Hover effect for dropdown items */
  .navbar-nav .dropdown-item:hover {
    background-color: {{ section.settings.dropdown_hover_bg_color | default: '#f8f9fa' }};
    color: {{ section.settings.dropdown_hover_text_color | default: '#333' }};
  }

  /* Responsive adjustments for nested menus */
  @media (max-width: 991px) {
    .navbar-nav .dropdown-menu {
      position: static;
      display: block;
      background-color: {{ section.settings.dropdown_bg_color | default: 'rgba(255, 255, 255, 0.95)' }};
    }

    .navbar-nav .dropdown-submenu .dropdown-menu {
      position: static;
      margin-left: 0;
    }
  }

  /* Improved submenu styles */
  .navbar-nav .dropdown-submenu {
    position: relative;
  }

  .navbar-nav .dropdown-submenu > .dropdown-menu {
    top: 0;
    left: 100%;
    margin-top: -6px; /* Better alignment with parent item */
    margin-left: 0;
    border-radius: 4px;
  }

  .navbar-nav .dropdown-submenu:hover > .dropdown-menu {
    display: block;
  }

  /* Improved arrow for submenus */
  .navbar-nav .dropdown-submenu > .dropdown-item.dropdown-toggle::after {
    content: "▶";
    float: right;
    margin-left: 5px;
    font-size: 0.8rem;
  }

  /* Apply background color to all dropdown levels */
  .navbar-nav .dropdown-menu,
  .navbar-nav .dropdown-submenu .dropdown-menu {
    background-color: {{ section.settings.dropdown_bg_color | default: 'rgba(255, 255, 255, 0.95)' }};
  }

  /* Custom submenu colors */
  .navbar-nav .dropdown-submenu .dropdown-menu {
    background-color: {{ section.settings.submenu_bg_color | default: section.settings.dropdown_bg_color | default: 'rgba(255, 255, 255, 0.95)' }};
  }

  /* Search Modal Styles */
  .search-modal {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0,0,0,0.85);
    backdrop-filter: blur(8px);
    -webkit-backdrop-filter: blur(8px);
    z-index: 2000;
    display: none;
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .search-modal.show {
    display: flex;
    opacity: 1;
  }

  .search-modal-content {
    width: 100%;
    max-width: 900px;
    margin: 0 auto;
    padding: 2rem;
    color: #fff;
    margin-top: 10vh;
    max-height: 80vh;
    overflow-y: auto;
  }

  .search-modal-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 2rem;
  }

  .search-modal-header h2 {
    font-size: 28px;
    margin: 0;
    color: #fff;
  }

  .search-close-btn {
    background: transparent;
    border: none;
    color: #fff;
    font-size: 24px;
    cursor: pointer;
    transition: transform 0.3s ease;
  }

  .search-close-btn:hover {
    transform: rotate(90deg);
  }

  .search-modal-form {
    margin-bottom: 2rem;
  }

  .search-input-group {
    position: relative;
    margin-bottom: 1rem;
  }

  .search-icon {
    position: absolute;
    left: 15px;
    top: 50%;
    transform: translateY(-50%);
    color: #999;
    font-size: 18px;
  }

  .search-modal-input {
    width: 100%;
    padding: 15px 15px 15px 50px;
    font-size: 18px;
    border: none;
    border-radius: 8px;
    background-color: rgba(255,255,255,0.9);
  }

  .search-modal-btn {
    padding: 12px 30px;
    background-color: {{ section.settings.bg_header }};
    color: #fff;
    border: none;
    border-radius: 6px;
    font-size: 16px;
    cursor: pointer;
    transition: background-color 0.3s;
  }

  .search-modal-btn:hover {
    background-color: {{ section.settings.header_text_hover_color }};
  }

  .popular-searches {
    margin-top: 2rem;
  }

  .popular-searches h3 {
    font-size: 20px;
    margin-bottom: 1rem;
    color: #ddd;
  }

  .popular-searches-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
    gap: 10px;
  }

  .popular-searches-grid a {
    background-color: rgba(255,255,255,0.1);
    padding: 10px 15px;
    border-radius: 4px;
    color: #fff;
    text-decoration: none;
    transition: background-color 0.3s;
  }

  .popular-searches-grid a:hover {
    background-color: rgba(255,255,255,0.2);
  }

  @media (max-width: 767px) {
    .search-modal-content {
      padding: 1rem;
      margin-top: 5vh;
    }
    
    .popular-searches-grid {
      grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
    }
  }

  .cart-link-container {
    position: relative;
  }

  .cart-count-badge {
    position: absolute;
    top: 0px;
    right: 0px;
    background-color: {{ section.settings.accent_color | default: '#ff4242' }};
    color: white;
    border-radius: 50%;
    min-width: 18px;
    height: 18px;
    font-size: 11px;
    font-weight: bold;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0 4px;
    line-height: 1;
  }

  /* Hide badge when cart is empty */
  .cart-count-badge:empty,
  .cart-count-badge[data-count="0"] {
    display: none;
  }

  .logo-name-container {
    display: flex;
    flex-direction: column; 
    align-items: center; 
    gap: 10px;
  }

  .store-name-link {
    text-decoration: none;
    transition: all 0.3s ease;
  }

  .store-name {
    font-size: {{ section.settings.store_name_text_size }}px;
    font-weight: 700;
    color: {{ section.settings.store_name_color }};
    letter-spacing: 0.5px;
    transition: all 0.3s ease;
    margin: 0;
    line-height: 1.2;
    font-family: {{ section.settings.store_name_font | default: 'inherit' }};
    text-transform: {{ section.settings.store_name_transform }};
    white-space: nowrap;
    text-align: center;
  }

  .store-name:hover, 
  .store-name-link:hover .store-name {
    color: {{ section.settings.store_name_hover_color | default: section.settings.header_text_hover_color }} !important;
    transition: color 0.3s ease;
  }

  .store-name-link:hover .store-name {
    text-decoration: underline;
    transform: scale(1.05);
  }

  /* Enhanced Button Interactions */
  .nav-settings .btn-outline-success {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
    position: relative;
    transition: all 0.3s ease;
  }

  .nav-settings .btn-outline-success i {
    transition: transform 0.3s ease;
  }

  .nav-settings .btn-outline-success:hover i {
    transform: scale(1.2);
  }

  /* Animated Nav Links */
  .navbar-nav .nav-item {
    opacity: 0;
    animation: fadeInNav 0.5s ease forwards;
  }

  .navbar-nav .nav-item:nth-child(1) { animation-delay: 0.1s; }
  .navbar-nav .nav-item:nth-child(2) { animation-delay: 0.2s; }
  .navbar-nav .nav-item:nth-child(3) { animation-delay: 0.3s; }
  .navbar-nav .nav-item:nth-child(4) { animation-delay: 0.4s; }
  .navbar-nav .nav-item:nth-child(5) { animation-delay: 0.5s; }

  @keyframes fadeInNav {
    from {
      opacity: 0;
      transform: translateY(-10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Enhanced Dropdown Effects */
  .navbar-nav .dropdown-menu {
    border-radius: 8px;
    box-shadow: 0 10px 25px rgba(0,0,0,0.1);
    opacity: 0;
    transform: translateY(10px);
    transition: opacity 0.3s, transform 0.3s;
    display: block;
    visibility: hidden;
  }

  .navbar-nav .dropdown:hover > .dropdown-menu {
    opacity: 1;
    transform: translateY(0);
    visibility: visible;
  }

  /* Mobile menu enhancements */
  @media (max-width: 991.98px) {
    .navbar-collapse {
      background: linear-gradient(to bottom, 
        rgba({{ header_red }}, {{ header_green }}, {{ header_blue }}, 0.95),
        rgba({{ header_red }}, {{ header_green }}, {{ header_blue }}, 0.98)
      );
      box-shadow: 0 10px 20px rgba(0,0,0,0.2);
      backdrop-filter: blur(10px);
      -webkit-backdrop-filter: blur(10px);
      border-radius: 0 0 16px 16px;
      padding-bottom: 1rem;
      transform: translateY(-10px);
      opacity: 0;
      transition: transform 0.3s, opacity 0.3s;
    }
    
    .navbar-collapse.show {
      transform: translateY(0);
      opacity: 1;
    }
    
    .logo-name-container {
      flex-direction: row;
      align-items: center;
      gap: 8px;
    }
  }

  /* Logo animation */
  .navbar-brand img {
    transition: transform 0.3s ease;
  }

  .navbar-brand:hover img {
    transform: scale(1.05);
  }

  /* Cart badge enhancement */
  .cart-link-container {
    position: relative;
  }

  /* Mobile menu adjustments */
  @media (max-width: 991px) {
    .navbar-nav .dropdown-menu {
      position: static;
      float: none;
      width: auto;
      margin-top: 0;
      background-color: transparent;
      border: 0;
      box-shadow: none;
      padding-left: 15px; 
    }
    
    .navbar-nav .dropdown-menu.show {
      display: block;
    }
    
    .navbar-nav .dropdown-submenu .dropdown-menu {
      margin-left: 0;
      padding-left: 15px; /
    }
    
    .navbar-nav .dropdown-submenu > .dropdown-item.dropdown-toggle::after {
      content: "▼";
      float: right;
    }
    
    .navbar-nav .dropdown-item {
      white-space: normal;
    }
  }

  /* Language and Country Selectors */
  .locale-selectors {
    font-size: 0.85rem;
  }

  .language-selector-btn,
  .country-selector-btn {
    background-color: transparent;
    color: {{ section.settings.header_text_color }};
    border: 1px solid rgba(255,255,255,0.3);
    padding: 0.25rem 0.75rem;
    font-size: 0.85rem;
    display: flex;
    align-items: center;
    transition: all 0.3s ease;
  }

  .language-selector-btn:hover,
  .country-selector-btn:hover {
    background-color: rgba(255,255,255,0.1);
    color: {{ section.settings.header_text_hover_color }};
    border-color: rgba(255,255,255,0.5);
  }

  .language-selector-btn:focus,
  .country-selector-btn:focus {
    box-shadow: 0 0 0 0.2rem rgba(255,255,255,0.15);
  }

  .language-selector .dropdown-menu,
  .country-selector .dropdown-menu {
    min-width: 160px;
    background-color: {{ section.settings.dropdown_bg_color }};
    border: 1px solid rgba(0,0,0,0.1);
    box-shadow: 0 5px 15px rgba(0,0,0,0.1);
    padding: 0.5rem 0;
    margin-top: 0.5rem;
    font-size: 0.85rem;
  }

  .language-selector .dropdown-item,
  .country-selector .dropdown-item {
    color: {{ section.settings.header_text_color }};
    padding: 0.375rem 1rem;
    transition: background-color 0.2s ease;
  }

  .language-selector .dropdown-item:hover,
  .country-selector .dropdown-item:hover,
  .language-selector .dropdown-item:focus,
  .country-selector .dropdown-item:focus {
    background-color: rgba(255,255,255,0.1);
    color: {{ section.settings.header_text_hover_color }};
  }

  .language-selector .dropdown-item.active,
  .country-selector .dropdown-item.active {
    background-color: rgba({{ header_red }}, {{ header_green }}, {{ header_blue }}, 0.7);
    font-weight: 600;
  }

  @media (max-width: 991px) {
    .locale-selectors {
      margin: 1rem 0;
      width: 100%;
      justify-content: center;
    }
    
    .language-selector,
    .country-selector {
      width: auto;
    }
  }

  @media (max-width: 991px) {
    .dropdown-submenu .dropdown-menu {
      display: none;
    }
    
    .dropdown-submenu .dropdown-menu.show {
      display: block !important;
    }
    
    .dropdown-submenu > .dropdown-item.dropdown-toggle::after {
      content: "▼";
      float: right;
      margin-left: 8px;
      transition: transform 0.3s ease;
    }
    
    .dropdown-submenu > .dropdown-item.dropdown-toggle[aria-expanded="true"]::after {
      transform: rotate(180deg);
    }
  }
</style>

{% if section.settings.is_sticky_header %}
  <script>
    document.addEventListener('DOMContentLoaded', function(){
      const header = document.querySelector('.nav-settings');
      const headerHeight = header.offsetHeight;

      const currentPath = window.location.pathname;
      const currentHandle = window.location.pathname.split('/').pop().split('?')[0];
      
      let shouldAddPadding = true;
      
      {% if section.settings.exempt_padding_pages_list != blank %}
        const exemptPages = [
          {% for link in section.settings.exempt_padding_pages_list.links %}
            "{{ link.url | split: '/' | last }}",
          {% endfor %}
        ];
        
        if (exemptPages.includes(currentHandle)) {
          shouldAddPadding = false;
        }
      {% endif %}
      
      if (shouldAddPadding && {% if section.settings.adjust_body_padding %}true{% else %}false{% endif %}) {
        document.body.style.paddingTop = headerHeight + 'px';
      }
      
      document.addEventListener('scroll', function(){
        if(window.scrollY > 50){
          header.classList.add('scrolled');
        } else {
          header.classList.remove('scrolled');
        }
      });
    });
  </script>
{% endif %}

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const searchModal = document.getElementById('searchModal');
    const closeSearchModalBtn = document.getElementById('closeSearchModal');
    const searchInputs = document.querySelectorAll('.form-control[type="search"]');
    const searchModalInput = document.getElementById('searchModalInput');
    
    searchInputs.forEach(input => {
      input.addEventListener('click', function(e) {
        e.preventDefault();
        searchModal.classList.add('show');
        setTimeout(() => {
          searchModalInput.focus();
        }, 100);
      });
    });
    
    closeSearchModalBtn.addEventListener('click', function() {
      searchModal.classList.remove('show');
    });
    
    searchModal.addEventListener('click', function(e) {
      if (e.target === searchModal) {
        searchModal.classList.remove('show');
      }
    });
    
    document.addEventListener('keydown', function(e) {
      if (e.key === 'Escape' && searchModal.classList.contains('show')) {
        searchModal.classList.remove('show');
      }
    });
    
    const searchForms = document.querySelectorAll('.search-form');
    searchForms.forEach(form => {
      form.addEventListener('submit', function(e) {
        e.preventDefault();
        searchModal.classList.add('show');
        const searchValue = form.querySelector('input[type="search"]').value;
        searchModalInput.value = searchValue;
        searchModalInput.focus();
      });
    });
  });

  function updateCartCount() {
    fetch('/cart.js')
      .then(response => response.json())
      .then(cart => {
        const countBadges = document.querySelectorAll('.cart-count-badge');
        countBadges.forEach(badge => {
          badge.textContent = cart.item_count;
          badge.setAttribute('data-count', cart.item_count);
        });
      })
      .catch(error => console.error('Error updating cart count:', error));
  }

  document.addEventListener('DOMContentLoaded', function() {
    updateCartCount();
  });

  document.addEventListener('DOMContentLoaded', function () {
    const dropdownToggles = document.querySelectorAll('.dropdown-toggle');

    dropdownToggles.forEach(toggle => {
      toggle.addEventListener('click', function (e) {
        e.preventDefault();
        const dropdownMenu = this.nextElementSibling;

        if (dropdownMenu) {
          dropdownMenu.classList.toggle('show');
        }
      });
    });
  });

  document.addEventListener('DOMContentLoaded', function () {
  const dropdownToggles = document.querySelectorAll('.dropdown-toggle');
  
  dropdownToggles.forEach(toggle => {
    toggle.addEventListener('click', function (e) {
      if (this.nextElementSibling && this.nextElementSibling.classList.contains('dropdown-menu')) {
        e.preventDefault();
        e.stopPropagation(); 
        
        const dropdownMenu = this.nextElementSibling;
        
        if (window.innerWidth <= 991) {
          dropdownMenu.classList.toggle('show');
          
          const parent = this.closest('li').parentNode;
          if (parent.classList.contains('dropdown-menu')) {
            const siblings = parent.querySelectorAll(':scope > li > .dropdown-menu');
            siblings.forEach(menu => {
              if (menu !== dropdownMenu && menu.classList.contains('show')) {
                menu.classList.remove('show');
              }
            });
          }
        }
      }
    });
  });
  
  if ('ontouchstart' in document.documentElement) {
    document.querySelectorAll('.dropdown-submenu > .dropdown-item').forEach(item => {
      item.addEventListener('click', function(e) {
        const parent = this.parentElement;
        if (!parent.classList.contains('show-touch-menu')) {
          e.preventDefault();
          document.querySelectorAll('.show-touch-menu').forEach(el => {
            if (!parent.contains(el)) el.classList.remove('show-touch-menu');
          });
          parent.classList.add('show-touch-menu');
        }
      });
    });
  }
});

document.addEventListener('DOMContentLoaded', function () {
  document.querySelectorAll('.dropdown-toggle, .dropdown-submenu > .dropdown-item.dropdown-toggle')
    .forEach(toggle => {
      toggle.addEventListener('click', function (e) {
        if (window.innerWidth <= 991) {
          e.preventDefault();
          e.stopPropagation();
          
          let dropdownMenu;
          if (this.classList.contains('dropdown-item')) {
            dropdownMenu = this.nextElementSibling;
          } else {
            dropdownMenu = this.nextElementSibling;
          }
          
          if (dropdownMenu && dropdownMenu.classList.contains('dropdown-menu')) {
            dropdownMenu.classList.toggle('show');
            
            const expanded = dropdownMenu.classList.contains('show');
            this.setAttribute('aria-expanded', expanded);
          }
        }
      });
    });
  
  if (window.innerWidth > 991) {
    document.querySelectorAll('.navbar-nav .dropdown').forEach(dropdown => {
      dropdown.addEventListener('mouseenter', function() {
        this.querySelector('.dropdown-menu').classList.add('show');
      });
      
      dropdown.addEventListener('mouseleave', function() {
        this.querySelector('.dropdown-menu').classList.remove('show');
      });
    });
  }
});

document.addEventListener('DOMContentLoaded', function() {
  const languageSwitcherItems = document.querySelectorAll('[data-shopify-locale-switcher]');
  languageSwitcherItems.forEach(item => {
    item.addEventListener('click', function(e) {
      e.preventDefault();
      const localeForm = document.getElementById('HeaderLanguageForm');
      const localeInput = localeForm.querySelector('[name="locale_code"]');
      localeInput.value = this.getAttribute('data-locale-code');
      localeForm.submit();
    });
  });
  
  const countrySwitcherItems = document.querySelectorAll('[data-shopify-country-switcher]');
  countrySwitcherItems.forEach(item => {
    item.addEventListener('click', function(e) {
      e.preventDefault();
      const countryForm = document.getElementById('HeaderCountryForm');
      const countryInput = countryForm.querySelector('[name="country_code"]');
      countryInput.value = this.getAttribute('data-country-code');
      countryForm.submit();
    });
  });
});
</script>

{% schema %}
{
  "name": "Header",
  "settings": [
    {
      "type": "header",
      "content": "Display Settings"
    },
    {
      "type": "select",
      "id": "header_alignment",
      "label": "Navigation Alignment",
      "options": [
        { "value": "left", "label": "Left" },
        { "value": "center", "label": "Center" },
        { "value": "right", "label": "Right" }
      ],
      "default": "left"
    },
    {
      "type": "select",
      "id": "header_layout",
      "label": "Component Order",
      "options": [
        { "value": "logo_menu_search", "label": "Logo → Menu → Search" },
        { "value": "menu_logo_search", "label": "Menu → Logo → Search" },
        { "value": "menu_search_logo", "label": "Menu → Search → Logo" },
        { "value": "logo_search_menu", "label": "Logo → Search → Menu" },
        { "value": "search_logo_menu", "label": "Search → Logo → Menu" },
        { "value": "search_menu_logo", "label": "Search → Menu → Logo" }
      ],
      "default": "logo_menu_search",
      "info": "Arrange the order of header components"
    },
    {
      "type": "header",
      "content": "Logo"
    },
    {
      "type": "image_picker",
      "id": "logo",
      "label": "Logo image"
    },
    {
      "type": "range",
      "id": "logo_size",
      "label": "Logo size (px)",
      "default": 100,
      "min": 50,
      "max": 250,
      "step": 10
    },
    {
      "type": "text",
      "id": "store_name",
      "label": "Store Name",
      "default": "Store Name",
      "info": "Enter store name in here"
    },
    {
      "type": "range",
      "id": "store_name_text_size",
      "label": "Store Name Text size (px)",
      "default": 14,
      "min": 5,
      "max": 40,
      "step": 1
    },
    {
      "type": "color",
      "id": "store_name_color",
      "label": "Store Name Color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "store_name_hover_color",
      "label": "Store Name Hover Color",
      "default": "#f0f0f0",
      "info": "Color when hovering over store name"
    },
    {
      "type": "select",
      "id": "store_name_transform",
      "label": "Text Transform",
      "options": [
        { "value": "none", "label": "None" },
        { "value": "uppercase", "label": "UPPERCASE" },
        { "value": "lowercase", "label": "lowercase" },
        { "value": "capitalize", "label": "Capitalize" }
      ],
      "default": "uppercase"
    },
    {
      "type": "select",
      "id": "store_name_font",
      "label": "Font Style",
      "options": [
        { "value": "inherit", "label": "Theme Default" },
        { "value": "'Montserrat', sans-serif", "label": "Montserrat" },
        { "value": "'Playfair Display', serif", "label": "Playfair Display" },
        { "value": "'Roboto', sans-serif", "label": "Roboto" },
        { "value": "'Lato', sans-serif", "label": "Lato" },
        { "value": "'Oswald', sans-serif", "label": "Oswald" }
      ],
      "default": "inherit",
      "info": "Select font family for store name"
    },
    {
      "type": "header",
      "content": "Navigation"
    },
    {
      "type": "link_list",
      "id": "menu",
      "label": "Menu"
    },
    {
      "type": "range",
      "id": "menu_text_size",
      "label": "Text size (px)",
      "default": 20,
      "min": 10,
      "max": 40,
      "step": 1
    },
    {
      "type": "range",
      "id": "menu_font_weight",
      "label": "Menu Font Weight",
      "default": 400,
      "min": 100,
      "max": 900,
      "step": 100
    },
    {
      "type": "header",
      "content": "Menu Hover Effects"
    },
    {
      "type": "select",
      "id": "menu_hover_effect",
      "label": "Menu item hover effect",
      "options": [
        { "value": "color", "label": "Color change only" },
        { "value": "underline", "label": "Underline" },
        { "value": "overline", "label": "Overline" },
        { "value": "grow", "label": "Grow" },
        { "value": "glow", "label": "Glow" },
        { "value": "border-bottom", "label": "Border bottom" }
      ],
      "default": "color",
      "info": "Select hover effect for menu items"
    },
    {
      "type": "header",
      "content": "Menu Effect Settings",
      "info": "Settings for specific menu hover effects"
    },
    {
      "type": "range",
      "id": "underline_thickness",
      "label": "Underline thickness (px)",
      "default": 2,
      "min": 1,
      "max": 5,
      "step": 1,
      "info": "Only applies when Underline effect is selected"
    },
    {
      "type": "range",
      "id": "glow_intensity",
      "label": "Glow intensity",
      "default": 8,
      "min": 4,
      "max": 20,
      "step": 2,
      "info": "Only applies when Glow effect is selected"
    },
    {
      "type": "range",
      "id": "grow_scale",
      "label": "Grow scale",
      "default": 1.1,
      "min": 1.1,
      "max": 1.5,
      "step": 0.1,
      "info": "Only applies when Grow effect is selected"
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "bg_header",
      "label": "Background color",
      "default": "#449EED"
    },
    {
      "type": "range",
      "id": "header_bg_opacity",
      "label": "Background opacity",
      "default": 0.4,
      "min": 0,
      "max": 1,
      "step": 0.1
    },
    {
      "type": "color",
      "id": "header_text_color",
      "label": "Text color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "header_text_hover_color",
      "label": "Text hover color",
      "default": "#ccc"
    },
    {
      "type": "color",
      "id": "header_link_hover_bg",
      "label": "Link hover background",
      "default": "transparent",
      "info": "Leave blank for no background color on hover"
    },
    
    {
      "type": "header",
      "content": "Search Bar"
    },
    {
      "type": "checkbox",
      "id": "enable_search_bar",
      "label": "Enable search",
      "default": true
    },
    {
      "type": "color",
      "id": "search_btn_text_color",
      "label": "Button icon color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "search_btn_hover_color",
      "label": "Button hover background",
      "default": "#357ABD"
    },
    {
      "type": "color",
      "id": "search_btn_text_hover_color",
      "label": "Button hover icon color",
      "default": "#ffffff"
    },
    {
      "type": "header",
      "content": "Icon Hover Effects"
    },
    {
      "type": "select",
      "id": "icon_hover_effect",
      "label": "Icon hover effect",
      "options": [
        { "value": "color", "label": "Color change only" },
        { "value": "pulse", "label": "Pulse" },
        { "value": "rotate", "label": "Rotate" },
        { "value": "scale", "label": "Scale up" }
      ],
      "default": "color",
      "info": "Select hover effect for icons"
    },
    {
      "type": "range",
      "id": "icon_font_size",
      "label": "Icon Font Size",
      "default": 18,
      "min": 14,
      "max": 30,
      "step": 1
    },
    {
      "type": "header",
      "content": "Icon Effect Settings",
      "info": "Settings for specific icon effects"
    },
    {
      "type": "range",
      "id": "pulse_intensity",
      "label": "Pulse intensity",
      "default": 1.2,
      "min": 1.1,
      "max": 2.0,
      "step": 0.1,
      "info": "Only applies when Pulse effect is selected"
    },
    {
      "type": "range",
      "id": "pulse_speed",
      "label": "Pulse speed (seconds)",
      "default": 0.8,
      "min": 0.3,
      "max": 2.0,
      "step": 0.1,
      "info": "Only applies when Pulse effect is selected"
    },
    {
      "type": "range",
      "id": "rotate_angle",
      "label": "Rotation angle (degrees)",
      "default": 15,
      "min": -180,
      "max": 180,
      "step": 5,
      "info": "Only applies when Rotate effect is selected"
    },
    {
      "type": "range",
      "id": "scale_size",
      "label": "Scale size",
      "default": 1.3,
      "min": 1.1,
      "max": 2.0,
      "step": 0.1,
      "info": "Only applies when Scale Up effect is selected"
    },
    {
      "type": "header",
      "content": "Sticky Header"
    },
    {
      "type": "checkbox",
      "id": "is_sticky_header",
      "label": "Enable sticky header",
      "default": false,
      "info": "Header will stay fixed at the top when scrolling"
    },
    {
      "type": "checkbox",
      "id": "adjust_body_padding",
      "label": "Add padding to body",
      "default": true,
      "info": "Pushes content down to prevent header overlap"
    },
    {
      "type": "link_list",
      "id": "exempt_padding_pages_list",
      "label": "Pages with no padding",
      "info": "Select pages that should not have added padding"
    },
    {
      "type": "header",
      "content": "Search Modal"
    },
    {
      "type": "checkbox",
      "id": "enable_search_modal",
      "label": "Enable search modal",
      "default": true,
      "info": "Show a fullscreen search modal instead of a dropdown"
    },
    {
      "type": "text",
      "id": "search_modal_title",
      "label": "Modal title",
      "default": "Search our destinations"
    },
    {
      "type": "text",
      "id": "popular_destinations",
      "label": "Popular destinations (comma separated)",
      "default": "Paris, Tokyo, New York, Bali, London, Rome",
      "info": "These will appear as quick search options"
    },
    {
      "type": "color",
      "id": "dropdown_bg_color",
      "label": "Dropdown Background Color",
      "default": "rgba(255, 255, 255, 0.95)"
    },
    {
      "type": "color",
      "id": "dropdown_hover_bg_color",
      "label": "Dropdown Hover Background Color",
      "default": "#f8f9fa"
    },
    {
      "type": "color",
      "id": "dropdown_hover_text_color",
      "label": "Dropdown Hover Text Color",
      "default": "#333"
    },
    {
      "type": "header",
      "content": "Localization"
    },
    {
      "type": "checkbox",
      "id": "enable_locale_selector",
      "label": "Show language/country selectors",
      "default": true,
      "info": "To add languages, go to your Shopify language settings."
    },
    {
      "type": "select",
      "id": "locale_position",
      "label": "Mobile position",
      "options": [
        { "value": "above_icons", "label": "Above icons" },
        { "value": "below_menu", "label": "Below menu items" }
      ],
      "default": "above_icons",
      "info": "Controls where selectors appear on mobile devices"
    }
  ],
  "presets": [
    {
      "name": "Header",
      "category": "header"
    }
  ]
}
{% endschema %}
