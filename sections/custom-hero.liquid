{%- if section.settings.bg_img -%}
  {% comment %} Generate smaller images for mobile and desktop {% endcomment %}
  {%- assign bg_img_mobile = section.settings.bg_img | img_url: '800x', format: 'pjpg', quality: 80 -%}
  {%- assign bg_img_desktop = section.settings.bg_img | img_url: '1600x', format: 'pjpg', quality: 85 -%}

  {% comment %} Use preload with fetchpriority {% endcomment %}
  <link rel="preload" fetchpriority="high" href="{{ bg_img_mobile }}" as="image" media="(max-width: 767px)">
  <link rel="preload" fetchpriority="high" href="{{ bg_img_desktop }}" as="image" media="(min-width: 768px)">
{%- endif -%}
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>

<!-- Font optimization for mobile performance -->
<link rel="preconnect" href="https://fonts.googleapis.com" crossorigin>
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>

<!-- Only load critical font weights -->
{% if section.settings.title_font != "Helvetica, sans-serif" %}
  <link rel="preload" as="font" fetchpriority="high" href="https://fonts.googleapis.com/css2?family={{ section.settings.title_font | replace: ' ', '+' }}:wght@700&display=swap">
{% endif %}

<!-- For browsers that support fetchpriority -->
<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family={{ section.settings.title_font | replace: ' ', '+' }}:wght@700&display=swap" fetchpriority="high">
<!-- Convert Form Background Color -->
{% assign input_hex_color = section.settings.form_bg_color %}
{% include 'hex-to-rgb' %}
{% assign form_red = red %}
{% assign form_green = green %}
{% assign form_blue = blue %}

<!-- Convert Header Background Color -->
{% assign input_hex_color = section.settings.bg_header %}
{% include 'hex-to-rgb' %}
{% assign header_red = red %}
{% assign header_green = green %}
{% assign heaeder_blue = blue %}


{% assign alignment_class = 'justify-content-start' %}
{% if section.settings.header_alignment == 'center' %}
  {% assign alignment_class = 'justify-content-center' %}
{% elsif section.settings.header_alignment == 'right' %}
  {% assign alignment_class = 'justify-content-end' %}
{% endif %}

<section class="hero-section align-items-center">
  {% if section.settings.is_header %}
    <nav class="navbar navbar-expand-lg nav-settings">
      <div class="container-fluid d-flex">
        <div class="justify-content-start">
          <div class="logo-name-container">
            <a class="navbar-brand" href="#">
              <img
                src="{{ section.settings.logo | img_url: '100px' }}"
                alt="{{ shop.name }}"
                width="{{ section.settings.logo_size }}"
                height="auto"
              >
            </a>
            {% if section.settings.store_name %}
              <a href="{{ routes.root_url }}" class="store-name-link">
                <div class="store-name">
                  {{ section.settings.store_name }}
                </div>
              </a>
            {% endif %}
          </div>
        </div>
        <div class="justify-content-end">
          <button
            class="navbar-toggler"
            type="button"
            data-bs-toggle="collapse"
            data-bs-target="#navbarSupportedContent"
            aria-controls="navbarSupportedContent"
            aria-expanded="false"
            aria-label="Toggle navigation"
          >
            <i class="bi bi-list btn-outline-success"></i>
          </button>
        </div>
        <div class="collapse navbar-collapse nav-text" id="navbarSupportedContent">
          <ul class="navbar-nav mb-2 mb-lg-0 {{ alignment_class }} flex-grow-1">
            {% for menu in section.settings.menu.links %}
              <li class="nav-item {% if menu.links.size > 0 %} dropdown {% endif %}">
                <a
                  class="nav-link {% if menu.links.size > 0 %} dropdown-toggle {% endif %}"
                  href="{{ menu.url }}"
                  {% if menu.links.size > 0 %}
                    id="navbarDropdown_{{ forloop.index }}"
                    role="button"
                    data-bs-toggle="dropdown"
                    aria-expanded="false"
                  {% endif %}
                >
                  {{ menu.title }}
                </a>

                {% if menu.links.size > 0 %}
                  <ul class="dropdown-menu" aria-labelledby="navbarDropdown_{{ forloop.index }}">
                    {% for sub_menu in menu.links %}
                      <li class="{% if sub_menu.links.size > 0 %} dropdown-submenu {% endif %}">
                        <a
                          class="dropdown-item {% if sub_menu.links.size > 0 %} dropdown-toggle {% endif %}"
                          href="{{ sub_menu.url }}"
                        >
                          {{ sub_menu.title }}
                        </a>

                        {% if sub_menu.links.size > 0 %}
                          <ul class="dropdown-menu">
                            {% for sub_sub_menu in sub_menu.links %}
                              <li>
                                <a class="dropdown-item" href="{{ sub_sub_menu.url }}">{{ sub_sub_menu.title }}</a>
                              </li>
                            {% endfor %}
                          </ul>
                        {% endif %}
                      </li>
                    {% endfor %}
                  </ul>
                {% endif %}
              </li>
            {% endfor %}
          </ul>
          {% if section.settings.enable_search_bar %}
            <form class="d-flex">
              <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search">
              <button class="btn btn-outline-success ml-2" type="submit">
                <i class="bi bi-search-heart-fill btn-outline-success"></i>
              </button>
              <a href="{{ routes.account_url }}" class="btn btn-outline-success ms-2" aria-label="Account">
                <i class="bi bi-person-fill"></i>
              </a>
              <a href="{{ routes.cart_url }}" class="btn btn-outline-success ms-2 cart-link-container" aria-label="Cart">
                <i class="bi bi-cart-fill"></i>
                <span class="cart-count-badge">{{ cart.item_count }}</span>
              </a>
            </form>
          {% endif %}
        </div> 
      </div> 
    </nav>
    <div class="line"></div>
  {% endif %}

  <div class="container position-relative d-flex">
    <div class="row align-items-center">
      <div class="col-lg-7 col-md-12 hero-content-wrapper">
        <div class="hero-decorative-elements">
          <div class="floating-circle circle-1"></div>
          <div class="floating-circle circle-2"></div>
          <div class="animated-line"></div>
        </div>

        <h1 class="hero-title animate__animated animate__fadeInUp {% if section.settings.title_effect != 'none' %}text-{{ section.settings.title_effect }}{% endif %}">
          {% if section.settings.title_text %}
            <span class="hero-title-wrapper">
              {{ section.settings.title_text | replace: 'Dare', '<span class="highlight-text">Dare</span>' | replace: 'Live', '<span class="highlight-text">Live</span>' }}
            </span>
          {% endif %}
        </h1>

        <p class="hero-subtitle animate__animated animate__fadeInUp animate__delay-1s {% if section.settings.subtitle_effect != 'none' %}text-{{ section.settings.subtitle_effect }}{% endif %}">
          {% if section.settings.sub_title_text %}
            {{ section.settings.sub_title_text }}
          {% endif %}
        </p>

        <div class="hero-buttons animate__animated animate__fadeInUp animate__delay-2s">
          <a href="{{ section.settings.btn1_url }}" class="btn btn-primary hero-btn btn1">
            <span class="btn-content">{{ section.settings.btn1_text }}</span>
            <span class="btn-icon"><i class="bi bi-arrow-right"></i></span>
          </a>
          <a href="{{ section.settings.btn2_url }}" class="btn btn-outline-light hero-btn btn2">
            <span class="btn-content">{{ section.settings.btn2_text }}</span>
            <span class="btn-icon"><i class="bi bi-play-circle"></i></span>
          </a>
        </div>

        <div class="destination-teasers animate__animated animate__fadeInUp animate__delay-3s">
          <div class="teaser-tags">
            {% for block in section.blocks limit: 3 %}
              {% if block.settings.destination_title %}
                <a href="#" class="destination-tag" data-bs-toggle="tooltip" title="{{ block.settings.destination_title }} - Starts at {{ block.settings.unit_price | money }}">
                  {{ block.settings.destination_title }}
                </a>
              {% endif %}
            {% endfor %}
          </div>
        </div>
      </div>

      {% if section.settings.if_form %}
        <div class="col-lg-4 col-md-8 offset-lg-1 offset-md-0">
          {% render 'booking-form', 
            form_title: section.settings.form_title,
            min_price: section.settings.min_price,
            max_price: section.settings.max_price,
            form_red: form_red,
            form_green: form_green,
            form_blue: form_blue,
            form_bg_opacity: section.settings.form_bg_opacity,
            form_text_color: section.settings.form_text_color,
            blocks: section.blocks
          %}
        </div>
      {% endif %}
    </div>
  </div>
</section>

<script>
document.head.insertAdjacentHTML('beforeend', `
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
`);

document.addEventListener('DOMContentLoaded', function() {
  // Form functionality
  const bookNowBtn = document.getElementById('bookNowBtn');
  if(bookNowBtn) {
    bookNowBtn.addEventListener('click', () => {
      const destSelect = document.getElementById('destinationSelect');
      const selectedOption = destSelect.options[destSelect.selectedIndex];

      const destinationTitle = selectedOption.value; 
      const destinationDescription = selectedOption.dataset.destDescription; 
      const destinationPrice = selectedOption.dataset.destPrice; 
      const tourType = document.getElementById('tourType').value;

      const url = `/pages/tour-booking?dest=${encodeURIComponent(destinationTitle)}&desc=${encodeURIComponent(destinationDescription)}&price=${encodeURIComponent(destinationPrice)}&type=${encodeURIComponent(tourType)}`;

      window.location.href = url;
    });
  }
  
  // Dropdown toggle functionality
  const dropdownToggles = document.querySelectorAll('.dropdown-toggle');
  dropdownToggles.forEach(toggle => {
    toggle.addEventListener('click', function (e) {
      if (this.nextElementSibling && this.nextElementSibling.classList.contains('dropdown-menu')) {
        e.preventDefault();
        e.stopPropagation();
        
        const dropdownMenu = this.nextElementSibling;
        
        if (window.innerWidth <= 991) {
          dropdownMenu.classList.toggle('show');
          
          const parent = this.closest('li').parentNode;
          if (parent.classList.contains('dropdown-menu')) {
            const siblings = parent.querySelectorAll(':scope > li > .dropdown-menu');
            siblings.forEach(menu => {
              if (menu !== dropdownMenu && menu.classList.contains('show')) {
                menu.classList.remove('show');
              }
            });
          }
        }
      }
    });
  });

  // Text effect enhancement
  function enhanceTextOutline() {
    if ('{{section.settings.title_effect}}' === 'outline') {
      const titleElement = document.querySelector('.hero-title');
      if (titleElement && !CSS.supports('-webkit-text-stroke', '1px black')) {
        applyTextStrokePolyfill(titleElement, 
          '{{section.settings.title_effect_width}}',
          '{{section.settings.title_effect_color}}');
      }
    }
    
    if ('{{section.settings.subtitle_effect}}' === 'outline') {
      const subtitleElement = document.querySelector('.hero-subtitle');
      if (subtitleElement && !CSS.supports('-webkit-text-stroke', '1px black')) {
        applyTextStrokePolyfill(subtitleElement,
          '{{section.settings.subtitle_effect_width}}',
          '{{section.settings.subtitle_effect_color}}');
      }
    }
  }
  
  function applyTextStrokePolyfill(element, width, color) {
    const shadowWidth = parseInt(width);
    const shadowColor = color;
    
    const shadows = [];
    for (let i = -shadowWidth; i <= shadowWidth; i++) {
      for (let j = -shadowWidth; j <= shadowWidth; j++) {
        if (i === 0 && j === 0) continue;
        shadows.push(`${i}px ${j}px 0 ${shadowColor}`);
      }
    }
    
    element.style.textShadow = shadows.join(', ');
  }
  
  enhanceTextOutline();
  updateCartCount();
});

// Non-critical JS that can wait until everything else is loaded
window.addEventListener('load', function() {
  // Setup tooltips - visual enhancement only
  if (typeof bootstrap !== 'undefined') {
    const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
    const tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
      return new bootstrap.Tooltip(tooltipTriggerEl);
    });
  }
  
  // Decorative animations and effects - purely visual
  const heroContent = document.querySelector('.hero-content-wrapper');
  const heroTitle = document.querySelector('.hero-title');
  const circles = document.querySelectorAll('.floating-circle');
  
  if (heroContent && window.innerWidth > 992) {
    document.addEventListener('mousemove', function(e) {
      // Check for reduced motion preference
      if (!window.matchMedia('(prefers-reduced-motion: reduce)').matches) {
        const x = e.clientX / window.innerWidth;
        const y = e.clientY / window.innerHeight;
        
        if (heroTitle) {
          heroTitle.style.transform = `translate(${x * 10}px, ${y * 10}px)`;
        }
        
        circles.forEach((circle, index) => {
          const factor = index === 0 ? -1 : 1;
          circle.style.transform = `translate(${x * 20 * factor}px, ${y * 20 * factor}px)`;
        });
      }
    });
  }
  
  // Hover effects - purely decorative
  if (heroTitle) {
    heroTitle.addEventListener('mouseover', function() {
      this.classList.add('hover-effect');
    });
    
    heroTitle.addEventListener('mouseout', function() {
      this.classList.remove('hover-effect');
    });
  }
  
  // Touch menu behavior - enhancement
  if ('ontouchstart' in document.documentElement) {
    document.querySelectorAll('.dropdown-submenu > .dropdown-item').forEach(item => {
      item.addEventListener('click', function(e) {
        const parent = this.parentElement;
        if (!parent.classList.contains('show-touch-menu')) {
          e.preventDefault();
          document.querySelectorAll('.show-touch-menu').forEach(el => {
            if (!parent.contains(el)) el.classList.remove('show-touch-menu');
          });
          parent.classList.add('show-touch-menu');
        }
      });
    });
  }
});

// Helper function that might be called from multiple places
function updateCartCount() {
  fetch('/cart.js')
    .then(response => response.json())
    .then(cart => {
      const countBadges = document.querySelectorAll('.cart-count-badge');
      countBadges.forEach(badge => {
        badge.textContent = cart.item_count;
        badge.setAttribute('data-count', cart.item_count);
      });
    })
    .catch(error => console.error('Error updating cart count:', error));
}

// Move all decorative animations to deferred loading
const decorativeEffects = function() {
  const heroContent = document.querySelector('.hero-content-wrapper');
  const heroTitle = document.querySelector('.hero-title');
  const circles = document.querySelectorAll('.floating-circle');
  
  if (heroContent && window.innerWidth > 992) {
    document.addEventListener('mousemove', function(e) {
      // Mouse tracking animation code
    });
  }
};

// Only load decorative effects after everything else
if (window.requestIdleCallback) {
  window.requestIdleCallback(decorativeEffects);
} else {
  setTimeout(decorativeEffects, 2000);
}

// Defer loading of non-critical CSS
const loadDeferredStyles = function() {
  const addStylesNode = document.getElementById('deferred-styles');
  const replacement = document.createElement('div');
  replacement.innerHTML = addStylesNode.textContent;
  document.body.appendChild(replacement);
  addStylesNode.parentElement.removeChild(addStylesNode);
};

const raf = window.requestAnimationFrame || window.mozRequestAnimationFrame ||
    window.webkitRequestAnimationFrame || window.msRequestAnimationFrame;
if (raf) raf(function() { window.setTimeout(loadDeferredStyles, 0); });
else window.addEventListener('load', loadDeferredStyles);
</script>

<style>
  .hero-section .navbar-toggler {
    z-index: 3;
  }
  .hero-section .nav-settings {
    position: relative;
    z-index: 2;
    background-color: rgba({{ header_red }}, {{ header_green }}, {{ heaeder_blue }}, {{ section.settings.header_bg_opacity }}) !important;
    color: {{ section.settings.header_text_color }};
    font-size: {{ section.settings.menu_text_size }};
    box-shadow: none;
  }
  .hero-section .line {
    display: block;
    width: 95%;
    height: 1px;
    margin: 0 auto;
    z-index:20;
    background-color: #fff;
    border-radius: 2px;
  }
  .hero-section .nav-settings .nav-link {
    color: {{ section.settings.header_text_color }} !important;
    transition: color 0.3s;
    font-size: {{section.settings.menu_text_size}}px;
    font-weight: {{ section.settings.menu_font_weight }};
  }
  .hero-section .nav-settings .nav-link:hover {
    color: {{ section.settings.header_text_hover_color }} !important;
  }
  .hero-section .nav-settings .btn-outline-success {
    background-color: transparent;
    border-color: transparent;
    color: {{ section.settings.search_btn_text_color }} !important;
    transition: background-color 0.3s, border-color 0.3s, color 0.3s;
    font-size: {{section.settings.icon_font_size}}px;
    padding: 8px 12px;
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    min-width: 42px;
    min-height: 42px;
  }
  .hero-section .nav-settings .btn-outline-success:hover {
    {% comment %} background-color: {{ section.settings.search_btn_hover_color }} !important; {% endcomment %}
    border-color: transparent;
    color: {{ section.settings.search_btn_text_hover_color }} !important;
  }
  .hero-section .btn-outline-success i {
    color: {{ section.settings.search_btn_text_color }} !important;
    transition: color 0.3s ease;
  }
  .hero-section .btn-outline-success:hover i {
    color: {{ section.settings.search_btn_text_hover_color }} !important;
  }
  .hero-section {
    position: relative;
    width: 100%;
    min-height: 100vh;
    background-color: #000; /* Fallback before image loads */
  }
  
  /* Background image with proper aspect ratio to prevent layout shift */
  .hero-section {
    background-image: url('{{ bg_img_desktop }}');
    background-position: center center;
    background-repeat: no-repeat;
    background-size: cover;
  }
  
  /* Overlay with better stacking context */
  .hero-section::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1;
    
    {% if section.settings.enable_overlay %}
      background-color: {{ section.settings.overlay_color | color_modify: 'alpha', section.settings.overlay_opacity }};
    {% endif %}
  }
  
  /* Use appropriate background images for different screen sizes */
  @media (max-width: 767px) {
    .hero-section {
      background-image: url('{{ bg_img_mobile }}');
    }
  }
  .hero-section .row.align-items-center {
    min-height: 100vh;
  }
  .hero-section .container {
    position: relative;
    z-index: 2; 
  }
  .booking-form {
    background-color: rgba({{ form_red }}, {{ form_green }}, {{ form_blue }}, {{ section.settings.form_bg_opacity }}) !important;
    color: {{ section.settings.form_text_color }};
    padding: 2rem 2rem;
    margin-top: 2rem;
    border-radius: 0.25rem;
    border: 2px solid #ffffff;
    box-shadow: none;
    min-height: 450px; /* Adjust to match your form's height */
    height: auto;
    width: 100%;
  }
  .booking-form .form-control {
    border: 1px solid #ccc;
    border-radius: 0.25rem;
    padding: 0.75rem;
    background-color: #ffffff;
    color: #333;
    box-shadow: inset 0px 1px 3px rgba(0, 0, 0, 0.1);
  }
  .booking-form .form-control:focus {
    border: 1px solid #449EED;
    box-shadow: 0px 0px 6px rgba(68, 158, 237, 0.4);
    outline: none;
  }
  .booking-form button {
    border: 1px solid #449EED;
    border-radius: 0.25rem;
    background-color: #449EED;
    color: #ffffff;
    padding: 0.75rem 1.5rem;
    transition: all 0.3s ease;
  }
  .booking-form button:hover {
    background-color: #357ABD;
    border-color: #357ABD;
    color: #ffffff;
  }
  .booking-form label {
    font-weight: 500;
  }
  .booking-form .form-group {
    margin-bottom: 1.5rem;
  }
  .hero-section .btn1 {
    background-color: {{ section.settings.btn1_color }} !important;
    border-color: {{ section.settings.btn1_color }} !important;
    color: {{section.settings.btn1_text_color}} !important;
    transition: background-color 0.3s, border-color 0.3s;
  }
  .hero-section .btn1:hover {
    background-color: {{ section.settings.btn1_hover_color }} !important;
    border-color: {{ section.settings.btn1_hover_color }} !important;
    color: {{section.settings.btn1_text_hover_color}} !important;
  }
  .hero-section .btn2{
    color: {{section.settings.btn2_text_color}} !important;
    transition: background-color 0.3s, border-color 0.3s, color 0.3s;
  }
  .hero-section .btn2:hover {
    background-color: {{ section.settings.btn2_hover_color }} !important;
    border-color: {{ section.settings.btn2_hover_color }} !important;
    color: {{ section.settings.btn2_text_hover_color }} !important;
  }
  .hero-section .btn1:focus, .hero-section .btn2:focus {
    box-shadow: none !important;
  }
  .navbar-collapse {
    position: relative;
    left: 0;
    right: 0;
    width: 100%;
    background: transparent;
    z-index: 1050; 
    padding: 15px;
  }
  .cart-link-container {
    position: relative;
    display: inline-flex;
    align-items: center;
    justify-content: center;
  }

  .cart-count-badge {
    position: absolute;
    top: 0px;
    right: 0px;
    background-color: {{ section.settings.btn1_color | default: '#449EED' }};
    color: white;
    border-radius: 50%;
    min-width: 18px;
    height: 18px;
    font-size: 11px;
    font-weight: bold;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0 4px;
    line-height: 3;
  }

  /* Hide badge when cart is empty */
  .cart-count-badge:empty,
  .cart-count-badge[data-count="0"] {
    display: none;
  }

  .logo-name-container {
    display: flex;
    flex-direction: column; 
    align-items: center; 
    gap: 10px; 
  }

  .store-name {
    font-size: {{ section.settings.store_name_text_size }}px;
    font-weight: 700;
    color: {{ section.settings.store_name_color }};
    text-transform: {{ section.settings.store_name_transform }};
    font-family: {{ section.settings.store_name_font | default: 'inherit' }};
    white-space: nowrap;
    text-align: center; 
  }

  .store-name:hover, 
  .store-name-link:hover .store-name {
    color: {{ section.settings.store_name_hover_color }} !important;
    transition: color 0.3s ease;
  }

  @media (max-width: 767px) {
    .store-name {
      font-size: calc({{ section.settings.store_name_text_size }}px * 0.75); 
    }
    
    .logo-name-container {
      gap: 8px;
    }
  }

  .logo-name-container {
    {% comment %} display: flex; {% endcomment %}
    align-items: center;
    gap: 10px;
    flex-wrap: nowrap;
  }

  .navbar-nav .dropdown-menu {
    position: absolute;
    top: 100%;
    left: 0;
    display: none;
    background-color: transparent; 
    border: none; 
    border-radius: 4px;
    padding: 10px 0;
    z-index: 1000;
    min-width: 200px.
  }

  .navbar-nav .dropdown-item {
    color: {{ section.settings.dropdown_text_color | default: section.settings.header_text_color }}; /* Use text color from settings */
    padding: 8px 15px;
    transition: color 0.3s;
  }

  .navbar-nav .dropdown-item:hover {
    background-color: transparent; 
    color: {{ section.settings.submenu_hover_text_color | default: section.settings.header_text_hover_color }};
  }

  .navbar-nav .dropdown-item::after {
    content: '';
    display: block;
    width: 0;
    height: 1px;
    background-color: {{ section.settings.submenu_hover_text_color | default: section.settings.header_text_hover_color }};
    transition: width 0.3s;
  }

  .navbar-nav .dropdown-item:hover::after {
    width: 100%;
  }

  .navbar-nav .dropdown-submenu {
    position: relative;
  }

  .navbar-nav .dropdown-submenu .dropdown-menu {
    top: 0;
    left: 100%;
    margin-left: 0.1rem;
    border-radius: 4px;
  }

  .navbar-nav .dropdown-submenu > .dropdown-toggle::after {
    content: "▶";
    float: right;
    margin-left: 5px;
    font-size: 0.8rem;
    color: #666;
  }

  .navbar-nav .dropdown-item:hover {
    background-color: #f8f9fa;
    color: #333;
  }

  .navbar-nav .dropdown-submenu > .dropdown-menu {
    top: 0;
    left: 100%;
    margin-top: -6px; 
    margin-left: 0;
    border-radius: 4px;
  }

  .navbar-nav .dropdown-submenu:hover > .dropdown-menu {
    display: block;
  }

  @media (max-width: 991px) {
    .navbar-nav .dropdown-menu {
      position: static;
      float: none;
      width: auto;
      margin-top: 0;
      background-color: transparent;
      border: 0;
      box-shadow: none;
      padding-left: 15px;
    }
    
    .navbar-nav .dropdown-menu.show {
      display: block;
    }
    
    .navbar-nav .dropdown-submenu .dropdown-menu {
      margin-left: 0;
      padding-left: 15px;
    }
    
    .navbar-nav .dropdown-submenu > .dropdown-item.dropdown-toggle::after {
      content: "▼";
      float: right;
    }
  }

  {% case section.settings.dropdown_hover_effect %}
  {% when 'underline' %}
    .navbar-nav .dropdown-item::after {
      content: '';
      display: block;
      width: 0;
      height: 1px;
      background-color: {{ section.settings.submenu_hover_text_color | default: section.settings.header_text_hover_color }};
      transition: width 0.3s;
    }
    
    .navbar-nav .dropdown-item:hover::after {
      width: 100%;
    }
  {% when 'fade' %}
    .navbar-nav .dropdown-item {
      transition: opacity 0.3s ease;
    }
    
    .navbar-nav .dropdown-item:hover {
      opacity: 0.7;
    }
    
    .navbar-nav .dropdown-item::after {
      content: none;
    }
  {% endcase %}

  .navbar-nav .dropdown-toggle,
  .navbar-nav .dropdown-item.dropdown-toggle {
    background-color: transparent !important;
  }

  .navbar-nav .dropdown-item.dropdown-toggle:hover {
    background-color: transparent !important;
  }

  .navbar-nav .dropdown-menu {
    background-color: {{ section.settings.dropdown_bg_color }} !important;
    border: 1px solid rgba(0,0,0,0.15);
  }

  .store-name-link:hover .store-name {
    color: {{ section.settings.store_name_hover_color }} !important;
    text-decoration: underline;
    transform: scale(1.05);
    transition: all 0.3s ease;
  }

  /* Enhanced Hero Content Styles */
  .hero-content-wrapper {
    position: relative;
    padding: 2rem 1rem 2rem 0;
    z-index: 10;
    min-height: 400px; /* Adjust based on your content */
    height: auto;
    min-height: unset; /* Remove fixed height constraint */
  }
  
  /* Animated title with gradient highlight */
  .hero-title {
    font-family: "{{ section.settings.title_font }}", sans-serif;
    font-size: calc({{section.settings.title_size}}rem + 0.5vw);
    line-height: 1.2;
    font-weight: 800;
    color: {{section.settings.title_color}};
    margin-bottom: 1.5rem;
    position: relative;
    letter-spacing: -0.5px;
    text-shadow: 0 2px 10px rgba(0,0,0,0.1);
  }
  
  .hero-title-wrapper {
    position: relative;
    display: inline-block;
  }
  
  
  /* Enhanced subtitle */
  .hero-subtitle {
    font-size: calc({{section.settings.sub_title_size}}rem + 0.2vw);
    font-weight: {{ section.settings.sub_title_weight }};
    margin: 0 0 2.5rem 0;
    color: {{section.settings.sub_title_color}};
    max-width: 90%;
    line-height: 1.6;
    position: relative;
    text-shadow: 0 1px 3px rgba(0,0,0,0.15);
  }
  
  /* Enhanced button styles */
  .hero-buttons {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    margin-bottom: 2.5rem;
  }
  
  .hero-btn {
    position: relative;
    display: inline-flex;
    align-items: center;
    padding: 0.75rem 1.5rem;
    border-radius: 50px;
    font-weight: 600;
    font-size: 1rem;
    overflow: hidden;
    transition: all 0.4s ease;
    box-shadow: 0 4px 15px rgba(0,0,0,0.2);
  }
  
  .btn1 {
    background: linear-gradient(45deg, {{ section.settings.btn1_color }}, {{ section.settings.btn1_hover_color }});
    border: none;
    color: {{section.settings.btn1_text_color}} !important;
  }
  
  .btn1:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 20px rgba(0,0,0,0.3);
    background: linear-gradient(45deg, {{ section.settings.btn1_hover_color }}, {{ section.settings.btn1_color }});
  }
  
  .btn2 {
    background: transparent;
    border: 2px solid rgba(255,255,255,0.8);
    color: {{section.settings.btn2_text_color}} !important;
  }
  
  .btn2:hover {
    background: rgba(255,255,255,0.1);
    transform: translateY(-5px);
    box-shadow: 0 10px 20px rgba(0,0,0,0.2);
  }
  
  .btn-content {
    display: inline-block;
    transition: transform 0.3s ease;
  }
  
  .btn-icon {
    margin-left: 8px;
    opacity: 0;
    transform: translateX(-15px);
    transition: all 0.3s ease;
  }
  
  .hero-btn:hover .btn-content {
    transform: translateX(-5px);
  }
  
  .hero-btn:hover .btn-icon {
    opacity: 1;
    transform: translateX(0);
  }
  
  /* Decorative elements */
  .hero-decorative-elements {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: -1;
  }
  
  .floating-circle {
    position: absolute;
    border-radius: 50%;
    opacity: 0.5;
    filter: blur(10px);
    contain: layout paint;
  }
  
  .circle-1 {
    width: 200px;
    height: 200px;
    background: radial-gradient(circle, rgba(68, 158, 237, 0.3), transparent);
    top: -50px;
    left: -100px;
    animation: float 8s ease-in-out infinite;
  }
  
  .circle-2 {
    width: 150px;
    height: 150px;
    background: radial-gradient(circle, rgba(237, 68, 168, 0.2), transparent);
    bottom: -30px;
    right: 10%;
    animation: float 12s ease-in-out infinite reverse;
  }
  
  .animated-line {
    position: absolute;
    height: 2px;
    width: 150px;
    background: linear-gradient(90deg, transparent, {{ section.settings.btn1_color }}, transparent);
    top: 30%;
    left: -80px;
    animation: slide 3s ease-in-out infinite;
    contain: layout paint;
  }
  
  /* Destination teasers */
  .destination-teasers {
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    gap: 10px;
  }
  
  .teaser-label {
    font-size: 0.9rem;
    color: rgba(255,255,255,0.8);
    margin-right: 10px;
  }
  
  .teaser-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 8px;
  }
  
  .destination-tag {
    display: inline-block;
    padding: 6px 14px;
    background: rgba(255,255,255,0.15);
    border: 1px solid rgba(255,255,255,0.3);
    border-radius: 50px;
    color: #fff;
    font-size: 0.85rem;
    transition: all 0.3s ease;
    text-decoration: none;
  }
  
  .destination-tag:hover {
    background: rgba(255,255,255,0.25);
    transform: translateY(-3px);
    box-shadow: 0 5px 15px rgba(0,0,0,0.1);
    color: #fff;
  }
  
  /* Animations */
  @keyframes float {
    0%, 100% {
      transform: translateY(0) scale(1);
    }
    50% {
      transform: translateY(-20px) scale(1.05);
    }
  }
  
  @keyframes slide {
    0% {
      transform: translateX(0) scaleX(0.5);
      opacity: 0;
    }
    50% {
      transform: translateX(300px) scaleX(1.5);
      opacity: 0.5;
    }
    100% {
      transform: translateX(600px) scaleX(0.5);
      opacity: 0;
    }
  }
  
  @keyframes pulse {
    0%, 100% {
      box-shadow: 0 0 0 rgba({{ form_red }}, {{ form_green }}, {{ form_blue }}, 0);
    }
    50% {
      box-shadow: 0 0 20px rgba({{ form_red }}, {{ form_green }}, {{ form_blue }}, 0.4);
    }
  }
  
  /* Mobile optimizations */
  @media (max-width: 991px) {
    .hero-content-wrapper {
      padding: 1rem 0;
      text-align: center;
    }
    
    .hero-subtitle {
      max-width: 100%;
      margin-left: auto;
      margin-right: auto;
    }
    
    .hero-buttons {
      justify-content: center;
    }
    
    .destination-teasers {
      justify-content: center;
      margin-bottom: 2rem;
    }
    
    .circle-1, .circle-2 {
      display: none;
    }
  }
  
  /* Add Animate.css classes if not already included */
  .animate__animated {
    animation-duration: 1s;
    animation-fill-mode: both;
  }
  
  .animate__fadeInUp {
    animation-name: fadeInUp;
  }
  
  .animate__delay-1s {
    animation-delay: 0.3s;
  }
  
  .animate__delay-2s {
    animation-delay: 0.6s;
  }
  
  .animate__delay-3s {
    animation-delay: 0.9s;
  }
  
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translate3d(0, 30px, 0);
    }
    to {
      opacity: 1;
      transform: translate3d(0, 0, 0);
    }
  }
    
    {% if section.settings.title_effect == 'outline' %}
      -webkit-text-stroke: 0;
      text-stroke: 0;
    {% elsif section.settings.title_effect == 'shadow' %}
      text-shadow: none;
    {% endif %}
  }

  /* Additional CSS for better text outline effect */
  @supports (-webkit-text-stroke: 1px black) {
    .hero-title.text-outline {
      -webkit-text-stroke: {{ section.settings.title_effect_width }}px {{ section.settings.title_effect_color }};
      paint-order: stroke fill;
    }
    
    .hero-subtitle.text-outline {
      -webkit-text-stroke: {{ section.settings.subtitle_effect_width }}px {{ section.settings.subtitle_effect_color }};
      paint-order: stroke fill;
    }
  }

  /* Text effect styles */
  .hero-title.text-outline {
    -webkit-text-stroke: {{ section.settings.title_effect_width }}px {{ section.settings.title_effect_color }};
    text-stroke: {{ section.settings.title_effect_width }}px {{ section.settings.title_effect_color }};
    paint-order: stroke fill;
    text-shadow: none;
  }

  .hero-title.text-shadow {
    text-shadow: {{ section.settings.title_effect_width }}px {{ section.settings.title_effect_width }}px 0 {{ section.settings.title_effect_color }};
  }

  .hero-subtitle.text-outline {
    -webkit-text-stroke: {{ section.settings.subtitle_effect_width }}px {{ section.settings.subtitle_effect_color }};
    text-stroke: {{ section.settings.subtitle_effect_width }}px {{ section.settings.subtitle_effect_color }};
    paint-order: stroke fill;
    text-shadow: none;
  }

  .hero-subtitle.text-shadow {
    text-shadow: {{ section.settings.subtitle_effect_width }}px {{ section.settings.subtitle_effect_width }}px 0 {{ section.settings.subtitle_effect_color }};
  }

  .hero-section {
    aspect-ratio: 16 / 9;
    height: auto;
    min-height: 400px;
    contain: layout paint;
    content-visibility: auto; /* Improve rendering performance */
    contain-intrinsic-size: 100% 600px; /* Ensure content-visibility doesn't cause layout shift */
  }

  .navbar-brand img {
    width: {{ section.settings.logo_size }}px;
    height: calc({{ section.settings.logo_size }}px * 0.75); /* Estimate height */
    aspect-ratio: auto; /* Let browser determine ratio from actual dimensions */
    object-fit: contain; /* Ensure image fits without distortion */
    display: block; /* Prevent unexpected layout shift */
  }

  .hero-title, .hero-subtitle {
    font-display: swap;
    max-width: 100%; /* Prevent overflow */
  }

  /* Apply animations with better performance */
  @media (prefers-reduced-motion: no-preference) {
    .hero-title, .hero-subtitle, .hero-buttons, .destination-teasers {
      opacity: 0;
      transform: translateY(20px);
      animation: fadeInUp 0.8s forwards;
    }
  }

  .hero-subtitle {
    animation-delay: 0.2s;
  }

  .hero-buttons {
    animation-delay: 0.4s;
  }

  .destination-teasers {
    animation-delay: 0.6s;
  }

  @keyframes fadeInUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .hero-section {
    position: relative;
    width: 100%;
    min-height: 100vh; /* Use viewport height instead of fixed pixels */
    max-height: unset; /* Remove any max-height restrictions */
    aspect-ratio: unset; /* Remove aspect ratio on mobile */
    overflow: hidden; /* Contain all elements */
    background: url('{{ bg_img_url }}') center center no-repeat;
    background-size: cover;
  }

  /* Control height more precisely on mobile */
  @media (max-width: 767px) {
    .hero-section {
      height: auto; /* Auto height based on content */
      min-height: 100vh;
      padding-bottom: 30px; /* Add padding at bottom to prevent cutoff */
    }
    
    .hero-section .row.align-items-center {
      min-height: unset; /* Remove min-height constraint */
    }
  }

  /* More efficient animations */
  @media (max-width: 767px) {
    /* Reduce or eliminate animations on mobile */
    .hero-title, .hero-subtitle, .hero-buttons, .destination-teasers {
      opacity: 1;
      transform: none;
      animation: none;
    }
    
    /* Prevent text movement */
    .hero-title {
      transform: none !important;
    }
  }

  @media (max-width: 767px) {
    .col-lg-7.col-md-12.hero-content-wrapper {
      padding-right: 15px;
      padding-left: 15px;
      margin-bottom: 20px;
    }
    
    .col-lg-4.col-md-8.offset-lg-1.offset-md-0 {
      padding-right: 15px;
      padding-left: 15px;
    }
    
    /* Improve container */
    .container.position-relative.d-flex {
      padding-left: 15px;
      padding-right: 15px;
    }
    
    .row.align-items-center {
      margin-left: -15px;
      margin-right: -15px;
      width: 100%;
    }
  }

  /* Use content-visibility to help prevent layout shifts */
  @media (max-width: 767px) {
    .booking-form {
      content-visibility: auto;
      contain-intrinsic-size: 1px 450px; /* Approximation of form height */
    }
  }

  /* Only use will-change for non-mobile devices to avoid memory issues on mobile */
  @media (min-width: 768px) {
    .hero-title, .hero-subtitle, .hero-buttons, .destination-teasers {
      will-change: opacity, transform;
    }
  }

@media (prefers-reduced-motion: no-preference) {
  .hero-title, .hero-subtitle, .hero-buttons, .destination-teasers {
    opacity: 0;
    transform: translateY(20px);
    animation: fadeInUp 0.8s forwards;
  }
  
  .hero-subtitle { animation-delay: 0.1s; }
  .hero-buttons { animation-delay: 0.2s; }
  .destination-teasers { animation-delay: 0.3s; }
}

/* Fix layout shifting by setting dimensions before content loads */
.hero-section {
  min-height: 100vh;
}

/* Optimize paint and layout performance */
.hero-content-wrapper {
  transform: translateZ(0);
}

/* Optimize animations by using only transform and opacity */
@keyframes fadeInUp {
  0% {
    opacity: 0;
    transform: translateY(20px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

.hero-section {
  background-color: #000; /* Solid fallback color */
  background-image: url('{{ bg_img_desktop }}');
  background-size: cover;
}

@media (max-width: 767px) {
  .hero-section {
    background-image: url('{{ bg_img_mobile }}');
  }
}

/* Disable unnecessary animations on mobile */
@media (max-width: 767px) {
  .floating-circle, .animated-line {
    display: none !important;
  }
  
  /* Use simpler animation for text */
  .hero-title, .hero-subtitle, .hero-buttons {
    opacity: 1 !important;
    transform: none !important;
    animation: none !important;
  }
  
  /* Remove fancy hover effects on mobile */
  .hero-btn:hover .btn-content,
  .hero-btn:hover .btn-icon {
    transform: none !important;
  }
}

/* Improve performance by delaying non-critical rendering */
@media (max-width: 767px) {
  .destination-teasers {
    content-visibility: auto;
    contain-intrinsic-size: 0 50px;
  }
  
  .navbar-collapse {
    content-visibility: auto;
    contain-intrinsic-size: 0 0;
  }
}
</style>

{% schema %}
{
  "name": "Custom hero Section",
  "settings": [
    {
      "type": "header",
      "content": "Hero Background"
    },
    {
      "type": "image_picker",
      "id": "bg_img",
      "label": "Hero Background Image"
    },
    {
      "type": "header",
      "content": "Background Overlay"
    },
    {
      "type": "checkbox",
      "id": "enable_overlay",
      "label": "Enable Background Overlay",
      "default": true
    },
    {
      "type": "color",
      "id": "overlay_color",
      "label": "Overlay Color",
      "default": "#000000"
    },
    {
      "type": "range",
      "id": "overlay_opacity",
      "label": "Overlay Opacity",
      "min": 0,
      "max": 1,
      "step": 0.1,
      "default": 0.4
    },
    {
      "type": "select",
      "id": "overlay_type",
      "label": "Overlay Type",
      "options": [
        {"value": "solid", "label": "Solid Color"}
      ],
      "default": "solid"
    },
    
    {
      "type": "header",
      "content": "Header Settings"
    },
    {
      "type": "checkbox",
      "id": "is_header",
      "label": "Enable Header in Hero Section",
      "default": false
    },
    {
      "type": "color",
      "id": "bg_header",
      "label": "Header Background Color",
      "default": "#449EED"
    },
    {
      "type": "range",
      "id": "header_bg_opacity",
      "label": "Header Background Opacity",
      "default": 0.4,
      "min": 0,
      "max": 1,
      "step": 0.1
    },
    {
      "type": "color",
      "id": "header_text_color",
      "label": "Header Text Color",
      "default": "#fff"
    },
    {
      "type": "color",
      "id": "header_text_hover_color",
      "label": "Header Text Hover Color",
      "default": "#ccc"
    },

    {
      "type": "header",
      "content": "Logo & Store Name"
    },
    {
      "type": "image_picker",
      "id": "logo",
      "label": "Logo"
    },
    {
      "type": "range",
      "id": "logo_size",
      "label": "Logo Size (px)",
      "default": 100,
      "min": 50,
      "max": 250,
      "step": 10
    },
    {
      "type": "text",
      "id": "store_name",
      "label": "Store Name",
      "default": "Travel More",
      "info": "Enter store name to display next to logo"
    },
    {
      "type": "range",
      "id": "store_name_text_size",
      "label": "Store Name Text Size (px)",
      "default": 20,
      "min": 12,
      "max": 40,
      "step": 1
    },
    {
      "type": "color",
      "id": "store_name_color",
      "label": "Store Name Color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "store_name_hover_color",
      "label": "Store Name Hover Color",
      "default": "#f0f0f0"
    },
    {
      "type": "select",
      "id": "store_name_transform",
      "label": "Text Transform",
      "options": [
        { "value": "none", "label": "None" },
        { "value": "uppercase", "label": "UPPERCASE" },
        { "value": "lowercase", "label": "lowercase" },
        { "value": "capitalize", "label": "Capitalize" }
      ],
      "default": "uppercase"
    },
    {
      "type": "select",
      "id": "store_name_font",
      "label": "Font Style",
      "options": [
        { "value": "inherit", "label": "Theme Default" },
        { "value": "'Montserrat', sans-serif", "label": "Montserrat" },
        { "value": "'Playfair Display', serif", "label": "Playfair Display" },
        { "value": "'Roboto', sans-serif", "label": "Roboto" },
        { "value": "'Lato', sans-serif", "label": "Lato" },
        { "value": "'Oswald', sans-serif", "label": "Oswald" }
      ],
      "default": "inherit"
    },
    
    {
      "type": "header",
      "content": "Menu Settings"
    },
    {
      "type": "link_list",
      "id": "menu",
      "label": "Menu"
    },
    {
      "type": "range",
      "id": "menu_text_size",
      "label": "Menu Text Size (px)",
      "default": 20,
      "min": 10,
      "max": 40,
      "step": 1
    },
    {
      "type": "range",
      "id": "menu_font_weight",
      "label": "Menu Font Weight",
      "default": 400,
      "min": 100,
      "max": 900,
      "step": 100
    },
    {
      "type": "select",
      "id": "header_alignment",
      "label": "Menu Alignment",
      "options": [
        { "value": "left", "label": "Left" },
        { "value": "center", "label": "Center" },
        { "value": "right", "label": "Right" }
      ],
      "default": "left"
    },
    
    {
      "type": "header",
      "content": "Dropdown Menu Settings"
    },
    {
      "type": "color",
      "id": "dropdown_bg_color",
      "label": "Dropdown Background Color",
      "default": "rgba(0, 0, 0, 0.5)"
    },
    {
      "type": "color",
      "id": "dropdown_text_color",
      "label": "Dropdown Text Color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "dropdown_hover_text_color",
      "label": "Dropdown Hover Text Color",
      "default": "#333"
    },
    {
      "type": "color",
      "id": "submenu_hover_text_color",
      "label": "Submenu Hover Text Color",
      "default": "#cccccc"
    },
    {
      "type": "select",
      "id": "dropdown_hover_effect",
      "label": "Dropdown Hover Effect",
      "options": [
        { "value": "underline", "label": "Underline" },
        { "value": "fade", "label": "Fade" },
        { "value": "none", "label": "None" }
      ],
      "default": "underline"
    },
    
    {
      "type": "header",
      "content": "Search Bar"
    },
    {
      "type": "checkbox",
      "id": "enable_search_bar",
      "label": "Enable Search Bar",
      "default": true
    },
    {
      "type": "range",
      "id": "icon_font_size",
      "label": "Icon Font Size",
      "default": 18,
      "min": 14,
      "max": 30,
      "step": 1
    },
    {
      "type": "color",
      "id": "search_btn_text_color",
      "label": "Icons Text Color",
      "default": "#fff"
    },
    {
      "type": "color",
      "id": "search_btn_hover_color",
      "label": "Icons Hover Color",
      "default": "#357ABD"
    },
    {
      "type": "color",
      "id": "search_btn_text_hover_color",
      "label": "Icons Text Hover Color",
      "default": "#fff"
    },

    {
      "type": "header",
      "content": "Hero Content"
    },
    {
      "type": "text",
      "id": "title_text",
      "label": "Heading",
      "default": "Dare to Live the Life you've wanted"
    },
    {
      "type": "range",
      "id": "title_size",
      "label": "Heading Size (rem)",
      "default": 3,
      "min": 1,
      "max": 6,
      "step": 1
    },
    {
      "type": "color",
      "id": "title_color",
      "label": "Heading Color",
      "default": "#fff"
    },
    {
      "type": "select",
      "id": "title_font",
      "label": "Heading Font",
      "options": [
        { "value": "Helvetica, sans-serif", "label": "Helvetica" },
        { "value": "Montserrat, sans-serif", "label": "Montserrat" },
        { "value": "Roboto, sans-serif", "label": "Roboto" },
        { "value": "Lato, sans-serif", "label": "Lato" }
      ],
      "default": "Helvetica, sans-serif"
    },
    {
      "type": "text",
      "id": "sub_title_text",
      "label": "Subheading",
      "default": "We would love to help you realize your travel dreams..."
    },
    {
      "type": "range",
      "id": "sub_title_size",
      "label": "Subheading Size (rem)",
      "default": 1,
      "min": 1,
      "max": 6,
      "step": 0.1
    },
    {
      "type": "range",
      "id": "sub_title_weight",
      "label": "Subheading Weight",
      "default": 400,
      "min": 100,
      "max": 900,
      "step": 100
    },
    {
      "type": "color",
      "id": "sub_title_color",
      "label": "Subheading Color",
      "default": "#fff"
    },

    {
      "type": "header",
      "content": "Heading Text Effects"
    },
    {
      "type": "select",
      "id": "title_effect",
      "label": "Heading Text Effect",
      "options": [
        { "value": "none", "label": "None" },
        { "value": "outline", "label": "Border Outline" },
        { "value": "shadow", "label": "Text Shadow" }
      ],
      "default": "none"
    },
    {
      "type": "color",
      "id": "title_effect_color",
      "label": "Heading Effect Color",
      "default": "#000000"
    },
    {
      "type": "range",
      "id": "title_effect_width",
      "label": "Effect Thickness",
      "default": 2,
      "min": 1,
      "max": 10,
      "step": 1,
      "info": "For outline width or shadow size"
    },
    {
      "type": "header",
      "content": "Subtitle Text Effects"
    },
    {
      "type": "select",
      "id": "subtitle_effect",
      "label": "Subtitle Text Effect",
      "options": [
        { "value": "none", "label": "None" },
        { "value": "outline", "label": "Border Outline" },
        { "value": "shadow", "label": "Text Shadow" }
      ],
      "default": "none"
    },
    {
      "type": "color",
      "id": "subtitle_effect_color",
      "label": "Subtitle Effect Color",
      "default": "#000000"
    },
    {
      "type": "range",
      "id": "subtitle_effect_width",
      "label": "Effect Thickness",
      "default": 1,
      "min": 1,
      "max": 8,
      "step": 1,
      "info": "For outline width or shadow size"
    },

    {
      "type": "header",
      "content": "Button Settings"
    },
    {
      "type": "text",
      "id": "btn1_text",
      "label": "Primary Button Text",
      "default": "Discover More"
    },
    {
      "type": "url",
      "id": "btn1_url",
      "label": "Primary Button URL",
      "default": "/"
    },
    {
      "type": "color",
      "id": "btn1_color",
      "label": "Primary Button Color",
      "default": "#449EED"
    },
    {
      "type": "color",
      "id": "btn1_text_color",
      "label": "Primary Button Text Color",
      "default": "#fff"
    },
    {
      "type": "color",
      "id": "btn1_hover_color",
      "label": "Primary Button Hover Color",
      "default": "#357ABD"
    },
    {
      "type": "color",
      "id": "btn1_text_hover_color",
      "label": "Primary Button Text Hover Color",
      "default": "#fff"
    },
    {
      "type": "text",
      "id": "btn2_text",
      "label": "Secondary Button Text",
      "default": "Watch Video"
    },
    {
      "type": "url",
      "id": "btn2_url",
      "label": "Secondary Button URL",
      "default": "/"
    },
    {
      "type": "color",
      "id": "btn2_text_color",
      "label": "Secondary Button Text Color",
      "default": "#fff"
    },
    {
      "type": "color",
      "id": "btn2_hover_color",
      "label": "Secondary Button Hover Color",
      "default": "#fff"
    },
    {
      "type": "color",
      "id": "btn2_text_hover_color",
      "label": "Secondary Button Text Hover Color",
      "default": "#fff"
    },

    {
      "type": "header",
      "content": "Booking Form Settings"
    },
    {
      "type": "checkbox",
      "id": "if_form",
      "label": "Show Booking Form",
      "default": true
    },
    {
      "type": "text",
      "id": "form_title",
      "label": "Form Title",
      "default": "Book Perfect Tour"
    },
    {
      "type": "color",
      "id": "form_bg_color",
      "label": "Form Background Color",
      "default": "#F5F5F5"
    },
    {
      "type": "range",
      "id": "form_bg_opacity",
      "label": "Form Background Opacity",
      "default": 1,
      "min": 0,
      "max": 1,
      "step": 0.1
    },
    {
      "type": "color",
      "id": "form_text_color",
      "label": "Form Text Color",
      "default": "#000000"
    },
    {
      "type": "text",
      "id": "input1",
      "label": "Destination Field Label",
      "default": "Destination"
    },
    {
      "type": "text",
      "id": "input2",
      "label": "Tour Type Field Label",
      "default": "Tour Type"
    },
    {
      "type": "text",
      "id": "input3",
      "label": "Month Field Label",
      "default": "Month"
    },
    {
      "type": "number",
      "id": "min_price",
      "label": "Minimum Price",
      "default": 2340
    },
    {
      "type": "number",
      "id": "max_price",
      "label": "Maximum Price",
      "default": 3920
    }
  ],
  "presets": [
    {
      "name": "Hero Section",
      "category": "Hero Section"
    }
  ]
}
{% endschema %}
