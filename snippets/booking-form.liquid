<div class="form-container py-5">
    <div class="transparency-container" style="background-color: rgba({{ form_red }}, {{ form_green }}, {{ form_blue }}, {{ form_bg_opacity }});">
        <div class="form-title">
            <h2>{{ form_title }}</h2>
        </div>
        <div class="input-div">
            <div class="tour-search">
                <label for="tourSearchInput">Where would you like to go?</label>
                <div class="search-input-wrapper">
                    <i class="bi bi-search search-icon"></i>
                    <input id="tourSearchInput" type="text" placeholder="Search destinations..." autocomplete="off">
                    <div class="suggestion-bar" id="suggestionContainer"></div>
                </div>
            </div>

            <div class="d-flex travel-details-row">
                <div class="pick-date">
                    <label for="travelDate">When to start?</label>
                    <input type="date" id="travelDate" class="date-input" min="{{ 'now' | date: '%Y-%m-%d' }}">
                </div>
                <div class="days-to-stay">
                    <label for="stayDuration">How many days?</label>
                    <input type="number" id="stayDuration" class="number-input" min="1" value="7">
                </div>
            </div>
            
            <div class="person-count">
                <label for="personCount">How many persons?</label>
                <input type="number" id="personCount" class="number-input" min="1" value="2">
            </div>
            
            <button id="searchToursBtn" class="search-button">
                <i class="bi bi-search"></i> Search for tours
            </button>
            
            <div id="searchSummary" class="search-summary" style="display: none;">
                <div class="result-count">
                    <span id="resultCount">0</span> tours match your criteria
                </div>
            </div>
        </div>
    </div>
</div>

<div class="custom-modal" id="notFoundModal">
    <div class="modal-content">
        <div class="modal-header">
            <h3>We couldn't find an exact match</h3>
            <span class="close-modal">&times;</span>
        </div>
        <div class="modal-body">
            <p>We don't have a tour that exactly matches your criteria. Would you like to:</p>
            <div class="modal-options">
                <button id="viewSimilarBtn" class="primary-button">View Similar Tours</button>
                <button id="requestCustomBtn" class="secondary-button">Request Custom Tour</button>
            </div>
        </div>
    </div>
</div>

<style>
.form-container {
    width: 100%;
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
}

.transparency-container {
    padding: 25px;
    color: {{ form_text_color }};
}

.form-title h2 {
    margin-bottom: 20px;
    font-weight: 700;
    text-align: center;
}

.input-div label {
    display: block;
    margin-bottom: 8px;
    font-weight: 500;
}

.search-input-wrapper {
    position: relative;
    margin-bottom: 15px;
}

.search-icon {
    position: absolute;
    left: 12px;
    top: 50%;
    transform: translateY(-50%);
    color: #777;
}

#tourSearchInput {
    width: 100%;
    padding: 12px 12px 12px 40px;
    border-radius: 4px;
    border: 1px solid rgba(255, 255, 255, 0.3);
    background-color: rgba(255, 255, 255, 0.9);
    font-size: 16px;
    transition: all 0.3s ease;
}

#tourSearchInput:focus {
    outline: none;
    border-color: #449EED;
    box-shadow: 0 0 0 2px rgba(68, 158, 237, 0.2);
    background-color: white;
}

.suggestion-bar {
    max-height: 250px;
    overflow-y: auto;
    background-color: white;
    border-radius: 4px;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.15);
    margin-bottom: 15px;
    display: none;
    position: absolute;
    width: 100%;
    z-index: 100;
}

.suggestion-item {
    padding: 12px 15px;
    border-bottom: 1px solid #eee;
    cursor: pointer;
    transition: background-color 0.2s;
}

.suggestion-item:hover {
    background-color: #f0f7ff;
}

.suggestion-item:last-child {
    border-bottom: none;
}

.suggestion-title {
    font-weight: 600;
    color: #333;
    margin-bottom: 4px;
}

.suggestion-meta {
    font-size: 12px;
    color: #777;
    display: flex;
    justify-content: space-between;
}

.suggestion-item.no-results {
    cursor: default;
    color: #666;
}

.suggestion-item.no-results:hover {
    background-color: inherit;
}

.travel-details-row {
    margin-bottom: 15px;
    gap: 10px;
}

.pick-date {
    flex: 1.5;
}

.days-to-stay {
    flex: 1;
}

input.date-input, input.number-input {
    width: 100%;
    padding: 10px 12px;
    border-radius: 4px;
    border: 1px solid rgba(255, 255, 255, 0.3);
    background-color: rgba(255, 255, 255, 0.9);
    font-size: 15px;
}

input.date-input:focus, input.number-input:focus {
    outline: none;
    border-color: #449EED;
    box-shadow: 0 0 0 2px rgba(68, 158, 237, 0.2);
    background-color: white;
}

.person-count {
    margin-bottom: 20px;
}

.search-button {
    width: 100%;
    padding: 12px;
    background-color: #449EED;
    color: white;
    border: none;
    border-radius: 4px;
    font-size: 16px;
    font-weight: 500;
    cursor: pointer;
    transition: background-color 0.3s;
}

.search-button:hover {
    background-color: #357ABD;
}

.search-summary {
    margin-top: 15px;
    padding: 10px;
    background-color: rgba(255, 255, 255, 0.2);
    border-radius: 4px;
    text-align: center;
}

.result-count {
    font-size: 14px;
}

#resultCount {
    font-weight: 700;
    color: #449EED;
}

.custom-modal {
    display: none;
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    align-items: center;
    justify-content: center;
}

.modal-content {
    background-color: white;
    border-radius: 8px;
    width: 90%;
    max-width: 500px;
    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.2);
}

.modal-header {
    padding: 15px 20px;
    border-bottom: 1px solid #eee;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.modal-header h3 {
    margin: 0;
    color: #333;
}

.close-modal {
    font-size: 24px;
    font-weight: bold;
    cursor: pointer;
    color: #999;
}

.close-modal:hover {
    color: #666;
}

.modal-body {
    padding: 20px;
}

.modal-options {
    display: flex;
    gap: 10px;
    margin-top: 15px;
}

.primary-button, .secondary-button {
    padding: 10px 15px;
    border-radius: 4px;
    border: none;
    font-size: 14px;
    font-weight: 500;
    cursor: pointer;
    transition: background-color 0.2s;
    flex: 1;
}

.primary-button {
    background-color: #449EED;
    color: white;
}

.primary-button:hover {
    background-color: #357ABD;
}

.secondary-button {
    background-color: #f5f5f5;
    color: #333;
}

.secondary-button:hover {
    background-color: #e5e5e5;
}

/* Responsive Adjustments */
@media (max-width: 576px) {
    .travel-details-row {
        flex-direction: column;
    }
    
    .pick-date, .days-to-stay {
        width: 100%;
    }
}
</style>


<script>
  document.addEventListener('DOMContentLoaded', function() {
    const searchInput = document.getElementById('tourSearchInput');
    const dateInput = document.getElementById('travelDate');
    const durationInput = document.getElementById('stayDuration');
    const personsInput = document.getElementById('personCount');
    const searchButton = document.getElementById('searchToursBtn');
    const suggestionContainer = document.getElementById('suggestionContainer');
    const searchSummary = document.getElementById('searchSummary');
    const resultCount = document.getElementById('resultCount');
    const notFoundModal = document.getElementById('notFoundModal');
    const viewSimilarBtn = document.getElementById('viewSimilarBtn');
    const requestCustomBtn = document.getElementById('requestCustomBtn');
    const closeModal = document.querySelector('.close-modal');
    
    let allProducts = [];
    
    fetch('/products.json')
      .then(response => response.json())
      .then(data => {
        allProducts = data.products;
        console.log('Products loaded:', allProducts.length);
      })
      .catch(error => console.error('Error fetching products:', error));
    
    searchInput.addEventListener('input', function() {
      const query = this.value.trim().toLowerCase();
      if (query.length < 2) {
        suggestionContainer.style.display = 'none';
        return;
      }
      
      const matches = allProducts.filter(product => {
        if (product.title.toLowerCase().includes(query)) return true;
        
        if (product.metafields && product.metafields.custom && 
            product.metafields.custom.destination && 
            product.metafields.custom.destination.toLowerCase().includes(query)) {
          return true;
        }
        
        if (product.tags && product.tags.some(tag => 
            tag.startsWith('destination:') && 
            tag.toLowerCase().includes(query))) {
          return true;
        }
        
        if (product.body_html && product.body_html.toLowerCase().includes(query)) {
          return true;
        }
        
        return false;
      }).slice(0, 5); 
      
      if (matches.length > 0) {
        suggestionContainer.innerHTML = '';
        
        matches.forEach(product => {
          let destination = 'Various destinations';
          
          if (product.metafields && product.metafields.custom && product.metafields.custom.destination) {
            destination = product.metafields.custom.destination;
          } else if (product.tags) {
            const destTag = product.tags.find(tag => tag.startsWith('destination:'));
            if (destTag) {
              destination = destTag.replace('destination:', '');
            }
          }
          
          const item = document.createElement('div');
          item.className = 'suggestion-item';
          item.innerHTML = `
            <div class="suggestion-title">${product.title}</div>
            <div class="suggestion-meta">
              <span>${destination}</span>
            </div>
          `;
          
          item.addEventListener('click', function() {
            searchInput.value = destination;
            suggestionContainer.style.display = 'none';
          });
          
          suggestionContainer.appendChild(item);
        });
        
        suggestionContainer.style.display = 'block';
      } else {
        suggestionContainer.innerHTML = `
          <div class="suggestion-item no-results">
            No destinations found matching "${query}"
          </div>
        `;
        suggestionContainer.style.display = 'block';
      }
    });
    
    document.addEventListener('click', function(e) {
      if (!searchInput.contains(e.target) && !suggestionContainer.contains(e.target)) {
        suggestionContainer.style.display = 'none';
      }
    });
    
    searchButton.addEventListener('click', function() {
      const destination = searchInput.value.trim().toLowerCase();
      const travelDate = dateInput.value;
      const duration = parseInt(durationInput.value) || 7;
      const persons = parseInt(personsInput.value) || 2;
      
      const matches = allProducts.filter(product => {
        let isMatch = false;
        let score = 0;
        
        if (destination) {
          if (product.title.toLowerCase().includes(destination)) {
            isMatch = true;
            score += 3;
          }
          
          if (product.metafields && product.metafields.custom && 
              product.metafields.custom.destination && 
              product.metafields.custom.destination.toLowerCase().includes(destination)) {
            isMatch = true;
            score += 5; 
          }
          
          if (product.tags && product.tags.some(tag => 
              tag.startsWith('destination:') && 
              tag.toLowerCase().includes(destination))) {
            isMatch = true;
            score += 4;
          }
          
          if (product.body_html && product.body_html.toLowerCase().includes(destination)) {
            isMatch = true;
            score += 2;
          }
        }
        
        let maxDays = 30; 
        if (product.metafields && product.metafields.custom && product.metafields.custom.maximum_days) {
          maxDays = parseInt(product.metafields.custom.maximum_days);
        } else if (product.tags) {
          const daysTag = product.tags.find(tag => tag.startsWith('max-days:'));
          if (daysTag) {
            maxDays = parseInt(daysTag.replace('max-days:', '')) || 30;
          }
        }
        
        if (duration <= maxDays) {
          score += 1;
        } else {
          return false; 
        }
        
        let maxPersons = 10;
        if (product.metafields && product.metafields.custom && product.metafields.custom.maximum_persons) {
          maxPersons = parseInt(product.metafields.custom.maximum_persons);
        } else if (product.tags) {
          const personsTag = product.tags.find(tag => tag.startsWith('max-persons:'));
          if (personsTag) {
            maxPersons = parseInt(personsTag.replace('max-persons:', '')) || 10;
          }
        }
        
        if (persons <= maxPersons) {
          score += 1;
        } else {
          return false; 
        }
        
        product.matchScore = score;
        
        return isMatch || score > 0;
      });
      
      matches.sort((a, b) => b.matchScore - a.matchScore);
      
      console.log('Search matches:', matches);
      
      if (matches.length > 0) {
        resultCount.textContent = matches.length;
        searchSummary.style.display = 'block';
        
        let searchParams = new URLSearchParams();
        
        if (destination) {
          searchParams.append('q', destination);
        }
        
        if (travelDate) searchParams.append('date', travelDate);
        if (duration) searchParams.append('duration', duration);
        if (persons) searchParams.append('travelers', persons);
        
        
        window.location.href = `/search?${searchParams.toString()}`;
      } else {
        notFoundModal.style.display = 'flex';
      }
    });
    
    // Modal actions
    if (closeModal) {
      closeModal.addEventListener('click', function() {
        notFoundModal.style.display = 'none';
      });
    }
    
    if (viewSimilarBtn) {
      viewSimilarBtn.addEventListener('click', function() {
        const destination = searchInput.value.trim();
        
        window.location.href = `/collections/all?q=${encodeURIComponent(destination || '')}`;
      });
    }
    
    if (requestCustomBtn) {
      requestCustomBtn.addEventListener('click', function() {
        const destination = searchInput.value.trim();
        const travelDate = dateInput.value;
        const duration = durationInput.value;
        const persons = personsInput.value;
        
        const params = new URLSearchParams();
        if (destination) params.append('destination', destination);
        if (travelDate) params.append('date', travelDate);
        if (duration) params.append('duration', duration);
        if (persons) params.append('travelers', persons);
        
        window.location.href = `/pages/custom-tour-request?${params.toString()}`;
      });
    }
  });
</script>
