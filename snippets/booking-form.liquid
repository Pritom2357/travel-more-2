<div class="form-container py-5">
    <div class="transparency-container" style="background-color: rgba({{ form_red }}, {{ form_green }}, {{ form_blue }}, {{ form_bg_opacity }});">
        <div class="form-title">
            <h2>{{ form_title }}</h2>
        </div>
        <div class="input-div">
            <div class="tour-search">
                <label for="tourSearchInput">Where would you like to go?</label>
                <div class="search-input-wrapper">
                    <i class="bi bi-search search-icon"></i>
                    <input id="tourSearchInput" type="text" placeholder="Search destinations..." autocomplete="off">
                </div>
            </div>
            
            <div class="suggestion-bar" id="suggestionContainer"></div>

            <div class="d-flex travel-details-row">
                <div class="pick-date">
                    <label for="travelDate">When to start?</label>
                    <input type="date" id="travelDate" class="date-input" min="{{ 'now' | date: '%Y-%m-%d' }}">
                </div>
                <div class="days-to-stay">
                    <label for="stayDuration">How many days?</label>
                    <input type="number" id="stayDuration" class="number-input" min="1" value="7">
                </div>
            </div>
            
            <div class="person-count">
                <label for="personCount">How many persons?</label>
                <input type="number" id="personCount" class="number-input" min="1" value="2">
            </div>
            
            <button id="searchToursBtn" class="search-button">
                <i class="bi bi-search"></i> Search for tours
            </button>
            
            <div id="searchSummary" class="search-summary" style="display: none;">
                <div class="result-count">
                    <span id="resultCount">0</span> tours match your criteria
                </div>
            </div>
        </div>
    </div>
</div>

<div class="custom-modal" id="notFoundModal">
    <div class="modal-content">
        <div class="modal-header">
            <h3>We couldn't find an exact match</h3>
            <span class="close-modal">&times;</span>
        </div>
        <div class="modal-body">
            <p>We don't have a tour that exactly matches your criteria. Would you like to:</p>
            <div class="modal-options">
                <button id="viewSimilarBtn" class="primary-button">View Similar Tours</button>
                <button id="requestCustomBtn" class="secondary-button">Request Custom Tour</button>
            </div>
        </div>
    </div>
</div>

<style>
.form-container {
    width: 100%;
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
}

.transparency-container {
    padding: 25px;
    color: {{ form_text_color }};
}

.form-title h2 {
    margin-bottom: 20px;
    font-weight: 700;
    text-align: center;
}

.input-div label {
    display: block;
    margin-bottom: 8px;
    font-weight: 500;
}

.search-input-wrapper {
    position: relative;
    margin-bottom: 15px;
}

.search-icon {
    position: absolute;
    left: 12px;
    top: 50%;
    transform: translateY(-50%);
    color: #777;
}

#tourSearchInput {
    width: 100%;
    padding: 12px 12px 12px 40px;
    border-radius: 4px;
    border: 1px solid rgba(255, 255, 255, 0.3);
    background-color: rgba(255, 255, 255, 0.9);
    font-size: 16px;
    transition: all 0.3s ease;
}

#tourSearchInput:focus {
    outline: none;
    border-color: #449EED;
    box-shadow: 0 0 0 2px rgba(68, 158, 237, 0.2);
    background-color: white;
}

.suggestion-bar {
    max-height: 200px;
    overflow-y: auto;
    background-color: white;
    border-radius: 4px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    margin-bottom: 15px;
    display: none; 
}

.suggestion-item {
    padding: 12px 15px;
    border-bottom: 1px solid #eee;
    cursor: pointer;
    transition: background-color 0.2s;
}

.suggestion-item:hover {
    background-color: #f5f9ff;
}

.suggestion-item:last-child {
    border-bottom: none;
}

.suggestion-title {
    font-weight: 500;
    color: #333;
    margin-bottom: 3px;
}

.suggestion-meta {
    font-size: 12px;
    color: #777;
    display: flex;
    justify-content: space-between;
}

.travel-details-row {
    margin-bottom: 15px;
    gap: 10px;
}

.pick-date {
    flex: 1.5;
}

.days-to-stay {
    flex: 1;
}

input.date-input, input.number-input {
    width: 100%;
    padding: 10px 12px;
    border-radius: 4px;
    border: 1px solid rgba(255, 255, 255, 0.3);
    background-color: rgba(255, 255, 255, 0.9);
    font-size: 15px;
}

input.date-input:focus, input.number-input:focus {
    outline: none;
    border-color: #449EED;
    box-shadow: 0 0 0 2px rgba(68, 158, 237, 0.2);
    background-color: white;
}

.person-count {
    margin-bottom: 20px;
}

.search-button {
    width: 100%;
    padding: 12px;
    background-color: #449EED;
    color: white;
    border: none;
    border-radius: 4px;
    font-size: 16px;
    font-weight: 500;
    cursor: pointer;
    transition: background-color 0.3s;
}

.search-button:hover {
    background-color: #357ABD;
}

.search-summary {
    margin-top: 15px;
    padding: 10px;
    background-color: rgba(255, 255, 255, 0.2);
    border-radius: 4px;
    text-align: center;
}

.result-count {
    font-size: 14px;
}

#resultCount {
    font-weight: 700;
    color: #449EED;
}

.custom-modal {
    display: none;
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    align-items: center;
    justify-content: center;
}

.modal-content {
    background-color: white;
    border-radius: 8px;
    width: 90%;
    max-width: 500px;
    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.2);
}

.modal-header {
    padding: 15px 20px;
    border-bottom: 1px solid #eee;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.modal-header h3 {
    margin: 0;
    color: #333;
}

.close-modal {
    font-size: 24px;
    font-weight: bold;
    cursor: pointer;
    color: #999;
}

.close-modal:hover {
    color: #666;
}

.modal-body {
    padding: 20px;
}

.modal-options {
    display: flex;
    gap: 10px;
    margin-top: 15px;
}

.primary-button, .secondary-button {
    padding: 10px 15px;
    border-radius: 4px;
    border: none;
    font-size: 14px;
    font-weight: 500;
    cursor: pointer;
    transition: background-color 0.2s;
    flex: 1;
}

.primary-button {
    background-color: #449EED;
    color: white;
}

.primary-button:hover {
    background-color: #357ABD;
}

.secondary-button {
    background-color: #f5f5f5;
    color: #333;
}

.secondary-button:hover {
    background-color: #e5e5e5;
}

/* Responsive Adjustments */
@media (max-width: 576px) {
    .travel-details-row {
        flex-direction: column;
    }
    
    .pick-date, .days-to-stay {
        width: 100%;
    }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const tourSearchInput = document.getElementById('tourSearchInput');
    const suggestionContainer = document.getElementById('suggestionContainer');
    const travelDate = document.getElementById('travelDate');
    const stayDuration = document.getElementById('stayDuration');
    const personCount = document.getElementById('personCount');
    const searchToursBtn = document.getElementById('searchToursBtn');
    const searchSummary = document.getElementById('searchSummary');
    const resultCount = document.getElementById('resultCount');
    const notFoundModal = document.getElementById('notFoundModal');
    const closeModal = document.querySelector('.close-modal');
    const viewSimilarBtn = document.getElementById('viewSimilarBtn');
    const requestCustomBtn = document.getElementById('requestCustomBtn');
    
    travelDate.valueAsDate = new Date();
    
    let allProducts = [];
    let filteredProducts = [];
    
    function fetchProducts() {
        if (searchToursBtn) {
            searchToursBtn.disabled = true;
            searchToursBtn.innerHTML = '<i class="bi bi-hourglass-split"></i> Loading...';
        }
        
        fetch('/search/suggest.json?q=&resources[type]=product&resources[limit]=50')
            .then(response => response.json())
            .then(data => {
                // Fetch detailed info for each product
                const productPromises = data.resources.results.products.map(product => {
                    const productHandle = product.handle;
                    return fetch(`/products/${productHandle}.json`)
                        .then(response => response.json())
                        .then(productData => {
                            const product = productData.product;
                            
                            // Get metafields for this product
                            return fetch(`/products/${productHandle}/metafields.json`)
                                .then(response => response.json())
                                .then(metafieldsData => {
                                    const metafields = metafieldsData.metafields || [];
                                    
                                    // Extract metafield values
                                    const destinationMetafield = metafields.find(m => m.key === 'destination');
                                    const maxDaysMetafield = metafields.find(m => m.key === 'maximum_days_allowed');
                                    const maxPersonsMetafield = metafields.find(m => m.key === 'maximum_persons_allowed');
                                    
                                    return {
                                        id: product.id,
                                        title: product.title,
                                        handle: product.handle,
                                        price: product.variants[0].price / 100,
                                        featured_image: product.images[0]?.src || '',
                                        destination: destinationMetafield?.value || '',
                                        maxDays: parseInt(maxDaysMetafield?.value || '30'),
                                        maxPersons: parseInt(maxPersonsMetafield?.value || '10'),
                                        url: `/products/${product.handle}`
                                    };
                                });
                        });
                });
                
                // Process all products
                return Promise.all(productPromises);
            })
            .then(products => {
                allProducts = products.filter(p => p !== null);
                console.log(`Loaded ${allProducts.length} products with metafields`);
                
                // Enable search button
                if (searchToursBtn) {
                    searchToursBtn.disabled = false;
                    searchToursBtn.innerHTML = '<i class="bi bi-search"></i> Search for tours';
                }
            })
            .catch(error => {
                console.error('Error fetching products:', error);
                
                
                if (searchToursBtn) {
                    searchToursBtn.disabled = false;
                    searchToursBtn.innerHTML = '<i class="bi bi-search"></i> Search for tours';
                }
            });
    }
    
    // Initialize by fetching products
    fetchProducts();
    
    // Handle search input for destination suggestions
    tourSearchInput.addEventListener('input', function() {
        const searchTerm = this.value.trim().toLowerCase();
        
        if (searchTerm.length < 2) {
            suggestionContainer.style.display = 'none';
            return;
        }
        
        // Find matching destinations
        const matchingProducts = allProducts.filter(product => {
            return product.destination.toLowerCase().includes(searchTerm) || 
                   product.title.toLowerCase().includes(searchTerm);
        });
        
        if (matchingProducts.length > 0) {
            renderSuggestions(matchingProducts);
        } else {
            suggestionContainer.innerHTML = `
                <div class="suggestion-item no-results">
                    <div class="suggestion-title">No destinations found</div>
                    <div class="suggestion-meta">Try different keywords or request a custom tour</div>
                </div>
            `;
            suggestionContainer.style.display = 'block';
        }
    });
    
    // Render destination suggestions
    function renderSuggestions(products) {
        const topSuggestions = products.slice(0, 5);
        
        suggestionContainer.innerHTML = topSuggestions.map(product => `
            <div class="suggestion-item" data-product-id="${product.id}" data-destination="${product.destination}">
                <div class="suggestion-title">${product.title}</div>
                <div class="suggestion-meta">
                    <span>${product.destination}</span>
                    <span>$${product.price.toLocaleString()}</span>
                </div>
            </div>
        `).join('');
        
        document.querySelectorAll('.suggestion-item').forEach(item => {
            if (!item.classList.contains('no-results')) {
                item.addEventListener('click', function() {
                    const destination = this.dataset.destination;
                    tourSearchInput.value = destination;
                    suggestionContainer.style.display = 'none';
                    filterResults();
                });
            }
        });
        
        suggestionContainer.style.display = 'block';
    }
    
    // Close suggestions when clicking outside
    document.addEventListener('click', function(e) {
        if (!tourSearchInput.contains(e.target) && !suggestionContainer.contains(e.target)) {
            suggestionContainer.style.display = 'none';
        }
    });
    
    // Filter products based on search criteria
    function filterResults() {
        const searchTerm = tourSearchInput.value.trim().toLowerCase();
        const duration = parseInt(stayDuration.value) || 0;
        const travelers = parseInt(personCount.value) || 0;
        
        if (!searchTerm && duration <= 0 && travelers <= 0) {
            searchSummary.style.display = 'none';
            return;
        }
        
        // Filter products matching all criteria
        filteredProducts = allProducts.filter(product => {
            // Match destination if provided
            const matchesDestination = !searchTerm || 
                product.destination.toLowerCase().includes(searchTerm) || 
                product.title.toLowerCase().includes(searchTerm);
            
            // Match duration if provided
            const matchesDuration = duration <= 0 || duration <= product.maxDays;
            
            // Match travelers if provided
            const matchesTravelers = travelers <= 0 || travelers <= product.maxPersons;
            
            return matchesDestination && matchesDuration && matchesTravelers;
        });
        
        // Update result count display
        resultCount.textContent = filteredProducts.length;
        searchSummary.style.display = 'block';
        
        return filteredProducts.length > 0;
    }
    
    // Search button click handler
    searchToursBtn.addEventListener('click', function() {
        // Apply filters and check if we have matching results
        const hasResults = filterResults();
        
        if (hasResults) {
            // Create search parameters
            const searchParams = new URLSearchParams();
            
            // Add search term as 'q' parameter for search page
            if (tourSearchInput.value) {
                searchParams.append('q', tourSearchInput.value);
            }
            
            // Add additional filter parameters
            if (travelDate.value) {
                searchParams.append('date', travelDate.value);
            }
            
            if (stayDuration.value) {
                searchParams.append('duration', stayDuration.value);
            }
            
            if (personCount.value) {
                searchParams.append('travelers', personCount.value);
            }
            
            // Redirect to search page instead of collections
            window.location.href = `/search?${searchParams.toString()}`;
        } else {
            // Show "not found" modal
            notFoundModal.style.display = 'flex';
        }
    });
    
    // Modal close button handler
    closeModal.addEventListener('click', function() {
        notFoundModal.style.display = 'none';
    });
    
    // View similar tours button handler
    viewSimilarBtn.addEventListener('click', function() {
        const searchParams = new URLSearchParams();
        
        // Just use destination for similar results
        if (tourSearchInput.value) {
            searchParams.append('q', tourSearchInput.value);
        }
        
        window.location.href = `/search?${searchParams.toString()}`;
    });
    
    // Request custom tour button handler
    requestCustomBtn.addEventListener('click', function() {
        const searchParams = new URLSearchParams();
        
        // Add all search criteria to URL
        if (tourSearchInput.value) {
            searchParams.append('destination', tourSearchInput.value);
        }
        
        if (travelDate.value) {
            searchParams.append('date', travelDate.value);
        }
        
        if (stayDuration.value) {
            searchParams.append('duration', stayDuration.value);
        }
        
        if (personCount.value) {
            searchParams.append('travelers', personCount.value);
        }
        
        window.location.href = `/pages/custom-tour-request?${searchParams.toString()}`;
    });
    
    // Close modal when clicking outside
    window.addEventListener('click', function(event) {
        if (event.target === notFoundModal) {
            notFoundModal.style.display = 'none';
        }
    });
});
</script>
