<div class="col-12 mb-4">
  <div class="card h-100 shadow-sm product-card product-card-horizontal">
    <div class="row g-0">
      <!-- Product Image Column (Left) -->
      <div class="col-md-4 col-lg-3">
        <div class="product-image-container h-100">
          <a href="{{ product.url }}" class="product-link h-100">
            <img 
              src="{{ product.featured_image.src | img_url: 'original' }}"
              alt="{{ product.featured_image.alt | default: product.title }}"
              width="600"
              height="250"
              class="primary-image h-100"
              loading="lazy"
            >

            {% if product.images.size > 1 and show_slideshow != false %}
              <div class="image-slideshow h-100">
                {% for image in product.images limit: 5 %}
                  <img
                    src="{{ image.src | img_url: 'original' }}"
                    alt="{{ image.alt | default: product.title }}"
                    width="600"
                    height="250"
                    class="slide-image h-100 {% if forloop.first %}active{% endif %}"
                    data-slide-index="{{ forloop.index0 }}"
                    loading="lazy"
                  >
                {% endfor %}
                
                <div class="slideshow-indicators">
                  {% for image in product.images limit: 5 %}
                    <span class="indicator-dot {% if forloop.first %}active{% endif %}" data-index="{{ forloop.index0 }}"></span>
                  {% endfor %}
                </div>
              </div>
            {% endif %}
            
            <!-- Product badges -->
            {% if show_badges != false %}
              {% if product.compare_at_price > product.price %}
                <span class="badge-sale">{{ badge_sale_text | default: 'Sale' }}</span>
              {% endif %}
              
              {% if product.tags contains 'new' %}
                <span class="badge-new">{{ badge_new_text | default: 'New' }}</span>
              {% endif %}
            {% endif %}
          </a>
        </div>
      </div>
      
      <!-- Product Info Column (Middle) -->
      <div class="col-md-5 col-lg-6 order-md-2 order-3">
        <div class="card-body p-3 d-flex flex-column h-100">
          <!-- Product Title -->
          <h5 class="product-title mb-2">
            <a href="{{ product.url }}" class="text-decoration-none text-dark">{{ product.title }}</a>
          </h5>
          
          <!-- Travel/Tour Specific Information -->
          {% if product.metafields.custom.destination %}
            <div class="destination-metafield mb-2">
              <i class="bi bi-geo-alt-fill text-primary me-1"></i>
              <span class="destination-label">Destination:</span> 
              <span class="destination-value">{{ product.metafields.custom.destination }}</span>
            </div>
            
            <div class="additional-info d-flex flex-wrap mb-3">
              {% if product.metafields.custom.people_allowed %}
                <div class="people-allowed me-3 mb-1">
                  <i class="bi bi-people-fill me-1"></i>
                  <span>{{ product.metafields.custom.people_allowed }} people</span>
                </div>
              {% endif %}
              
              {% if product.metafields.custom.days_allowed %}
                <div class="days-allowed mb-1">
                  <i class="bi bi-calendar-week me-1"></i>
                  <span>{{ product.metafields.custom.days_allowed }} days</span>
                </div>
              {% endif %}
            </div>
          {% endif %}

          <!-- Product Description - Moved outside conditional -->
          {% if show_description != false %}
            {% if product.description != blank %}
              <div class="product-description text-muted">
                {{ product.description | strip_html | truncatewords: 20 }}
              </div>
            {% else %}
              <div class="product-description-fallback text-muted fst-italic">
                Enter in the details to learn more...
              </div>
            {% endif %}
          {% endif %}
          
          <!-- Card Footer Buttons (moved inside for mobile) -->
          {% if show_buttons_mobile != false %}
            <div class="d-flex d-md-none mt-3 gap-2">
              <button class="btn btn-outline-secondary btn-sm btn-wishlist flex-grow-1" title="Add to Wishlist">
                <i class="bi bi-heart me-1"></i> Save
              </button>
              
              <button class="btn btn-outline-secondary btn-sm btn-quickview flex-grow-1" title="Quick View" data-product-url="{{ product.url }}">
                <i class="bi bi-eye me-1"></i> Quick View
              </button>
            </div>
          {% endif %}
        </div>
      </div>
      
      <!-- Price & Action Column (Right) -->
      <div class="col-md-3 col-lg-3 order-md-3 order-2">
        <div class="card-side-content p-3 d-flex flex-column h-100 text-md-end">
          <!-- Product Price -->
          <div class="product-price mb-3">
            {% if product.compare_at_price > product.price %}
              <span class="price-sale d-block">{{ product.price | money }}</span>
              <span class="price-compare text-decoration-line-through text-muted">{{ product.compare_at_price | money }}</span>
              <span class="price-saving text-success">
                Save {{ product.compare_at_price | minus: product.price | money }}
              </span>
            {% else %}
              <span class="price">{{ product.price | money }}</span>
            {% endif %}
          </div>
          
          <!-- Call To Action -->
          <div class="mt-auto">
            {% if show_view_details != false %}
              <a href="{{ product.url }}" class="btn btn-primary w-100 mb-2">{{ view_details_text | default: 'View Details' }}</a>
            {% endif %}
            
            {% unless product.tags contains 'tour' or product.type contains 'Tour' or show_cart_button == false %}
              {% if product.available %}
                <form class="product-form" data-product-id="{{ product.id }}">
                  <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
                  <input type="hidden" name="quantity" value="1">
                  <button type="submit" class="btn btn-outline-primary add-to-cart-btn w-100">
                    {{ add_to_cart_text | default: 'Add to Cart' }}
                  </button>
                </form>
              {% else %}
                <button class="btn btn-outline-secondary w-100" disabled>
                  {{ sold_out_text | default: 'Sold Out' }}
                </button>
              {% endif %}
            {% endunless %}
            
            <!-- Card Footer Buttons (desktop only) -->
            {% comment %} {% if show_buttons_desktop != false %}
              <div class="d-none d-md-flex justify-content-between mt-3">
                <button class="btn btn-outline-secondary btn-sm btn-wishlist" title="Add to Wishlist">
                  <i class="bi bi-heart"></i>
                </button>
                
                <button class="btn btn-outline-secondary btn-sm btn-quickview" title="Quick View" data-product-url="{{ product.url }}">
                  <i class="bi bi-eye"></i>
                </button>
                
                <button class="btn btn-outline-secondary btn-sm btn-compare" data-product-id="{{ product.id }}" title="Compare">
                  <i class="bi bi-arrow-left-right"></i>
                </button>
              </div>
            {% endif %} {% endcomment %}
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
  /* Card structure */
  .product-card {
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    border: 1px solid rgba(0,0,0,0.1);
  }
  
  .product-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 20px rgba(0,0,0,0.1) !important;
  }
  
  .product-card-horizontal .product-image-container {
    height: 100%;
    min-height: 250px;
    border-radius: 0.25rem 0 0 0.25rem;
    overflow: hidden;
    border: 1px solid rgba(0,0,0,0.05);
  }
  
  /* Card Side Content (Price Column) */
  .card-side-content {
    background-color: #f8f9fa;
    border-left: 1px solid rgba(0,0,0,0.05);
  }

  /* Image container and slideshow - increased padding for better framing */
  .product-image-container {
    position: relative;
    overflow: hidden;
    height: 250px; 
    width: 100%;
    padding: 20px; /* Increased padding from 12px to 20px */
    background-color: #ffffff;
    border-radius: 8px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .product-image-container .product-link {
    position: relative; /* Changed from absolute to relative */
    width: 100%;
    height: 210px; /* Fixed height: 250px - (2 Ã— 20px padding) */
    display: block;
    border-radius: 6px;
    overflow: hidden;
  }

  .product-image-container img {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%; 
    object-fit: cover;
    transition: opacity 0.4s ease, transform 0.4s ease;
    border-radius: 6px;
  }

  /* Primary Image */
  .primary-image {
    z-index: 1;
    opacity: 1;
  }

  /* Slideshow Styles */
  .image-slideshow {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    z-index: 2;
    transition: opacity 0.3s ease;
  }

  .product-link:hover .image-slideshow {
    opacity: 1;
  }

  .product-link:hover .primary-image {
    opacity: 0;
  }

  .product-link .primary-image {
    opacity: 1;
  }
  
  .product-link.single-image:hover .primary-image {
    opacity: 1 !important;
  }

  .slide-image {
    opacity: 0;
    transition: opacity 0.4s ease;
  }

  .slide-image.active {
    opacity: 1;
  }

  /* Slideshow Indicators */
  .slideshow-indicators {
    position: absolute;
    bottom: 10px;
    left: 0;
    right: 0;
    display: flex;
    justify-content: center;
    gap: 5px;
    z-index: 3;
  }

  .indicator-dot {
    width: 8px;
    height: 8px;
    background-color: rgba(255, 255, 255, 0.5);
    border-radius: 50%;
    cursor: pointer;
    transition: background-color 0.3s ease, transform 0.2s ease;
  }

  .indicator-dot.active {
    background-color: #fff;
    transform: scale(1.2);
  }
  
  /* Product badges */
  .badge-new, .badge-sale {
    position: absolute;
    font-size: 0.75rem;
    padding: 4px 8px;
    font-weight: 600;
    z-index: 5;
    border-radius: 4px;
  }
  
  .badge-new {
    left: 30px;
    top: 30px;
    background-color: #28a745;
    color: white;
  }
  
  .badge-sale {
    right: 30px;
    top: 30px;
    background-color: #dc3545;
    color: white;
  }

  /* Product Info Styles */
  .product-title {
    font-size: 1.1rem;
    font-weight: 600;
    line-height: 1.4;
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    max-height: 3rem;
  }
  
  .product-title a:hover {
    color: #0056b3 !important;
  }
  
  /* Pricing */
  .product-price {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    text-align: center;
    font-weight: 600;
  }
  
  .product-price span {
    text-align: center;
    width: 100%;
  }
  
  .card-side-content .product-price {
    text-align: center !important;
  }
  
  .price, .price-sale {
    font-size: 1.25rem;
    color: #212529;
  }
  
  .price-sale {
    color: #dc3545;
  }
  
  .price-compare {
    font-size: 0.9rem;
    color: #6c757d;
    text-decoration: line-through;
  }
  
  .price-saving {
    font-size: 0.85rem;
    display: block;
    margin-top: 0.25rem;
  }
  
  /* Travel & Tour Info */
  .destination-metafield {
    font-size: 0.9rem;
    color: #495057;
  }
  
  .destination-label {
    font-weight: 600;
  }
  
  .additional-info {
    font-size: 0.85rem;
    color: #6c757d;
  }
  
  .people-allowed, .days-allowed {
    display: flex;
    align-items: center;
  }
  
  .product-description, .product-description-fallback {
    font-size: 0.85rem;
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    max-height: 4rem;
    margin-bottom: 0.5rem;
  }
  
  /* Cart animation */
  .add-to-cart-btn.loading {
    position: relative;
    color: transparent;
  }
  
  .add-to-cart-btn.loading::after {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    width: 1rem;
    height: 1rem;
    margin: -0.5rem 0 0 -0.5rem;
    border: 2px solid rgba(0,0,0,0.2);
    border-top-color: currentColor;
    border-radius: 50%;
    animation: button-loading-spinner 0.8s linear infinite;
  }
  
  @keyframes button-loading-spinner {
    from {
      transform: rotate(0turn);
    }
    to {
      transform: rotate(1turn);
    }
  }
  
  /* Responsive adjustments */
  @media (max-width: 767.98px) {
    .product-card-horizontal .product-image-container {
      height: 250px;
      border-radius: 0.25rem 0.25rem 0 0;
    }
    
    .card-side-content {
      background-color: transparent;
      border-left: none;
      border-bottom: 1px solid rgba(0,0,0,0.05);
      text-align: center;
    }
    
    .product-price {
      padding-top: 0.5rem;
      padding-bottom: 0.5rem;
      text-align: center;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function(){
    // Mark single-image products
    document.querySelectorAll('.product-link').forEach(link => {
      const slideshow = link.querySelector('.image-slideshow');
      if (!slideshow || slideshow.querySelectorAll('.slide-image').length <= 1) {
        link.classList.add('single-image');
      }
    });
    
    // Initialize product slideshows
    initProductSlideshows();
    
    // Initialize add to cart buttons
    initAddToCart();
  });

  function initProductSlideshows(){
    const productCards = document.querySelectorAll('.product-card');

    productCards.forEach(card => {
      const slideshow = card.querySelector('.image-slideshow');
      if(!slideshow){
        return;
      }

      const slides = slideshow.querySelectorAll('.slide-image');
      const dots = slideshow.querySelectorAll('.indicator-dot');
      const productLink = card.querySelector('.product-link');

      if(slides.length <= 1){
        if(productLink){
          productLink.addEventListener('mouseenter', function(){
            slideshow.style.opacity = '0';
          });
        }
        return;
      }

      let currentIndex = 0;
      let slideshowInterval;
      let isHovering = false;

      dots.forEach(dot => {
        dot.addEventListener('click', function(e){
          e.preventDefault();
          e.stopPropagation();

          const index = parseInt(this.dataset.index);
          activateSlide(index);
        });
      });

      productLink.addEventListener('mouseenter', function(){
        isHovering = true;
        startSlideshow();
      });

      productLink.addEventListener('mouseleave', function(){
        isHovering = false;
        stopSlideshow();
        activateSlide(0);
      });

      function activateSlide(index){
        currentIndex = index;
        slides.forEach(slide => slide.classList.remove('active'));
        slides[currentIndex].classList.add('active');

        dots.forEach(dot => dot.classList.remove('active'));
        dots[currentIndex].classList.add('active');
      }

      function startSlideshow(){
        if(slideshowInterval){
          clearInterval(slideshowInterval);
        }

        slideshowInterval = setInterval(()=>{
          if(!isHovering){
            clearInterval(slideshowInterval);
            return;
          }

          currentIndex = (currentIndex+1) % slides.length;
          activateSlide(currentIndex);
        }, 1000);
      }

      function stopSlideshow(){
        if(slideshowInterval){
          clearInterval(slideshowInterval);
          slideshowInterval = null;
        }
      }
    });
  }
  
  function initAddToCart() {
    const forms = document.querySelectorAll('.product-form');
    
    forms.forEach(form => {
      form.addEventListener('submit', function(e) {
        e.preventDefault();
        
        const submitButton = this.querySelector('button[type="submit"]');
        const formData = new FormData(this);
        const originalButtonText = submitButton.textContent;
        
        // Show loading state
        submitButton.classList.add('loading');
        submitButton.disabled = true;
        
        fetch('/cart/add.js', {
          method: 'POST',
          body: formData
        })
        .then(response => response.json())
        .then(data => {
          // Success state
          submitButton.classList.remove('loading');
          submitButton.textContent = 'Added to Cart';
          submitButton.classList.remove('btn-outline-primary');
          submitButton.classList.add('btn-success');
          
          // Update cart count
          updateCartCount();
          
          // Reset button after delay
          setTimeout(() => {
            submitButton.textContent = originalButtonText;
            submitButton.classList.remove('btn-success');
            submitButton.classList.add('btn-outline-primary');
            submitButton.disabled = false;
          }, 2000);
        })
        .catch(error => {
          // Error state
          submitButton.classList.remove('loading');
          submitButton.textContent = 'Error';
          submitButton.classList.remove('btn-outline-primary');
          submitButton.classList.add('btn-danger');
          
          console.error('Error:', error);
          
          // Reset button after delay
          setTimeout(() => {
            submitButton.textContent = originalButtonText;
            submitButton.classList.remove('btn-danger');
            submitButton.classList.add('btn-outline-primary');
            submitButton.disabled = false;
          }, 2000);
        });
      });
    });
  }
  
  function updateCartCount() {
    fetch('/cart.js')
      .then(response => response.json())
      .then(cart => {
        // Update all cart count elements
        const cartCountElements = document.querySelectorAll('.cart-count');
        if (cartCountElements.length > 0) {
          cartCountElements.forEach(el => {
            el.textContent = cart.item_count;
            
            // Add animation/highlight effect
            el.classList.add('updated');
            setTimeout(() => {
              el.classList.remove('updated');
            }, 1000);
          });
        }
      })
      .catch(error => console.error('Error fetching cart:', error));
  }
</script>